{
 "program": [
  {
   "inSTEP": "1",
   "setA": 1,
   "line": 16,
   "fileName": "main.zkasm",
   "lineStr": "        STEP => A"
  },
  {
   "CONST": "0",
   "assert": 1,
   "line": 17,
   "fileName": "main.zkasm",
   "lineStr": "        0                                   :ASSERT ; Ensure it is the beginning of the execution"
  },
  {
   "inB": "1",
   "offset": 0,
   "mOp": 1,
   "mWR": 1,
   "line": 18,
   "offsetLabel": "oldStateRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        B                                   :MSTORE(oldStateRoot)"
  },
  {
   "inC": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 19,
   "offsetLabel": "oldAccInputHash",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        C                                   :MSTORE(oldAccInputHash)"
  },
  {
   "inSP": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 20,
   "offsetLabel": "oldNumBatch",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        SP                                  :MSTORE(oldNumBatch)"
  },
  {
   "inGAS": "1",
   "offset": 7,
   "mOp": 1,
   "mWR": 1,
   "line": 21,
   "offsetLabel": "chainID",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        GAS                                 :MSTORE(chainID)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getGlobalExitRoot",
    "params": []
   },
   "inFREE": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 23,
   "offsetLabel": "globalExitRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        ${getGlobalExitRoot()}              :MSTORE(globalExitRoot)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getSequencerAddr",
    "params": []
   },
   "inFREE": "1",
   "offset": 4,
   "mOp": 1,
   "mWR": 1,
   "line": 24,
   "offsetLabel": "sequencerAddr",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        ${getSequencerAddr()}               :MSTORE(sequencerAddr)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTimestamp",
    "params": []
   },
   "inFREE": "1",
   "offset": 6,
   "mOp": 1,
   "mWR": 1,
   "line": 25,
   "offsetLabel": "timestamp",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        ${getTimestamp()}                   :MSTORE(timestamp)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTxsLen",
    "params": []
   },
   "inFREE": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 26,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        ${getTxsLen()}                      :MSTORE(batchL2DataLength)"
  },
  {
   "inB": "1",
   "setSR": 1,
   "line": 28,
   "fileName": "main.zkasm",
   "lineStr": "        B => SR ;set initial state root"
  },
  {
   "inSP": "1",
   "CONST": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 31,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onStartBatch"
      },
      {
       "op": "getReg",
       "regName": "C"
      }
     ]
    }
   ],
   "offsetLabel": "newNumBatch",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        SP + 1                              :MSTORE(newNumBatch)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 41,
   "offsetLabel": "globalExitRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                                  :MLOAD(globalExitRoot)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 42,
   "fileName": "main.zkasm",
   "lineStr": "        0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 28,
   "useElseAddr": 1,
   "elseAddr": 15,
   "line": 43,
   "jmpAddrLabel": "skipSetGlobalExitRoot",
   "elseAddrLabel": "next",
   "fileName": "main.zkasm",
   "lineStr": "        $                                       :EQ, JMPC(skipSetGlobalExitRoot)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 47,
   "fileName": "main.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 48,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => E                                  :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 49,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        E+1 => E                                :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 51,
   "fileName": "main.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 52,
   "fileName": "main.zkasm",
   "lineStr": "        A                                       :HASHK(E)"
  },
  {
   "CONST": "0",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 53,
   "fileName": "main.zkasm",
   "lineStr": "        %GLOBAL_EXIT_ROOT_STORAGE_POS           :HASHK(E) ; Storage position of the global exit root map"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 54,
   "fileName": "main.zkasm",
   "lineStr": "        HASHPOS                                 :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 55,
   "fileName": "main.zkasm",
   "lineStr": "        $ => C                                  :HASHKDIGEST(E)"
  },
  {
   "CONSTL": "995052982721906769083524541345745747257928364082",
   "setA": 1,
   "line": 57,
   "fileName": "main.zkasm",
   "lineStr": "        %ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2 => A"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 58,
   "fileName": "main.zkasm",
   "lineStr": "        %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 26,
   "useElseAddr": 1,
   "elseAddr": 28,
   "line": 62,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "skipSetGlobalExitRoot",
   "fileName": "main.zkasm",
   "lineStr": "        $ => D                                  :SLOAD, JMPNZ(skipSetGlobalExitRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 6,
   "mOp": 1,
   "mWR": 0,
   "line": 64,
   "offsetLabel": "timestamp",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => D                                  :MLOAD(timestamp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 65,
   "fileName": "main.zkasm",
   "lineStr": "        $ => SR                                 :SSTORE ; Store 'timestamp' in storage position 'keccak256(globalExitRoot, 0)'"
  },
  {
   "inSR": "1",
   "offset": 33,
   "mOp": 1,
   "mWR": 1,
   "line": 68,
   "offsetLabel": "batchSR",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        SR                                      :MSTORE(batchSR)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 70,
   "fileName": "main.zkasm",
   "lineStr": "        %LAST_TX_STORAGE_POS => C"
  },
  {
   "CONSTL": "1554098974",
   "setA": 1,
   "line": 71,
   "fileName": "main.zkasm",
   "lineStr": "        %ADDRESS_SYSTEM => A"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 72,
   "fileName": "main.zkasm",
   "lineStr": "        %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "line": 73,
   "fileName": "main.zkasm",
   "lineStr": "        $ => D          :SLOAD"
  },
  {
   "inD": "1",
   "offset": 34,
   "mOp": 1,
   "mWR": 1,
   "line": 74,
   "offsetLabel": "txCount",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        D               :MSTORE(txCount)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 77,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A          :MLOAD(batchL2DataLength)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 80,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        A + 1                                   :MSTORE(arithA)"
  },
  {
   "CONST": "136",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 81,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "main.zkasm",
   "lineStr": "        136                                     :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 82,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => B                                  :MLOAD(arithRes1)"
  },
  {
   "inB": "1",
   "CONST": "2",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 84,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        B + 1 + %MIN_CNT_KECCAK_BATCH           :MSTORE(cntKeccakPreProcess)"
  },
  {
   "CONST": "2376",
   "inCntKeccakF": "-1",
   "setA": 1,
   "line": 85,
   "fileName": "main.zkasm",
   "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 41,
   "line": 86,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "main.zkasm",
   "lineStr": "        $                                       :LT, JMPC(outOfCountersKeccak)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 94,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        E+1 => E                            :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "0",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 95,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        0                                   :MSTORE(batchHashPos)"
  },
  {
   "inE": "1",
   "offset": 18,
   "mOp": 1,
   "mWR": 1,
   "line": 96,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        E                                   :MSTORE(batchHashDataId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 97,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                              :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "offset": 14,
   "mOp": 1,
   "mWR": 1,
   "line": 98,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "p"
      },
      {
       "op": "number",
       "num": "0"
      }
     ]
    }
   ],
   "offsetLabel": "ctxTxToUse",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        A                                   :MSTORE(ctxTxToUse) ; Points at first context to be used when processing transactions"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 103,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A          :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 104,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        A+1 => CTX      :MSTORE(lastCtxUsed)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 106,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A          :MLOAD(batchL2DataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 0,
   "line": 107,
   "offsetLabel": "batchL2DataParsed",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => C          :MLOAD(batchL2DataParsed)"
  },
  {
   "inC": "1",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 114,
   "useElseAddr": 1,
   "elseAddr": 51,
   "line": 108,
   "jmpAddrLabel": "loadTx_rlp",
   "elseAddrLabel": "endCheckRLP",
   "fileName": "main.zkasm",
   "lineStr": "        C - A           :JMPN(loadTx_rlp, endCheckRLP)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 52,
   "line": 110,
   "jmpAddrLabel": "txLoop",
   "fileName": "main.zkasm",
   "lineStr": "                        :JMP(txLoop)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 118,
   "offsetLabel": "pendingTxs",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A          :MLOAD(pendingTxs)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 58,
   "useElseAddr": 1,
   "elseAddr": 54,
   "line": 119,
   "offsetLabel": "pendingTxs",
   "useCTX": 0,
   "jmpAddrLabel": "processTxsEnd",
   "elseAddrLabel": "next",
   "fileName": "main.zkasm",
   "lineStr": "        A-1 => A        :MSTORE(pendingTxs), JMPN(processTxsEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "offsetLabel": "ctxTxToUse",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A          :MLOAD(ctxTxToUse) ; Load first context used by transaction"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3970,
   "line": 122,
   "offsetLabel": "ctxTxToUse",
   "useCTX": 0,
   "jmpAddrLabel": "processTx",
   "fileName": "main.zkasm",
   "lineStr": "        A+1 => CTX      :MSTORE(ctxTxToUse),JMP(processTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4882,
   "call": 1,
   "line": 125,
   "jmpAddrLabel": "updateSystemData",
   "fileName": "main.zkasm",
   "lineStr": "                        :CALL(updateSystemData)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 52,
   "line": 127,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onFinishTx"
      }
     ]
    }
   ],
   "jmpAddrLabel": "txLoop",
   "fileName": "main.zkasm",
   "lineStr": "        $${eventLog(onFinishTx)}   :JMP(txLoop)"
  },
  {
   "CONSTL": "995052982721906769083524541345745747257928364082",
   "setA": 1,
   "line": 142,
   "fileName": "main.zkasm",
   "lineStr": "        %ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2  => A"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 143,
   "fileName": "main.zkasm",
   "lineStr": "        %SMT_KEY_SC_STORAGE => B"
  },
  {
   "CONST": "1",
   "setC": 1,
   "line": 144,
   "fileName": "main.zkasm",
   "lineStr": "        %LOCAL_EXIT_ROOT_STORAGE_POS => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 145,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                                          :SLOAD"
  },
  {
   "inA": "1",
   "offset": 9,
   "mOp": 1,
   "mWR": 1,
   "line": 146,
   "offsetLabel": "newLocalExitRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        A                                               :MSTORE(newLocalExitRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 150,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(batchHashPos)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "assert": 1,
   "line": 151,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $                               :MLOAD(batchL2DataLength), ASSERT"
  },
  {
   "inA": "1",
   "setHASHPOS": 1,
   "line": 154,
   "fileName": "main.zkasm",
   "lineStr": "        A => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 155,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 157,
   "fileName": "main.zkasm",
   "lineStr": "        HASHPOS                         :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 158,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :HASHKDIGEST(E)"
  },
  {
   "inA": "1",
   "offset": 5,
   "mOp": 1,
   "mWR": 1,
   "line": 160,
   "offsetLabel": "batchHashData",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :MSTORE(batchHashData)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 163,
   "fileName": "main.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 165,
   "fileName": "main.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 166,
   "offsetLabel": "oldAccInputHash",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(oldAccInputHash)"
  },
  {
   "inA": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 167,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :HASHK(0)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 5,
   "mOp": 1,
   "mWR": 0,
   "line": 169,
   "offsetLabel": "batchHashData",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(batchHashData)"
  },
  {
   "inA": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 170,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :HASHK(0)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 172,
   "offsetLabel": "globalExitRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(globalExitRoot)"
  },
  {
   "inA": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 173,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :HASHK(0)"
  },
  {
   "CONST": "8",
   "setD": 1,
   "line": 175,
   "fileName": "main.zkasm",
   "lineStr": "        8 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 6,
   "mOp": 1,
   "mWR": 0,
   "line": 176,
   "offsetLabel": "timestamp",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(timestamp)"
  },
  {
   "inA": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 177,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :HASHK(0)"
  },
  {
   "CONST": "20",
   "setD": 1,
   "line": 179,
   "fileName": "main.zkasm",
   "lineStr": "        20 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 180,
   "offsetLabel": "sequencerAddr",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => A                          :MLOAD(sequencerAddr)"
  },
  {
   "inA": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 181,
   "fileName": "main.zkasm",
   "lineStr": "        A                               :HASHK(0)"
  },
  {
   "inHASHPOS": "1",
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 183,
   "fileName": "main.zkasm",
   "lineStr": "        HASHPOS                         :HASHKLEN(0)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 0,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 185,
   "fileName": "main.zkasm",
   "lineStr": "        $ => C                          :HASHKDIGEST(0)"
  },
  {
   "inC": "1",
   "offset": 8,
   "mOp": 1,
   "mWR": 1,
   "line": 186,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onFinishBatch"
      }
     ]
    }
   ],
   "offsetLabel": "newAccInputHash",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        C                               :MSTORE(newAccInputHash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 8,
   "mOp": 1,
   "mWR": 0,
   "line": 193,
   "offsetLabel": "newAccInputHash",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => D                          :MLOAD(newAccInputHash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 9,
   "mOp": 1,
   "mWR": 0,
   "line": 194,
   "offsetLabel": "newLocalExitRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => E                          :MLOAD(newLocalExitRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 195,
   "offsetLabel": "newNumBatch",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => PC                         :MLOAD(newNumBatch)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 198,
   "offsetLabel": "oldStateRoot",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => B                          :MLOAD(oldStateRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 199,
   "offsetLabel": "oldAccInputHash",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => C                          :MLOAD(oldAccInputHash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 200,
   "offsetLabel": "oldNumBatch",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => SP                         :MLOAD(oldNumBatch)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setGAS": 1,
   "offset": 7,
   "mOp": 1,
   "mWR": 0,
   "line": 201,
   "offsetLabel": "chainID",
   "useCTX": 0,
   "fileName": "main.zkasm",
   "lineStr": "        $ => GAS                        :MLOAD(chainID)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 95,
   "line": 203,
   "jmpAddrLabel": "finalWait",
   "fileName": "main.zkasm",
   "lineStr": "                                        :JMP(finalWait)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "beforeLast",
    "params": []
   },
   "inFREE": "1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 95,
   "useElseAddr": 1,
   "elseAddr": 96,
   "line": 2,
   "jmpAddrLabel": "finalWait",
   "elseAddrLabel": "next",
   "fileName": "end.zkasm",
   "lineStr": "    ${beforeLast()}                                       :JMPN(finalWait)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "setD": 1,
   "setE": 1,
   "setCTX": 1,
   "setPC": 1,
   "setMAXMEM": 1,
   "setSR": 1,
   "setHASHPOS": 1,
   "setRR": 1,
   "setRCX": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 0,
   "line": 4,
   "jmpAddrLabel": "start",
   "fileName": "end.zkasm",
   "lineStr": "    0 => A, D, E, CTX, PC, MAXMEM, SR, HASHPOS, RR, RCX   :JMP(start)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 4,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => HASHPOS                    :MLOAD(batchHashPos)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 5,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 6,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inHASHPOS": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 7,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        HASHPOS                         :MSTORE(batchHashPos)"
  },
  {
   "inC": "1",
   "setHASHPOS": 1,
   "line": 8,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        C => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 9,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed), RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 13,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(batchL2DataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 0,
   "line": 14,
   "offsetLabel": "batchL2DataParsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => B                          :MLOAD(batchL2DataParsed)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "inC": "-1",
   "inD": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 258,
   "useElseAddr": 1,
   "elseAddr": 106,
   "line": 15,
   "jmpAddrLabel": "invalidTxRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        A - B - C - D                   :JMPN(invalidTxRLP)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTxs",
    "params": [
     {
      "op": "getVar",
      "varName": "p"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 16,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "getVar",
       "varName": "p"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        ${getTxs(p,D)} => A"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 18,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "                                        :RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 22,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(batchL2DataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 0,
   "line": 23,
   "offsetLabel": "batchL2DataParsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        $ => B                          :MLOAD(batchL2DataParsed)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "inC": "-1",
   "inD": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 258,
   "useElseAddr": 1,
   "elseAddr": 111,
   "line": 24,
   "jmpAddrLabel": "invalidTxRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        A - B - C - D                   :JMPN(invalidTxRLP)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTxs",
    "params": [
     {
      "op": "getVar",
      "varName": "p"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 25,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "getVar",
       "varName": "p"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        ${getTxs(p,D)} => A"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 27,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 28,
   "fileName": "load-tx-rlp-utils.zkasm",
   "lineStr": "        C + D => C                      :RETURN"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 19,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 22,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 23,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 25,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 33,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 34,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-192",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 258,
   "useElseAddr": 1,
   "elseAddr": 121,
   "line": 35,
   "jmpAddrLabel": "invalidTxRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xc0                        :JMPN(invalidTxRLP)"
  },
  {
   "inA": "1",
   "CONST": "-248",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 125,
   "useElseAddr": 1,
   "elseAddr": 122,
   "line": 36,
   "jmpAddrLabel": "shortList",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xf8                        :JMPN(shortList)"
  },
  {
   "inA": "1",
   "CONST": "-247",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 39,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xf7 => D                   :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 40,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 126,
   "line": 41,
   "jmpAddrLabel": "endList",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :JMP(endList)"
  },
  {
   "inA": "1",
   "CONST": "-192",
   "setA": 1,
   "line": 43,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xc0 => A"
  },
  {
   "inA": "1",
   "inC": "1",
   "setB": 1,
   "offset": 40,
   "mOp": 1,
   "mWR": 1,
   "line": 46,
   "offsetLabel": "txRLPLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A + C => B                      :MSTORE(txRLPLength)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 48,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B + 1                           :MSTORE(arithA)"
  },
  {
   "CONST": "136",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 49,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        136                             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 50,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => B                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 51,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => D                          :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inB": "-1",
   "inD": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 256,
   "useElseAddr": 1,
   "elseAddr": 132,
   "line": 52,
   "jmpAddrLabel": "handleOOCKatRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - B - D - 1:JMPN(handleOOCKatRLP)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 57,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 58,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 141,
   "useElseAddr": 1,
   "elseAddr": 135,
   "line": 59,
   "jmpAddrLabel": "endNonce",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(endNonce)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 137,
   "useElseAddr": 1,
   "elseAddr": 136,
   "line": 60,
   "jmpAddrLabel": "nonce0",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(nonce0)"
  },
  {
   "inA": "1",
   "CONST": "-137",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 138,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 61,
   "jmpAddrLabel": "shortNonce",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x89                        :JMPN(shortNonce, invalidTxRLP)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 141,
   "line": 64,
   "offsetLabel": "lengthNonce",
   "useCTX": 1,
   "jmpAddrLabel": "endNonce",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0  => A                         :MSTORE(lengthNonce), JMP(endNonce)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "line": 67,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D"
  },
  {
   "inD": "1",
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 68,
   "offsetLabel": "lengthNonce",
   "useCTX": 1,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D                               :MSTORE(lengthNonce), CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 69,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 4,
   "mOp": 1,
   "mWR": 1,
   "line": 72,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txNonce)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 78,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 79,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 152,
   "useElseAddr": 1,
   "elseAddr": 145,
   "line": 80,
   "jmpAddrLabel": "endGasPrice",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(endGasPrice)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 147,
   "useElseAddr": 1,
   "elseAddr": 146,
   "line": 81,
   "jmpAddrLabel": "gasPrice0",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(gasPrice0)"
  },
  {
   "inA": "1",
   "CONST": "-161",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 148,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 82,
   "jmpAddrLabel": "shortGasPrice",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xa1                        :JMPN(shortGasPrice, invalidTxRLP)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 152,
   "line": 85,
   "jmpAddrLabel": "endGasPrice",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => A                          :JMP(endGasPrice)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "line": 88,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 152,
   "useElseAddr": 1,
   "elseAddr": 150,
   "line": 89,
   "jmpAddrLabel": "endGasPrice",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D - 1                           :JMPN(endGasPrice)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 90,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 91,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 5,
   "mOp": 1,
   "mWR": 1,
   "line": 94,
   "offsetLabel": "txGasPriceRLP",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txGasPriceRLP)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 100,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 101,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 163,
   "useElseAddr": 1,
   "elseAddr": 156,
   "line": 102,
   "jmpAddrLabel": "endGasLimit",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(endGasLimit)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 158,
   "useElseAddr": 1,
   "elseAddr": 157,
   "line": 103,
   "jmpAddrLabel": "gasLimit0",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(gasLimit0)"
  },
  {
   "inA": "1",
   "CONST": "-161",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 159,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 104,
   "jmpAddrLabel": "shortGasLimit",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xa1                        :JMPN(shortGasLimit, invalidTxRLP)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 163,
   "useElseAddr": 1,
   "elseAddr": 159,
   "line": 107,
   "jmpAddrLabel": "endGasLimit",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => A                          :JMPN(endGasLimit)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "line": 110,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 163,
   "useElseAddr": 1,
   "elseAddr": 161,
   "line": 111,
   "jmpAddrLabel": "endGasLimit",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D - 1                           :JMPN(endGasLimit)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 112,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 113,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 0,
   "mOp": 1,
   "mWR": 1,
   "line": 116,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txGasLimit)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 121,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 122,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 258,
   "useElseAddr": 1,
   "elseAddr": 167,
   "line": 123,
   "jmpAddrLabel": "invalidTxRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(invalidTxRLP)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 170,
   "useElseAddr": 1,
   "elseAddr": 168,
   "line": 124,
   "jmpAddrLabel": "noTo",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(noTo)"
  },
  {
   "inA": "1",
   "CONST": "-148",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 258,
   "useElseAddr": 1,
   "elseAddr": 169,
   "line": 125,
   "jmpAddrLabel": "invalidTxRLP",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x94                        :JMPN(invalidTxRLP)"
  },
  {
   "inA": "1",
   "CONST": "-149",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 171,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 126,
   "jmpAddrLabel": "shortTo",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x95                        :JMPN(shortTo, invalidTxRLP)"
  },
  {
   "CONST": "1",
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 175,
   "line": 129,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "endTo",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1                               :MSTORE(isCreateContract), JMP(endTo)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 132,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 133,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 134,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txDestAddr)"
  },
  {
   "inA": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 135,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(storageAddr)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 143,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 144,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 186,
   "useElseAddr": 1,
   "elseAddr": 178,
   "line": 145,
   "jmpAddrLabel": "endValue",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(endValue)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 180,
   "useElseAddr": 1,
   "elseAddr": 179,
   "line": 146,
   "jmpAddrLabel": "value0",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(value0)"
  },
  {
   "inA": "1",
   "CONST": "-161",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 182,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 147,
   "jmpAddrLabel": "shortValue",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xa1                        :JMPN(shortValue, invalidTxRLP)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 150,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 186,
   "useElseAddr": 1,
   "elseAddr": 182,
   "line": 151,
   "jmpAddrLabel": "endValue",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :JMPN(endValue)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "line": 154,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 186,
   "useElseAddr": 1,
   "elseAddr": 184,
   "line": 155,
   "jmpAddrLabel": "endValue",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D - 1                           :JMPN(endValue)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 156,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 157,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 160,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txValue)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 165,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
  },
  {
   "inD": "1",
   "offset": 38,
   "mOp": 1,
   "mWR": 1,
   "line": 166,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D                               :MSTORE(dataStarts)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 167,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D"
  },
  {
   "CONST": "1024",
   "setSP": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 168,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        %CALLDATA_OFFSET => SP          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 169,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 196,
   "useElseAddr": 1,
   "elseAddr": 193,
   "line": 170,
   "jmpAddrLabel": "veryShortData",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(veryShortData)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 217,
   "useElseAddr": 1,
   "elseAddr": 194,
   "line": 171,
   "jmpAddrLabel": "endData",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(endData)"
  },
  {
   "inA": "1",
   "CONST": "-184",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 199,
   "useElseAddr": 1,
   "elseAddr": 195,
   "line": 172,
   "jmpAddrLabel": "shortData",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xb8                        :JMPN(shortData)"
  },
  {
   "inA": "1",
   "CONST": "-192",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 202,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 173,
   "jmpAddrLabel": "longData",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xc0                        :JMPN(longData, invalidTxRLP)"
  },
  {
   "CONST": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "line": 176,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1                               :MSTORE(txCalldataLen)"
  },
  {
   "CONST": "31",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 177,
   "jmpAddrLabel": "SHLarith",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        31 => D                         :CALL(SHLarith)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 217,
   "line": 178,
   "jmpAddrLabel": "endData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(SP++), JMP(endData)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 181,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
  },
  {
   "inD": "1",
   "offset": 38,
   "mOp": 1,
   "mWR": 1,
   "line": 182,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D                               :MSTORE(dataStarts)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setB": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 207,
   "line": 183,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "jmpAddrLabel": "readData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => B                   :MSTORE(txCalldataLen), JMP(readData)"
  },
  {
   "inA": "1",
   "CONST": "-183",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 186,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0xb7 => D                   :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 187,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 188,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
  },
  {
   "inD": "1",
   "offset": 38,
   "mOp": 1,
   "mWR": 1,
   "line": 189,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D                               :MSTORE(dataStarts)"
  },
  {
   "inA": "1",
   "setB": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "line": 190,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A => B                          :MSTORE(txCalldataLen)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 193,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "inB": "1",
   "inD": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 212,
   "useElseAddr": 1,
   "elseAddr": 209,
   "line": 194,
   "jmpAddrLabel": "readDataFinal",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B - D                           :JMPN(readDataFinal)"
  },
  {
   "inB": "1",
   "inD": "-1",
   "offset": 41,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 195,
   "offsetLabel": "txDataRead",
   "useCTX": 0,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B - D                           :MSTORE(txDataRead), CALL(addHashTx)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4802,
   "call": 1,
   "line": 196,
   "jmpAddrLabel": "addBatchHashByteByByte",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(SP++), CALL(addBatchHashByteByByte)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 41,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 207,
   "line": 197,
   "offsetLabel": "txDataRead",
   "useCTX": 0,
   "jmpAddrLabel": "readData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txDataRead), JMP(readData)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 217,
   "useElseAddr": 1,
   "elseAddr": 213,
   "line": 200,
   "jmpAddrLabel": "endData",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B - 1                           :JMPN(endData)"
  },
  {
   "inB": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 201,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B => D                          :CALL(addHashTx)"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 202,
   "jmpAddrLabel": "SHLarith",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 - D => D                     :CALL(SHLarith)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 203,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(SP)"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4802,
   "call": 1,
   "line": 204,
   "jmpAddrLabel": "addBatchHashByteByByte",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 - D => D                     :CALL(addBatchHashByteByByte)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 208,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 40,
   "mOp": 1,
   "mWR": 0,
   "line": 209,
   "offsetLabel": "txRLPLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txRLPLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 235,
   "useElseAddr": 1,
   "elseAddr": 220,
   "line": 210,
   "jmpAddrLabel": "setPreEIP155Flag",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $                               :EQ,JMPC(setPreEIP155Flag)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 215,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 216,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 230,
   "useElseAddr": 1,
   "elseAddr": 223,
   "line": 217,
   "jmpAddrLabel": "endChainId",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80                        :JMPN(endChainId)"
  },
  {
   "inA": "1",
   "CONST": "-129",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 225,
   "useElseAddr": 1,
   "elseAddr": 224,
   "line": 218,
   "jmpAddrLabel": "chainId0",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x81                        :JMPN(chainId0)"
  },
  {
   "inA": "1",
   "CONST": "-137",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 226,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 219,
   "jmpAddrLabel": "shortChainId",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x89                        :JMPN(shortChainId, invalidTxRLP)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 230,
   "line": 222,
   "jmpAddrLabel": "endChainId",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0 => A                          :JMP(endChainId)"
  },
  {
   "inA": "1",
   "CONST": "-128",
   "setD": 1,
   "line": 226,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A - 0x80 => D"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 230,
   "useElseAddr": 1,
   "elseAddr": 228,
   "line": 227,
   "jmpAddrLabel": "endChainId",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D - 1                           :JMPN(endChainId)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 228,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 229,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "inA": "1",
   "offset": 6,
   "mOp": 1,
   "mWR": 1,
   "line": 232,
   "offsetLabel": "txChainId",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txChainId)"
  },
  {
   "CONST": "2",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 108,
   "call": 1,
   "line": 236,
   "jmpAddrLabel": "addHashTx",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        2 => D                          :CALL(addHashTx)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 237,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "                                        :CALL(addBatchHashData)"
  },
  {
   "CONST": "32896",
   "setB": 1,
   "line": 238,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        0x8080 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 236,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 239,
   "jmpAddrLabel": "sizeVerification",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $                               :EQ,JMPC(sizeVerification, invalidTxRLP)"
  },
  {
   "CONST": "1",
   "offset": 39,
   "mOp": 1,
   "mWR": 1,
   "line": 242,
   "offsetLabel": "isPreEIP155",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1                               :MSTORE(isPreEIP155)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 246,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 40,
   "mOp": 1,
   "mWR": 0,
   "line": 247,
   "offsetLabel": "txRLPLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txRLPLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 239,
   "useElseAddr": 1,
   "elseAddr": 258,
   "line": 248,
   "jmpAddrLabel": "sizeVerificationSuccess",
   "elseAddrLabel": "invalidTxRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $                               :EQ,JMPC(sizeVerificationSuccess, invalidTxRLP)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 250,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        HASHPOS                         :HASHKLEN(E)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 103,
   "call": 1,
   "line": 258,
   "jmpAddrLabel": "getTxBytes",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 => D                         :CALL(getTxBytes)"
  },
  {
   "inA": "1",
   "offset": 8,
   "mOp": 1,
   "mWR": 1,
   "line": 259,
   "offsetLabel": "txR",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txR)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 260,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 103,
   "call": 1,
   "line": 264,
   "jmpAddrLabel": "getTxBytes",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 => D                         :CALL(getTxBytes)"
  },
  {
   "inA": "1",
   "offset": 7,
   "mOp": 1,
   "mWR": 1,
   "line": 265,
   "offsetLabel": "txS",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txS)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 266,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 103,
   "call": 1,
   "line": 270,
   "jmpAddrLabel": "getTxBytes",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        1 => D                          :CALL(getTxBytes)"
  },
  {
   "inA": "1",
   "offset": 9,
   "mOp": 1,
   "mWR": 1,
   "line": 271,
   "offsetLabel": "txV",
   "useCTX": 1,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txV)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 272,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 0,
   "line": 278,
   "offsetLabel": "batchL2DataParsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => A                          :MLOAD(batchL2DataParsed)"
  },
  {
   "inA": "1",
   "inC": "1",
   "setA": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 1,
   "line": 279,
   "offsetLabel": "batchL2DataParsed",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A + C => A                      :MSTORE(batchL2DataParsed)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 281,
   "offsetLabel": "pendingTxs",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => A                          :MLOAD(pendingTxs)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "line": 282,
   "offsetLabel": "pendingTxs",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A + 1 => A                      :MSTORE(pendingTxs)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 284,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => A                          :HASHKDIGEST(E)"
  },
  {
   "inA": "1",
   "offset": 11,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 46,
   "line": 285,
   "offsetLabel": "txHash",
   "useCTX": 1,
   "jmpAddrLabel": "txLoopRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :MSTORE(txHash), JMP(txLoopRLP)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 257,
   "line": 291,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCB"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleOOCatRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $${eventLog(onError, OOCB)}      :JMP(handleOOCatRLP)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 257,
   "line": 293,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCK"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleOOCatRLP",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $${eventLog(onError, OOCK)}      :JMP(handleOOCatRLP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "line": 295,
   "offsetLabel": "batchSR",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => SR                         :MLOAD(batchSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 299,
   "offsetLabel": "batchL2DataLength",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => B                          :MLOAD(batchL2DataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 300,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => C                          :MLOAD(batchHashPos)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 301,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => HASHPOS                    :MLOAD(batchHashPos)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 302,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "inB": "1",
   "inC": "-1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 267,
   "useElseAddr": 1,
   "elseAddr": 263,
   "line": 305,
   "jmpAddrLabel": "finalAppendTxs",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B - C - 32                      :JMPN(finalAppendTxs)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 306,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTxs",
    "params": [
     {
      "op": "getVar",
      "varName": "p"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 307,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "getVar",
       "varName": "p"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        ${getTxs(p,D)} => A"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 309,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 262,
   "line": 310,
   "jmpAddrLabel": "appendTxs",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C + D => C                      :JMP(appendTxs)"
  },
  {
   "inB": "1",
   "inC": "-1",
   "setD": 1,
   "line": 313,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        B - C => D"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 272,
   "useElseAddr": 1,
   "elseAddr": 269,
   "line": 314,
   "jmpAddrLabel": "endAppendTxs",
   "elseAddrLabel": "next",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        D - 1                           :JMPN(endAppendTxs)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getTxs",
    "params": [
     {
      "op": "getVar",
      "varName": "p"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 315,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "getVar",
       "varName": "p"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        ${getTxs(p,D)} => A"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 317,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setC": 1,
   "line": 318,
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        C + D => C"
  },
  {
   "inHASHPOS": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 58,
   "line": 321,
   "offsetLabel": "batchHashPos",
   "useCTX": 0,
   "jmpAddrLabel": "processTxsEnd",
   "fileName": "load-tx-rlp.zkasm",
   "lineStr": "        HASHPOS                         :MSTORE(batchHashPos),JMP(processTxsEnd)"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 274,
   "line": 13,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 275,
   "line": 14,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 276,
   "line": 17,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 277,
   "line": 20,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 23,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 24,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 25,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 0,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 28,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $               :ADD, MSTORE(SP++), JMP(readCode)"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 282,
   "line": 41,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 283,
   "line": 42,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 284,
   "line": 45,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 285,
   "line": 48,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 50,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 51,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 52,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [b => B]"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 54,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 55,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 56,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => E          :MLOAD(arithRes1)"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 57,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [a * b(E) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 293,
   "line": 70,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 294,
   "line": 71,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 295,
   "line": 73,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 296,
   "line": 75,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 76,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 77,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 78,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 79,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => E          :SUB"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 80,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [a - b(E) => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 302,
   "line": 94,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 303,
   "line": 95,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 304,
   "line": 96,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 305,
   "line": 99,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 306,
   "line": 101,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 103,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 104,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP--); [a => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 105,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP); [b => A]"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 107,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 108,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 109,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 110,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a / b(B) => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 314,
   "line": 124,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524280",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 315,
   "line": 125,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 8 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 316,
   "line": 126,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 317,
   "line": 128,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 318,
   "line": 130,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 132,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4279,
   "call": 1,
   "line": 133,
   "jmpAddrLabel": "abs",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--), CALL(abs); [a => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 134,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inB": "1",
   "setC": 1,
   "line": 135,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4279,
   "call": 1,
   "line": 136,
   "jmpAddrLabel": "abs",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(abs); [b => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
  },
  {
   "inC": "1",
   "inB": "-1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 324,
   "useElseAddr": 1,
   "elseAddr": 328,
   "line": 138,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSDIVNeg",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C - B           :JMPNZ(opSDIVNeg)"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 139,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 140,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 141,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 142,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a / b(B) => SP]"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 145,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 146,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 147,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 148,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 149,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :SUB; A - B => A"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 150,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [a / b(A) => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 335,
   "line": 164,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 336,
   "line": 165,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 337,
   "line": 166,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 338,
   "line": 168,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 339,
   "line": 170,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 171,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 172,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP--); [a => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 173,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP); [b => A]"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 175,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 176,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 177,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => C          :MLOAD(arithRes2)"
  },
  {
   "inC": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 178,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 347,
   "line": 192,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524280",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 348,
   "line": 193,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 8 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 349,
   "line": 194,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 350,
   "line": 196,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 351,
   "line": 198,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 199,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4279,
   "call": 1,
   "line": 200,
   "jmpAddrLabel": "abs",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--), CALL(abs); [a => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 201,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inB": "1",
   "setC": 1,
   "line": 202,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4279,
   "call": 1,
   "line": 203,
   "jmpAddrLabel": "abs",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(abs); [b => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 205,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 206,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 207,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes2)"
  },
  {
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 361,
   "useElseAddr": 1,
   "elseAddr": 360,
   "line": 209,
   "jmpAddrLabel": "opSMODNeg",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    -C              :JMPN(opSMODNeg)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 210,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 213,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 214,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :SUB; A - B => A"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 215,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 365,
   "line": 229,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524284",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 366,
   "line": 230,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388328",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 367,
   "line": 231,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 80 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-8",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 368,
   "line": 233,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_MID_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 369,
   "line": 235,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 236,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 237,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 238,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_addMod"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 242,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 0,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 375,
   "useElseAddr": 1,
   "elseAddr": 374,
   "line": 243,
   "jmpAddrLabel": "AddModJumpCarry",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :ADD, JMPC(AddModJumpCarry) ; or arith"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 244,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 248,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 249,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP); [N => A]"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 250,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    2 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 387,
   "useElseAddr": 1,
   "elseAddr": 379,
   "line": 251,
   "jmpAddrLabel": "zeroOneAddMod",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $               :LT, JMPC(zeroOneAddMod)"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_addMod"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 253,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    ${_addMod / A} => B"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_addMod"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 255,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    ${_addMod % A} => C"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 259,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    E               :ARITH"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 260,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A => B          ; modulus"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 261,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C => A          ; addModResult"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 262,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :LT"
  },
  {
   "CONST": "1",
   "assert": 1,
   "line": 263,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    1               :ASSERT"
  },
  {
   "inC": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 264,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [(a + b) % N => SP]"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 267,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    0               :MSTORE(SP++), JMP(readCode); [0 => SP]"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 389,
   "line": 282,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-8",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 390,
   "line": 284,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_MID_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 285,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 287,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 288,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 289,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [N => C]"
  },
  {
   "CONST": "395",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4902,
   "line": 290,
   "jmpAddrLabel": "utilMULMOD",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(utilMULMOD); in: [A, B, C] out: [C: (A * B) % C]"
  },
  {
   "inC": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 291,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [C => SP]"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 397,
   "line": 305,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2    :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 398,
   "line": 306,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 399,
   "line": 309,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 310,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 313,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP--); [a => C]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 314,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B              :MLOAD(SP); [exp => B]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4307,
   "call": 1,
   "line": 317,
   "jmpAddrLabel": "getLenBytes",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "                                                    :CALL(getLenBytes) ; in: [B: number] out: [A: byte length of B]"
  },
  {
   "inGAS": "1",
   "CONST": "-10",
   "inA": "-50",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 404,
   "line": 318,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_SLOW_STEP - %EXP_BYTE_GAS * A => GAS :JMPN(outOfGas)"
  },
  {
   "inB": "1",
   "setD": 1,
   "line": 321,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B => D"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 322,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C => A"
  },
  {
   "CONST": "407",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4947,
   "line": 323,
   "jmpAddrLabel": "expAD",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    zkPC+1 => RR        :JMP(expAD) ; in: [A, D] out: [A: A ** D]"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 324,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    A                   :MSTORE(SP++), JMP(readCode) ; [a ** exp => SP]"
  },
  {
   "CONST": "262138",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 409,
   "line": 337,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 6 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 410,
   "line": 338,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 411,
   "line": 340,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 412,
   "line": 342,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 343,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 344,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 345,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP); [x => D]"
  },
  {
   "CONST": "30",
   "setA": 1,
   "line": 346,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    30 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 435,
   "useElseAddr": 1,
   "elseAddr": 417,
   "line": 348,
   "jmpAddrLabel": "opSIGNEXTENDEnd",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $               :LT, JMPC(opSIGNEXTENDEnd)"
  },
  {
   "inB": "8",
   "CONST": "7",
   "setD": 1,
   "setRR": 1,
   "line": 349,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B * 8  + 7 => D, RR; B is less than 31, no need for binary"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 350,
   "offsetLabel": "exp_num",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "                    :CALL(@exp_num + RR)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 351,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    B => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 352,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP); [x => D]"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 354,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    1 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 355,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => C          :SUB ; mask"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 357,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    D => B               ; number to convert"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 358,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :AND ; check sign bit"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 359,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 432,
   "useElseAddr": 1,
   "elseAddr": 427,
   "line": 361,
   "jmpAddrLabel": "opSIGNEXTENDPositive",
   "elseAddrLabel": "next",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $               :EQ, JMPC(opSIGNEXTENDPositive)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 362,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C => A ; mask"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setB": 1,
   "line": 363,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    %MAX_UINT_256 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "bin": 1,
   "binOpcode": 7,
   "line": 364,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => B          :XOR ; not mask"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 365,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 6,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 435,
   "line": 366,
   "jmpAddrLabel": "opSIGNEXTENDEnd",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => D          :OR, JMP(opSIGNEXTENDEnd)"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 369,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    C => B"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 370,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 371,
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    $ => D          :AND"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 374,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/arithmetic.zkasm",
   "lineStr": "    D               :MSTORE(SP++), JMP(readCode); [D => SP]"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 437,
   "line": 13,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 14,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => A                                     :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 439,
   "line": 15,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1   :JMPN(outOfCountersKeccak)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 440,
   "line": 16,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 441,
   "line": 19,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    SP - 1 => SP     :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-20",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 442,
   "line": 22,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS - %GAS_EXT_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 34,
   "mOp": 1,
   "mWR": 0,
   "line": 25,
   "offsetLabel": "txCount",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => B          :MLOAD(txCount)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setB": 1,
   "line": 26,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    B + 1 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 27,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP) ; [blockNumber => A]"
  },
  {
   "inB": "1",
   "inA": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 458,
   "useElseAddr": 1,
   "elseAddr": 446,
   "line": 29,
   "jmpAddrLabel": "opBLOCKHASHzero",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    B - A - 1       :JMPN(opBLOCKHASHzero)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 32,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    32 => D"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 34,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 35,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => E                              :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 36,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    E+1 => E                            :MSTORE(lastHashKIdUsed)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 37,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A                                   :HASHK(E)"
  },
  {
   "CONST": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 38,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %STATE_ROOT_STORAGE_POS             :HASHK(E)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 39,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    HASHPOS                             :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 41,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => C                              :HASHKDIGEST(E)"
  },
  {
   "CONSTL": "1554098974",
   "setA": 1,
   "line": 42,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %ADDRESS_SYSTEM => A"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 44,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "sRD": 1,
   "line": 46,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => E                              :SLOAD"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 48,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [hash(E) => SP]"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 52,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    0               :MSTORE(SP++), JMP(readCode); [0 => SP]"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 460,
   "line": 64,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 461,
   "line": 67,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 69,
   "offsetLabel": "sequencerAddr",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => A          :MLOAD(sequencerAddr)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 70,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [address => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 72,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 465,
   "line": 84,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 466,
   "line": 87,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 6,
   "mOp": 1,
   "mWR": 0,
   "line": 88,
   "offsetLabel": "timestamp",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => A          :MLOAD(timestamp)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 89,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [timestamp => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 91,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 470,
   "line": 103,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 471,
   "line": 106,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 34,
   "mOp": 1,
   "mWR": 0,
   "line": 108,
   "offsetLabel": "txCount",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => D          :MLOAD(txCount)"
  },
  {
   "inD": "1",
   "CONST": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 109,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    D + 1           :MSTORE(SP++); [blockNumber => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 111,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 475,
   "line": 123,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 476,
   "line": 126,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 128,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %BATCH_DIFFICULTY => A"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 129,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [difficulty => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 131,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 480,
   "line": 143,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 481,
   "line": 146,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "30000000",
   "setA": 1,
   "line": 148,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %TX_GAS_LIMIT => A"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 149,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [gasLimit => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 151,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 485,
   "line": 163,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 486,
   "line": 166,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 7,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "offsetLabel": "chainID",
   "useCTX": 0,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    $ => A          :MLOAD(chainID)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 168,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [chainId => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 170,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 490,
   "line": 182,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 491,
   "line": 185,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 186,
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    0               :MSTORE(SP++); [baseFee => E]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 188,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/block.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 494,
   "line": 12,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 495,
   "line": 13,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 496,
   "line": 16,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 497,
   "line": 19,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 22,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 23,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 24,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [a => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 28,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :LT, MSTORE(SP++), JMP(readCode) ; [(a < b) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 502,
   "line": 41,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 503,
   "line": 42,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP -       20 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 504,
   "line": 45,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 505,
   "line": 48,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 51,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 52,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--) ; [a => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 53,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP) ; [b => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 57,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :LT, MSTORE(SP++), JMP(readCode) ; [(b < a) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 510,
   "line": 70,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 511,
   "line": 71,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 512,
   "line": 74,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 513,
   "line": 77,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 80,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 81,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 82,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 3,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 86,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :SLT, MSTORE(SP++), JMP(readCode) ; [signed(a < b) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 518,
   "line": 99,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 519,
   "line": 100,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 520,
   "line": 103,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 521,
   "line": 106,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 109,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 110,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--) ; [a => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 111,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP) ; [b => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 3,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 115,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :SLT, MSTORE(SP++), JMP(readCode) ; [signed(b < a) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 526,
   "line": 128,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 527,
   "line": 129,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 528,
   "line": 132,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 529,
   "line": 135,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 138,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 139,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 140,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 144,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :EQ, MSTORE(SP++), JMP(readCode) ; [(a == b) => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 534,
   "line": 157,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 535,
   "line": 158,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 536,
   "line": 161,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 537,
   "line": 164,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1) ; [a => B]"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 168,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 172,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :EQ, MSTORE(SP-1), JMP(readCode) ; [(a == 0) ==> SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 541,
   "line": 185,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 542,
   "line": 186,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 543,
   "line": 189,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 544,
   "line": 192,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 195,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 196,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 197,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 5,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 201,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :AND, MSTORE(SP++), JMP(readCode) ; [ a & b => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 549,
   "line": 214,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 550,
   "line": 215,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 551,
   "line": 218,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 552,
   "line": 221,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 224,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 225,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 226,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 6,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 230,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :OR, MSTORE(SP++), JMP(readCode) ; [ a | b => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 557,
   "line": 243,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 558,
   "line": 244,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 559,
   "line": 247,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 560,
   "line": 250,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 253,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 254,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 255,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 7,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 259,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :XOR,MSTORE(SP++), JMP(readCode) ; [ a ^ b => SP]"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 565,
   "line": 272,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 566,
   "line": 273,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 567,
   "line": 276,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 568,
   "line": 279,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 282,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setB": 1,
   "line": 284,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn => B ; 2**226 - 1 =>"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 7,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 285,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :XOR,MSTORE(SP-1), JMP(readCode) ; [ NOT a => SP]"
  },
  {
   "CONST": "262142",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 572,
   "line": 299,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 2 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524284",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 573,
   "line": 300,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388288",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 574,
   "line": 301,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 575,
   "line": 304,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 576,
   "line": 307,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 310,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 311,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--) ; [byte offset => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 312,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP) ; [32-byte value => C]"
  },
  {
   "CONST": "31",
   "setA": 1,
   "line": 315,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    31 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 1,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 585,
   "useElseAddr": 1,
   "elseAddr": 581,
   "line": 316,
   "jmpAddrLabel": "opBYTE0",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => D          :SUB, JMPC(opBYTE0)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 319,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    C => A"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 320,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "                    :CALL(SHRarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "255",
   "setB": 1,
   "line": 323,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    255 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 5,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 324,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :AND, MSTORE(SP++), JMP(readCode) ; [ A & 255 => SP]"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 327,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0               :MSTORE(SP++), JMP(readCode) ; [ 0 => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 587,
   "line": 341,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1      :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524285",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 588,
   "line": 342,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3    :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388288",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 589,
   "line": 343,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 120         :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 590,
   "line": 346,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 591,
   "line": 349,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 352,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 353,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP--) ; [shift => D]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4589,
   "call": 1,
   "line": 355,
   "jmpAddrLabel": "SHRarithBit",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(SHRarithBit)   ; [value => A]; [ A >> D => A]"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 356,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode) ; [ A => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 596,
   "line": 370,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1      :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524285",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 597,
   "line": 371,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3    :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388288",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 598,
   "line": 372,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 120         :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 599,
   "line": 375,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 600,
   "line": 378,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 381,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 382,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 383,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4624,
   "call": 1,
   "line": 386,
   "jmpAddrLabel": "SHLarithBit",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "                    :CALL(SHLarithBit)  ; [ A << D => A]"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 387,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode) ; [A => SP]"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 606,
   "line": 401,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1      :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524279",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 607,
   "line": 402,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 9   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 608,
   "line": 403,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200         :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 609,
   "line": 406,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 610,
   "line": 409,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 412,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 413,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP--) ; [shift (bits) => C]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 414,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP) ; [value => A]"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 417,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 3,
   "line": 418,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => E          :SLT ; [sign(A) => E]"
  },
  {
   "inA": "1",
   "setD": 1,
   "line": 421,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    A => D ; [value => D]"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 422,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    C => B ; [shift (bits) => B]"
  },
  {
   "CONST": "256",
   "setA": 1,
   "line": 423,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    256 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 631,
   "useElseAddr": 1,
   "elseAddr": 619,
   "line": 424,
   "jmpAddrLabel": "maxShiftSAR",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :LT, JMPC(maxShiftSAR)"
  },
  {
   "inE": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 620,
   "useElseAddr": 1,
   "elseAddr": 623,
   "line": 427,
   "jmpAddrLabel": "positiveValue",
   "elseAddrLabel": "negativeValue",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    E               :JMPZ(positiveValue, negativeValue)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 431,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    D => A"
  },
  {
   "inC": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4589,
   "call": 1,
   "line": 432,
   "jmpAddrLabel": "SHRarithBit",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    C => D          :CALL(SHRarithBit) ; [shift (bits) => D]; [ A >> D => A]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 628,
   "line": 433,
   "jmpAddrLabel": "endSAR",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "                    :JMP(endSAR)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 436,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setB": 1,
   "line": 437,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_UINT_256 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 7,
   "line": 438,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :XOR ; [~A => A]"
  },
  {
   "inC": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4589,
   "call": 1,
   "line": 439,
   "jmpAddrLabel": "SHRarithBit",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    C => D          :CALL(SHRarithBit) ; [shift (bits) => D]; [ A >> D => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 7,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 628,
   "line": 440,
   "jmpAddrLabel": "endSAR",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $ => A          :XOR, JMP(endSAR) ; [~A => A]"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 444,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 631,
   "useElseAddr": 1,
   "elseAddr": 630,
   "line": 445,
   "jmpAddrLabel": "maxShiftSAR",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    $               :EQ, JMPC(maxShiftSAR)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 446,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode)   ; [(value >> shift (signed)) => SP]"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 451,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    0 => D ; [sign positive: 0 => D]"
  },
  {
   "inE": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 634,
   "useElseAddr": 1,
   "elseAddr": 633,
   "line": 454,
   "jmpAddrLabel": "endMaxShiftSAR",
   "elseAddrLabel": "next",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    E                      :JMPZ(endMaxShiftSAR)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setD": 1,
   "line": 455,
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    %MAX_UINT_256 => D ; [sign negative: MAX_UINT_256 => D]"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 458,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/comparison.zkasm",
   "lineStr": "    D                       :MSTORE(SP++), JMP(readCode) ; [(value >> shift (signed)) => SP]"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 636,
   "line": 11,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 637,
   "line": 13,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 638,
   "useElseAddr": 1,
   "elseAddr": 639,
   "line": 15,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opADDRESSdeploy",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opADDRESSdeploy)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 640,
   "line": 17,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "jmpAddrLabel": "opADDRESSend",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opADDRESSend)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 21,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(createContractAddress)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 24,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 26,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 643,
   "line": 39,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 644,
   "line": 40,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-5",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 645,
   "line": 42,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 44,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 46,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    0 => B,C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "line": 48,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => D          :SLOAD"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 49,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    D               :MSTORE(SP++); [balance(D) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 51,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "279368",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 651,
   "line": 64,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 252 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 652,
   "line": 65,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 653,
   "line": 67,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 69,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 71,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    0 => B,C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "line": 73,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => D          :SLOAD"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 74,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    D               :MSTORE(SP-1), CALL(isColdAddress); [balance(D) => SP]; in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 76,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 659,
   "line": 88,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 660,
   "line": 90,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 92,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(txSrcOriginAddr)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 93,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 95,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 664,
   "line": 107,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 665,
   "line": 109,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 111,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(txSrcAddr)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 112,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 114,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 669,
   "line": 126,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 670,
   "line": 128,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 130,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(txValue)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 131,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [value(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 133,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 674,
   "line": 145,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 675,
   "line": 147,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 149,
   "offsetLabel": "txGasPrice",
   "useCTX": 0,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    $ => A          :MLOAD(txGasPrice)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 150,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [price(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 152,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 679,
   "line": 164,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 680,
   "line": 166,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "inGAS": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 167,
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    GAS             :MSTORE(SP++); [gas(GAS) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 169,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/context-information.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 683,
   "line": 11,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(originCTX), JMPZ(handleGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 13,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "line": 15,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(isCreate)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 17,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 688,
   "useElseAddr": 1,
   "elseAddr": 687,
   "line": 18,
   "jmpAddrLabel": "opSTOPend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :JMPZ(opSTOPend)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 20,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(createContractAddress)"
  },
  {
   "inB": "1",
   "setCTX": 1,
   "line": 24,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => CTX"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 25,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 27,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0               :MSTORE(retDataCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 29,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasCTX)"
  },
  {
   "inA": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 30,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(gasRefund)"
  },
  {
   "inGAS": "1",
   "inB": "1",
   "setGAS": 1,
   "line": 31,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS + B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 33,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 34,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 36,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(SP++)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 38,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 39,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 700,
   "line": 55,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2     :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 701,
   "line": 56,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 702,
   "line": 57,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 703,
   "line": 58,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 704,
   "line": 59,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-32000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 705,
   "line": 62,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CREATE_GAS => GAS  :JMPN(outOfGas)"
  },
  {
   "inGAS": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 63,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS                 :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 66,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 67,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1               :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 709,
   "line": 70,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 3              :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 710,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 72,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 73,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 74,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D              :MLOAD(SP--); [value => D]"
  },
  {
   "inD": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 75,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D                   :MSTORE(valueCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 76,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--); [offset => E]"
  },
  {
   "inE": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 77,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E                   :MSTORE(argsOffsetCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 78,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP); [size => C]"
  },
  {
   "inC": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 79,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(argsLengthCall)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 83,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 86,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 88,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX                 :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 91,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 93,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 95,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 97,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :SLOAD"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 98,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 763,
   "useElseAddr": 1,
   "elseAddr": 726,
   "line": 99,
   "jmpAddrLabel": "opCreateFail",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                   :LT,JMPC(opCreateFail)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 102,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A             :MLOAD(storageAddr)"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 104,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_NONCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 106,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B              :SLOAD"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 107,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => C"
  },
  {
   "CONSTL": "18446744073709551615",
   "setA": 1,
   "line": 108,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_NONCE => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 763,
   "useElseAddr": 1,
   "elseAddr": 732,
   "line": 109,
   "jmpAddrLabel": "opCreateFail",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                   :EQ,JMPC(opCreateFail)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 112,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP                  :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 113,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC                  :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 115,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 116,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX          :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 117,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX                 :MSTORE(currentCTX)"
  },
  {
   "CONST": "1",
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 118,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1                   :MSTORE(isCreateContract)"
  },
  {
   "CONST": "1",
   "offset": 33,
   "mOp": 1,
   "mWR": 1,
   "line": 119,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1                   :MSTORE(isCreate)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 122,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(originCTX)"
  },
  {
   "inB": "1",
   "offset": 4,
   "mOp": 1,
   "mWR": 1,
   "line": 125,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B                   :MSTORE(txNonce)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4307,
   "call": 1,
   "line": 127,
   "jmpAddrLabel": "getLenBytes",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                        :CALL(getLenBytes); in: [B: value] out: [A: value bytes length]"
  },
  {
   "inA": "1",
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 128,
   "offsetLabel": "lengthNonce",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(lengthNonce)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setD": 1,
   "line": 130,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B + 1 => D"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 131,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => A"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 133,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_NONCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 134,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 135,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR             :SSTORE"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 137,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR                  :MSTORE(initSR), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 139,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 140,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B              :MLOAD(storageAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 141,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C              :MLOAD(gasRefund)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 142,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A             :MSTORE(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 143,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "line": 145,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS"
  },
  {
   "inB": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 146,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B                   :MSTORE(txSrcAddr)"
  },
  {
   "inC": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 148,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(gasRefund), CALL(copySP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 150,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "line": 151,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txCalldataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 152,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(valueCall)"
  },
  {
   "inA": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 154,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txValue), CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 155,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                        :JMP(txType)"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 158,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0                   :MSTORE(retDataCTX)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 159,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0                   :MSTORE(SP++), JMP(readCode); [0 => SP]"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 766,
   "line": 175,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 177,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 178,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1           :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-7",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 769,
   "line": 180,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 181,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 183,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 185,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
  },
  {
   "inA": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 186,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 187,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "inA": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 190,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(addrCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 192,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [value => A]"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 193,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(valueCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 780,
   "useElseAddr": 1,
   "elseAddr": 778,
   "line": 195,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "opCALL2",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(isStaticCall), JMPZ(opCALL2)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 196,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 780,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 197,
   "jmpAddrLabel": "opCALL2",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $               :EQ,JMPC(opCALL2, invalidStaticTx)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 202,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
  },
  {
   "inA": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 203,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(argsOffsetCall)"
  },
  {
   "inA": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 205,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 208,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
  },
  {
   "inC": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 209,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(argsLengthCall)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 211,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 213,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 216,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
  },
  {
   "inB": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 217,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 220,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP); [retSize => D]"
  },
  {
   "inD": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 222,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 792,
   "line": 225,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 793,
   "line": 226,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 794,
   "line": 227,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 795,
   "line": 228,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400:JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 230,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B                   :MLOAD(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 232,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 798,
   "line": 236,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 238,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(valueCall)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 239,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 804,
   "useElseAddr": 1,
   "elseAddr": 801,
   "line": 240,
   "jmpAddrLabel": "opCALLend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $               :EQ,JMPC(opCALLend)"
  },
  {
   "inGAS": "1",
   "CONST": "-9000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 802,
   "line": 242,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CALL_VALUE_TRANSFER_GAS => GAS :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4452,
   "call": 1,
   "line": 244,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "jmpAddrLabel": "isEmptyAccount",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E               :MLOAD(addrCall), CALL(isEmptyAccount); in: [E: address] out: [E: 0 if is not empty, 1 if is empty]"
  },
  {
   "inGAS": "1",
   "inE": "-25000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 804,
   "line": 245,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CALL_NEW_ACCOUNT_GAS*E => GAS :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 249,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 250,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(lastMemLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 251,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(storageAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 252,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(gasRefund)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 253,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP              :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 254,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC              :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 256,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 257,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 258,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 259,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 260,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(originCTX)"
  },
  {
   "inC": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 261,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(txSrcAddr)"
  },
  {
   "inE": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 262,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(gasRefund)"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 263,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR              :MSTORE(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 264,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 265,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txDestAddr)"
  },
  {
   "inA": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 266,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(storageAddr)"
  },
  {
   "inB": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 267,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(retCallOffset)"
  },
  {
   "inD": "1",
   "offset": 22,
   "mOp": 1,
   "mWR": 1,
   "line": 268,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(retCallLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 269,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(valueCall)"
  },
  {
   "inB": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 270,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 271,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 2,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 273,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :LT, CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 274,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(originCTX)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 275,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A             :MSTORE(gasCTX)"
  },
  {
   "inA": "1",
   "inC": "2300",
   "setA": 1,
   "line": 277,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + %CALL_STIPEND*C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "line": 279,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D              :MLOAD(isStaticCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 280,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
  },
  {
   "inD": "1",
   "offset": 32,
   "mOp": 1,
   "mWR": 1,
   "line": 281,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D                   :MSTORE(isStaticCall)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "line": 283,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 284,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 286,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txCalldataLen), CALL(copySP)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 288,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                        :CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 289,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                        :JMP(txType)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 839,
   "line": 305,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 307,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 308,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1           :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-7",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 842,
   "line": 310,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 311,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 313,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 315,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
  },
  {
   "inA": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 316,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 319,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "inA": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 320,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(addrCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 322,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [value => A]"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 323,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(valueCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 326,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
  },
  {
   "inA": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 327,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(argsOffsetCall)"
  },
  {
   "inA": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 329,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 331,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
  },
  {
   "inC": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 332,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(argsLengthCall)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 335,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 338,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
  },
  {
   "inB": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 339,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 341,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP); [retSize => D]"
  },
  {
   "inD": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 343,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 861,
   "line": 346,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 862,
   "line": 347,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 863,
   "line": 348,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 864,
   "line": 349,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400:JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 352,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                   :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 866,
   "line": 356,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 358,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B                   :MLOAD(valueCall)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 359,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 870,
   "useElseAddr": 1,
   "elseAddr": 869,
   "line": 360,
   "jmpAddrLabel": "opCALLCODEend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                        :EQ,JMPC(opCALLCODEend)"
  },
  {
   "inGAS": "1",
   "CONST": "-9000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 870,
   "line": 362,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CALL_VALUE_TRANSFER_GAS => GAS        :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 366,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 367,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(lastMemLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 368,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(storageAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 369,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(gasRefund)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 370,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP              :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 371,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC              :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 373,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 374,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 375,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 376,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 377,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(originCTX)"
  },
  {
   "inE": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 378,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(txSrcAddr)"
  },
  {
   "inE": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 379,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(storageAddr)"
  },
  {
   "inC": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 380,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(gasRefund)"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 381,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR              :MSTORE(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 382,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 383,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txDestAddr)"
  },
  {
   "inB": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 384,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(retCallOffset)"
  },
  {
   "inD": "1",
   "offset": 22,
   "mOp": 1,
   "mWR": 1,
   "line": 385,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(retCallLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 386,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(valueCall)"
  },
  {
   "inB": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 387,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 388,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 2,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 390,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :LT, CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 391,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 392,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A         :MSTORE(gasCTX)"
  },
  {
   "inA": "1",
   "inC": "2300",
   "setA": 1,
   "line": 394,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + %CALL_STIPEND*C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "line": 396,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(isStaticCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 397,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "line": 399,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS"
  },
  {
   "inD": "1",
   "offset": 32,
   "mOp": 1,
   "mWR": 1,
   "line": 400,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(isStaticCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 401,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 403,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 405,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 406,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :JMP(txType)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 905,
   "line": 420,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 2 => SP    :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 421,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 422,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 908,
   "line": 425,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 909,
   "line": 426,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 910,
   "line": 427,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 911,
   "line": 428,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inE": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 430,
   "offsetLabel": "retDataOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(retDataOffset)"
  },
  {
   "inC": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 431,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(retDataLength)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 433,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 436,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 916,
   "useElseAddr": 1,
   "elseAddr": 957,
   "line": 438,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opRETURNdeploy",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(isCreateContract), JMPNZ(opRETURNdeploy)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 917,
   "line": 441,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(originCTX), JMPZ(handleGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 443,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 444,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 445,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 447,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(retDataCTX)"
  },
  {
   "inB": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 448,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 449,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasCTX)"
  },
  {
   "inB": "1",
   "inGAS": "1",
   "setGAS": 1,
   "line": 450,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B + GAS => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 452,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 22,
   "mOp": 1,
   "mWR": 0,
   "line": 453,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(retCallLength)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 454,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 455,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 930,
   "useElseAddr": 1,
   "elseAddr": 929,
   "line": 457,
   "jmpAddrLabel": "preRETURN32",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $               :LT,JMPC(preRETURN32)"
  },
  {
   "inD": "1",
   "setC": 1,
   "line": 458,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 461,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(retCallOffset)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 932,
   "line": 466,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 933,
   "line": 467,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 934,
   "line": 468,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 950,
   "useElseAddr": 1,
   "elseAddr": 935,
   "line": 470,
   "jmpAddrLabel": "opRETURNend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :JMPZ(opRETURNend)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 945,
   "useElseAddr": 1,
   "elseAddr": 936,
   "line": 471,
   "jmpAddrLabel": "opRETURNfinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C - 32          :JMPN(opRETURNfinal)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 473,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "inE": "1",
   "setD": 1,
   "line": 474,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 476,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 477,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 480,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 481,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E => B"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 482,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => E"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "line": 483,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C - 32 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 931,
   "line": 485,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "opRETURN32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(opRETURN32)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 489,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 490,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 491,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 493,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 494,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 498,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 499,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 501,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 502,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "CONST": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 503,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1               :MSTORE(SP++); [1 => SP]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 505,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 506,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
  },
  {
   "CONST": "24576",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4682,
   "useElseAddr": 1,
   "elseAddr": 958,
   "line": 510,
   "jmpAddrLabel": "invalidCodeSize",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %CODE_SIZE_LIMIT - C      :JMPN(invalidCodeSize)"
  },
  {
   "inGAS": "1",
   "inC": "-200",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 959,
   "line": 512,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %RETURN_GAS_COST * C => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4216,
   "useElseAddr": 1,
   "elseAddr": 960,
   "line": 514,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "endDeploy",
   "elseAddrLabel": "opRETURNcreate",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(originCTX), JMPNZ(opRETURNcreate, endDeploy)"
  },
  {
   "CONST": "261952",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 961,
   "line": 518,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 192 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524096",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 962,
   "line": 519,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 192 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 963,
   "line": 520,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "278600",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 964,
   "line": 521,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1020 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 965,
   "line": 522,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inE": "1",
   "offset": 127,
   "mOp": 1,
   "mWR": 1,
   "line": 525,
   "offsetLabel": "memOffsetLinearPoseidon",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(memOffsetLinearPoseidon)"
  },
  {
   "inC": "1",
   "offset": 128,
   "mOp": 1,
   "mWR": 1,
   "line": 526,
   "offsetLabel": "memSizeLinearPoseidon",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(memSizeLinearPoseidon)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 528,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 529,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 530,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 531,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 532,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasCTX)"
  },
  {
   "inB": "1",
   "inGAS": "1",
   "setGAS": 1,
   "line": 533,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B + GAS => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 534,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 535,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(txSrcAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 536,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(txNonce)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4819,
   "call": 1,
   "line": 539,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "jmpAddrLabel": "checkBytecodeStartsEF",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(createContractAddress), CALL(checkBytecodeStartsEF)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 126,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 978,
   "useElseAddr": 1,
   "elseAddr": 4683,
   "line": 542,
   "offsetLabel": "startsWithEF",
   "useCTX": 0,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidCodeStartsEF",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $               :MLOAD(startsWithEF), JMPNZ(invalidCodeStartsEF)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 545,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_SC_LENGTH => B"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 546,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => D"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 547,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4836,
   "call": 1,
   "line": 549,
   "jmpAddrLabel": "hashPoseidonLinearFromMemory",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR             :SSTORE, CALL(hashPoseidonLinearFromMemory); in: [memOffsetLinearPoseidon, memSizeLinearPoseidon], out: [D: resulting linear poseidon]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 550,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(createContractAddress)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 551,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 553,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_SC_CODE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 554,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR                         :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 558,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(createContractAddress)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 559,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 560,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 561,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0               :MSTORE(retDataCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 563,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 564,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 565,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [createContractAddress(A) => SP]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 567,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 568,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 996,
   "line": 583,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 585,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 586,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1           :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 999,
   "line": 588,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 589,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 591,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 593,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
  },
  {
   "inA": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 594,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 596,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [address => A]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 598,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(maskAddress); in: [A: address] out: [A: masked address]"
  },
  {
   "inA": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 599,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(addrCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 601,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--)"
  },
  {
   "inA": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 602,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(argsOffsetCall); [argsOffset => A]"
  },
  {
   "inA": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 604,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 607,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
  },
  {
   "inC": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 608,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(argsLengthCall)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 611,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 614,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
  },
  {
   "inB": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 615,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 617,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP); [retSize => D]"
  },
  {
   "inE": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 619,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1017,
   "line": 622,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1018,
   "line": 623,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1019,
   "line": 624,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1020,
   "line": 625,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400:JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 628,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B                   :MLOAD(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 630,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                   :MLOAD(addrCall)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 631,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                             :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1024,
   "line": 633,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 636,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(txSrcAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 637,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(storageAddr)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 638,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP              :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 639,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC              :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 641,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 642,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 643,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 644,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 645,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(originCTX)"
  },
  {
   "inC": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 647,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(txSrcAddr)"
  },
  {
   "inD": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 648,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(storageAddr)"
  },
  {
   "CONST": "1",
   "offset": 34,
   "mOp": 1,
   "mWR": 1,
   "line": 649,
   "offsetLabel": "isDelegateCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1               :MSTORE(isDelegateCall)"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 650,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR              :MSTORE(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 651,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 652,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txDestAddr)"
  },
  {
   "inB": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 653,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(retCallOffset)"
  },
  {
   "inE": "1",
   "offset": 22,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 655,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(retCallLength), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 656,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 657,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A         :MSTORE(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 658,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(txValue)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 659,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "line": 660,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(isStaticCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 661,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inD": "1",
   "offset": 32,
   "mOp": 1,
   "mWR": 1,
   "line": 662,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(isStaticCall)"
  },
  {
   "inB": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 663,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(txValue)"
  },
  {
   "inC": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 664,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(gasRefund)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "line": 665,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 668,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 670,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 672,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 673,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :JMP(txType)"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1056,
   "line": 689,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1057,
   "line": 690,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1058,
   "line": 691,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1059,
   "line": 692,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-32000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1060,
   "line": 694,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CREATE_2_GAS => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 697,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 698,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1               :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-4",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1063,
   "line": 701,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 4              :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1064,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 703,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 704,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 705,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(SP--); [value => D]"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 706,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(valueCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 707,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--); [offset => E]"
  },
  {
   "inE": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 708,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E                   :MSTORE(argsOffsetCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 709,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP--); [size => C]"
  },
  {
   "inC": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 710,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(argsLengthCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 711,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D              :MLOAD(SP); [salt => D]"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 715,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 718,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 720,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX                 :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": "add",
    "values": [
     {
      "op": "getReg",
      "regName": "C"
     },
     {
      "op": "number",
      "num": "31"
     }
    ]
   },
   "inFREE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 723,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    ${C+31}             :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 724,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    32                  :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 725,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 726,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "inC": "6",
   "setB": 1,
   "line": 727,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    6*C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1081,
   "line": 728,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 729,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - B => GAS"
  },
  {
   "inGAS": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 730,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS                 :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 734,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 736,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 738,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 740,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 741,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B              :MLOAD(valueCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 763,
   "useElseAddr": 1,
   "elseAddr": 1089,
   "line": 742,
   "jmpAddrLabel": "opCreateFail",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                   :LT,JMPC(opCreateFail)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 745,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(storageAddr)"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 747,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_NONCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 749,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B              :SLOAD"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 750,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => C"
  },
  {
   "CONSTL": "18446744073709551615",
   "setA": 1,
   "line": 751,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_NONCE => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 763,
   "useElseAddr": 1,
   "elseAddr": 1095,
   "line": 752,
   "jmpAddrLabel": "opCreateFail",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                   :EQ,JMPC(opCreateFail)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 755,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP                  :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 756,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC                  :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 758,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 759,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX          :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 760,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX                 :MSTORE(currentCTX)"
  },
  {
   "CONST": "1",
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 761,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1                   :MSTORE(isCreateContract)"
  },
  {
   "CONST": "1",
   "offset": 33,
   "mOp": 1,
   "mWR": 1,
   "line": 762,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1                   :MSTORE(isCreate)"
  },
  {
   "CONST": "1",
   "offset": 35,
   "mOp": 1,
   "mWR": 1,
   "line": 763,
   "offsetLabel": "isCreate2",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1                   :MSTORE(isCreate2)"
  },
  {
   "inD": "1",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 764,
   "offsetLabel": "salt",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D                   :MSTORE(salt)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 766,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 767,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(originCTX)"
  },
  {
   "inB": "1",
   "offset": 4,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4307,
   "call": 1,
   "line": 771,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "jmpAddrLabel": "getLenBytes",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B                   :MSTORE(txNonce), CALL(getLenBytes); in: [B: value] out: [A: value bytes length]"
  },
  {
   "inA": "1",
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 772,
   "offsetLabel": "lengthNonce",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(lengthNonce)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setD": 1,
   "line": 774,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B + 1 => D"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 775,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => A"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 777,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_NONCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 778,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 779,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR             :SSTORE"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 780,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR                  :MSTORE(initSR)"
  },
  {
   "inA": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 782,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txSrcAddr), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 783,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 784,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C              :MLOAD(gasRefund)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 785,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A             :MSTORE(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 786,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
  },
  {
   "inC": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 787,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                   :MSTORE(gasRefund)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 790,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS            :CALL(copySP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 792,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "line": 793,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txCalldataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 794,
   "offsetLabel": "valueCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(valueCall)"
  },
  {
   "inA": "1",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 796,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A                   :MSTORE(txValue), CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 797,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                        :JMP(txType)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 812,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 813,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A + 1           :MSTORE(depth)"
  },
  {
   "inSP": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1129,
   "line": 815,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 816,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "inCTX": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 818,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(originAuxCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 820,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
  },
  {
   "inA": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 821,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 823,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "inA": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 824,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(addrCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 826,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
  },
  {
   "inA": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 827,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(argsOffsetCall)"
  },
  {
   "inA": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 829,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 831,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP--); [argsSize => B]"
  },
  {
   "inB": "1",
   "offset": 26,
   "mOp": 1,
   "mWR": 1,
   "line": 832,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(argsLengthCall)"
  },
  {
   "inB": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 835,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 837,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP--); [retOffset => C]"
  },
  {
   "inC": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 838,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 840,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP); [retSize => E]"
  },
  {
   "inE": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 842,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1146,
   "line": 845,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1147,
   "line": 846,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1148,
   "line": 847,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1149,
   "line": 848,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 851,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1151,
   "line": 853,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 856,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(storageAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 857,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasRefund)"
  },
  {
   "inSP": "1",
   "offset": 30,
   "mOp": 1,
   "mWR": 1,
   "line": 858,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP              :MSTORE(lastSP)"
  },
  {
   "inPC": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "line": 859,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    PC              :MSTORE(lastPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "line": 861,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setCTX": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 1,
   "line": 862,
   "offsetLabel": "lastCtxUsed",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 863,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 864,
   "offsetLabel": "originAuxCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
  },
  {
   "inA": "1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 865,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(originCTX)"
  },
  {
   "inB": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 866,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :MSTORE(gasRefund)"
  },
  {
   "CONST": "0",
   "offset": 3,
   "mOp": 1,
   "mWR": 1,
   "line": 867,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0               :MSTORE(txValue)"
  },
  {
   "CONST": "1",
   "offset": 32,
   "mOp": 1,
   "mWR": 1,
   "line": 868,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1               :MSTORE(isStaticCall)"
  },
  {
   "inD": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 869,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D               :MSTORE(txSrcAddr)"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 870,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SR              :MSTORE(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 871,
   "offsetLabel": "addrCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(addrCall)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 872,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txDestAddr)"
  },
  {
   "inA": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 873,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(storageAddr)"
  },
  {
   "inC": "1",
   "offset": 21,
   "mOp": 1,
   "mWR": 1,
   "line": 874,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(retCallOffset)"
  },
  {
   "inE": "1",
   "offset": 22,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4478,
   "call": 1,
   "line": 876,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "jmpAddrLabel": "computeGasSendCall",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(retCallLength), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 877,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 878,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - A         :MSTORE(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 879,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "setGAS": 1,
   "line": 881,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 882,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
  },
  {
   "inA": "1",
   "offset": 12,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4286,
   "call": 1,
   "line": 884,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "jmpAddrLabel": "copySP",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3670,
   "call": 1,
   "line": 886,
   "jmpAddrLabel": "checkpointTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(checkpointTouched)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4055,
   "line": 887,
   "jmpAddrLabel": "txType",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :JMP(txType)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1179,
   "line": 898,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1180,
   "line": 900,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3672,
   "call": 1,
   "line": 903,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "jmpAddrLabel": "revertTouched",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR         :MLOAD(initSR), CALL(revertTouched)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 905,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 906,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "inE": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 907,
   "offsetLabel": "retDataOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(retDataOffset)"
  },
  {
   "inC": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 908,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(retDataLength)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 910,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 913,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 915,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "revert"
      }
     ]
    }
   ],
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(originCTX)"
  },
  {
   "CONST": "0",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 917,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0               :MSTORE(gasRefund)"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 1190,
   "line": 919,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B               :JMPZ(handleGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 921,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(currentCTX)"
  },
  {
   "inB": "1",
   "setCTX": 1,
   "line": 922,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => CTX"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 924,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(retDataCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 926,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasCTX)"
  },
  {
   "inGAS": "1",
   "inB": "1",
   "setGAS": 1,
   "line": 927,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS + B => GAS"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 929,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => CTX"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 22,
   "mOp": 1,
   "mWR": 0,
   "line": 930,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(retCallLength)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 931,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 932,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1201,
   "useElseAddr": 1,
   "elseAddr": 1200,
   "line": 933,
   "jmpAddrLabel": "preREVERT32",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $               :LT,JMPC(preREVERT32)"
  },
  {
   "inD": "1",
   "setC": 1,
   "line": 934,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 938,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B          :MLOAD(retCallOffset)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1203,
   "line": 942,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1219,
   "useElseAddr": 1,
   "elseAddr": 1204,
   "line": 944,
   "jmpAddrLabel": "opREVERTend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C              :JMPZ(opREVERTend)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1214,
   "useElseAddr": 1,
   "elseAddr": 1205,
   "line": 946,
   "jmpAddrLabel": "opREVERTfinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C - 32          :JMPN(opREVERTfinal)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 947,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "inE": "1",
   "setD": 1,
   "line": 948,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 949,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 950,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 953,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 954,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E => B"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 955,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => E"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "line": 956,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C - 32 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1202,
   "line": 958,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "opREVERT32",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(opREVERT32)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 962,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 963,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 964,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 965,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 966,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 970,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 971,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 972,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 973,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 974,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0               :MSTORE(SP++); [0 => SP]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 976,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 977,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1227,
   "line": 993,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "277580",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1228,
   "line": 994,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 2040 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1229,
   "line": 995,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-5000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1230,
   "line": 997,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %SENDALL_GAS => GAS   :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1231,
   "line": 1000,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    SP - 1 => SP        :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1232,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 1003,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 1004,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1006,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1007,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "line": 1009,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D              :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 1011,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A              :MLOAD(SP); [address => A]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 1013,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                    :CALL(maskAddress); in: [A: address] out: [A: masked address]"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 1015,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => C"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 1016,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => E"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 1017,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 1018,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1245,
   "useElseAddr": 1,
   "elseAddr": 1243,
   "line": 1019,
   "jmpAddrLabel": "opSENDALL2",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                           :EQ,JMPC(opSENDALL2)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4452,
   "call": 1,
   "line": 1020,
   "jmpAddrLabel": "isEmptyAccount",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "                                :CALL(isEmptyAccount); in: [E: address] out: [E: 0 if is not empty, 1 if is empty]"
  },
  {
   "inGAS": "1",
   "inE": "-25000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1245,
   "line": 1021,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %CALL_NEW_ACCOUNT_GAS * E => GAS      :JMPN(outOfGas)"
  },
  {
   "inC": "1",
   "setA": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 1025,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C => A                      :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "inD": "-2600",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1247,
   "line": 1026,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS - %COLD_ACCOUNT_ACCESS_COST * D => GAS     :JMPN(outOfGas)"
  },
  {
   "inB": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1027,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B                         :MSTORE(arithA)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1030,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1031,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "sRD": 1,
   "line": 1033,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => E              :SLOAD"
  },
  {
   "inE": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 1037,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    E               :MSTORE(arithB), CALL(addARITH); in: [arithA, arithB] out[arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 1038,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 1041,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                  :MLOAD(SP); [address => A]"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1042,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1043,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 1044,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR                 :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 1047,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                  :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 1048,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 1049,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SR                 :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 1051,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                  :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 1262,
   "line": 1052,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $                       :EQ,JMPC(handleGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 1054,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => B                  :MLOAD(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "line": 1055,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C                  :MLOAD(isCreate)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 1056,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1267,
   "useElseAddr": 1,
   "elseAddr": 1266,
   "line": 1057,
   "jmpAddrLabel": "opSENDALLend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    C                       :JMPZ(opSENDALLend)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 1058,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => D                  :MLOAD(createContractAddress)"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 1061,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A => CTX"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 1062,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    0                       :MSTORE(retDataCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 1063,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    CTX                     :MSTORE(currentCTX)"
  },
  {
   "inB": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 1064,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    B                       :MSTORE(gasRefund)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 1065,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => C                  :MLOAD(gasCTX)"
  },
  {
   "inGAS": "1",
   "inC": "1",
   "setGAS": 1,
   "line": 1066,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    GAS + C => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 1068,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => SP                 :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 1069,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => PC                 :MLOAD(lastPC)"
  },
  {
   "inD": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 1070,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    D                       :MSTORE(SP++); [output => SP]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 1072,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    $ => A                  :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 1073,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    A - 1                   :MSTORE(depth), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4677,
   "line": 1084,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "invalidOpcode",
   "fileName": "opcodes/create-terminate-context.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep, invalidOpcode)"
  },
  {
   "CONST": "261952",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1280,
   "line": 16,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 192 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524095",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1281,
   "line": 17,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 193 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1282,
   "line": 18,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "279610",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1283,
   "line": 19,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 10 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1284,
   "line": 20,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1285,
   "line": 23,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-30",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1286,
   "line": 26,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    GAS - %KECCAK_GAS => GAS :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 27,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 28,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP--); [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 29,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP) ; [size => C]"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 32,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 35,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inC": "1",
   "CONST": "31",
   "setA": 1,
   "line": 38,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C+31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 40,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 41,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 42,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "CONST": "6",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 45,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    6               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 46,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 47,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1299,
   "line": 48,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)  ; dynamic_gas = 6 * minimum_word_size + memory_expansion_cost"
  },
  {
   "inC": "1",
   "CONST": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 51,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C + 1           :MSTORE(arithA)"
  },
  {
   "CONST": "136",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 52,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    136             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 53,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 54,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => A          :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "setA": 1,
   "line": 56,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 1305,
   "line": 57,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $               :LT, JMPC(outOfCountersKeccak)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 60,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => B           :MLOAD(lastHashKIdUsed)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setB": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 61,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    B + 1 => B       :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 63,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    32 => D"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 65,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    0 => HASHPOS"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1310,
   "line": 69,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1311,
   "line": 70,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1324,
   "useElseAddr": 1,
   "elseAddr": 1312,
   "line": 72,
   "jmpAddrLabel": "opSHA3End",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C               :JMPZ(opSHA3End)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1319,
   "useElseAddr": 1,
   "elseAddr": 1313,
   "line": 73,
   "jmpAddrLabel": "opSHA3Final",
   "elseAddrLabel": "next",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C - 32          :JMPN(opSHA3Final)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 75,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 77,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 79,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 81,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    A               :HASHK(E)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 83,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1309,
   "line": 84,
   "jmpAddrLabel": "opSHA3Loop",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C - 32 => C     :JMP(opSHA3Loop)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 88,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 90,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 92,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 94,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    C => D"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 96,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    A               :HASHK(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 100,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 102,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    HASHPOS         :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 104,
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    $ => A          :HASHKDIGEST(E)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 106,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/crypto.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [hash(A) => SP]"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1329,
   "line": 13,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1330,
   "line": 14,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1331,
   "line": 17,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    SP - 1 => SP                    :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-8",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1332,
   "line": 20,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    GAS - %GAS_MID_STEP => GAS                  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1341,
   "line": 23,
   "jmpAddrLabel": "checkJumpDest",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => B                         :MLOAD(SP), JMP(checkJumpDest); [counter => PC]"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1334,
   "line": 35,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1335,
   "line": 36,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "inGAS": "1",
   "CONST": "-10",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1336,
   "line": 38,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    GAS - %GAS_SLOW_STEP => GAS                 :JMPN(outOfGas)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1337,
   "line": 40,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    SP - 2 => SP                    :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 41,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => B                          :MLOAD(SP); [value => B]"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 42,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 1340,
   "line": 43,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $                               :EQ, JMPC(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1341,
   "line": 45,
   "jmpAddrLabel": "checkJumpDest",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => B                          :MLOAD(SP+1), JMP(checkJumpDest); [counter => PC]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1342,
   "useElseAddr": 1,
   "elseAddr": 1350,
   "line": 49,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "checkJumpDestDeployment",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => A                          :MLOAD(isCreateContract), JMPNZ(checkJumpDestDeployment)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 50,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => A                          :MLOAD(bytecodeLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4676,
   "useElseAddr": 1,
   "elseAddr": 1344,
   "line": 51,
   "jmpAddrLabel": "invalidJump",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $                               :LT,JMPC(invalidJump)"
  },
  {
   "inB": "1",
   "setPC": 1,
   "line": 52,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    B => PC"
  },
  {
   "inB": "1",
   "setHASHPOS": 1,
   "line": 53,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    B => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 55,
   "offsetLabel": "contractHashId",
   "useCTX": 1,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => E                          :MLOAD(contractHashId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 56,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => A                          :HASHP1(E)"
  },
  {
   "CONST": "91",
   "setB": 1,
   "line": 58,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    0x5B => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 4676,
   "line": 59,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "invalidJump",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $                               :EQ, JMPC(readCode, invalidJump)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1351,
   "useElseAddr": 1,
   "elseAddr": 1358,
   "line": 62,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "checkJumpDestDeploymentCreate",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => A                          :MLOAD(isCreate), JMPNZ(checkJumpDestDeploymentCreate)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 38,
   "mOp": 1,
   "mWR": 0,
   "line": 64,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => HASHPOS                    :MLOAD(dataStarts)"
  },
  {
   "inB": "1",
   "setPC": 1,
   "line": 66,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    B => PC"
  },
  {
   "inHASHPOS": "1",
   "inPC": "1",
   "setHASHPOS": 1,
   "line": 67,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    HASHPOS + PC => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 69,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 71,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => A                          :HASHK1(E)"
  },
  {
   "CONST": "91",
   "setB": 1,
   "line": 73,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    0x5B => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 4676,
   "line": 74,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "invalidJump",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $                               :EQ, JMPC(readCode, invalidJump)"
  },
  {
   "CONST": "261920",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1359,
   "line": 78,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 224 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524063",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1360,
   "line": 79,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 225 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1361,
   "line": 80,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2 :JMPN(outOfCountersMemalign)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 82,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => CTX                        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 84,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => E                          :MLOAD(argsOffsetCall)"
  },
  {
   "inB": "1",
   "setPC": 1,
   "line": 86,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    B => PC"
  },
  {
   "inE": "1",
   "inPC": "1",
   "setE": 1,
   "line": 87,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    E + PC => E"
  },
  {
   "CONST": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 89,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    1 => C                          :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 90,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $ => CTX                        :MLOAD(currentCTX)"
  },
  {
   "CONST": "31",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 91,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    31 => D                         :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "91",
   "setB": 1,
   "line": 93,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    0x5B => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 4676,
   "line": 94,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "invalidJump",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    $                               :EQ, JMPC(readCode, invalidJump)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1371,
   "line": 106,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1372,
   "line": 109,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "inPC": "1",
   "CONST": "-1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 111,
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    PC - 1              :MSTORE(SP++); [PC => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 113,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1375,
   "line": 126,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 129,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/flow-control.zkasm",
   "lineStr": "    GAS - %JUMP_DEST_GAS => GAS  :JMPN(outOfGas, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1377,
   "line": 12,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1378,
   "line": 15,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1379,
   "line": 19,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1380,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 22,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 24,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 25,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--) ; [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 26,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)   ; [size => C]"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 28,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 30,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "CONST": "0",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 32,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    0                   :MSTORE(numTopics)"
  },
  {
   "CONST": "8",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 34,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    8                   :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 35,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 36,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 37,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1391,
   "line": 39,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 40,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 41,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex) ; load logIndex"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 42,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop) ; store next free log index"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1395,
   "line": 46,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1396,
   "line": 48,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 3              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1397,
   "line": 49,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1398,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 50,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 51,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 52,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 53,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 54,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 55,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
  },
  {
   "CONST": "1",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 56,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    1                   :MSTORE(numTopics)"
  },
  {
   "CONST": "8",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 57,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    8                   :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 58,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 59,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 60,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1409,
   "line": 62,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 63,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 64,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 65,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1413,
   "line": 69,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-4",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1414,
   "line": 71,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 4              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1415,
   "line": 72,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1416,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 73,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 74,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 75,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 76,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 77,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 78,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
  },
  {
   "CONST": "2",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 79,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    2                   :MSTORE(numTopics)"
  },
  {
   "CONST": "8",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 80,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    8                   :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 81,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 82,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 83,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1427,
   "line": 85,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 86,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 87,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 88,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1431,
   "line": 92,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-5",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1432,
   "line": 94,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 5              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1433,
   "line": 95,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1434,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 96,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 97,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 98,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 99,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 100,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 101,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
  },
  {
   "CONST": "3",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 102,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    3                   :MSTORE(numTopics)"
  },
  {
   "CONST": "8",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 103,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    8                   :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 104,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 105,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 106,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1445,
   "line": 108,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 109,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 110,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 111,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1449,
   "line": 115,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1450,
   "line": 117,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 6              :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1451,
   "line": 118,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1452,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 119,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 120,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": -1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => E              :MLOAD(SP--)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 122,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 123,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    E                   :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 124,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
  },
  {
   "CONST": "4",
   "offset": 36,
   "mOp": 1,
   "mWR": 1,
   "line": 125,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    4                   :MSTORE(numTopics)"
  },
  {
   "CONST": "8",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 126,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    8                   :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 127,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 128,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 129,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1463,
   "line": 131,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $                   :LT,JMPC(outOfGas)"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 132,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 133,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 31,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 134,
   "offsetLabel": "nextFreeLogIndex",
   "useCTX": 0,
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1467,
   "line": 138,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1468,
   "line": 139,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1474,
   "useElseAddr": 1,
   "elseAddr": 1469,
   "line": 141,
   "jmpAddrLabel": "opSaveTopicsInit",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C               :JMPZ(opSaveTopicsInit)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1472,
   "useElseAddr": 1,
   "elseAddr": 1470,
   "line": 143,
   "jmpAddrLabel": "opLOGFinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C - 32          :JMPN(opLOGFinal)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 144,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value]"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1466,
   "line": 146,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "storeLog",
     "params": [
      {
       "op": "getReg",
       "regName": "B"
      },
      {
       "op": "number",
       "num": "0"
      },
      {
       "op": "getReg",
       "regName": "A"
      }
     ]
    }
   ],
   "jmpAddrLabel": "opLOGLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    C - 32 => C     :JMP(opLOGLoop)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 150,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1474,
   "line": 152,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "storeLog",
     "params": [
      {
       "op": "getReg",
       "regName": "B"
      },
      {
       "op": "number",
       "num": "0"
      },
      {
       "op": "getReg",
       "regName": "A"
      }
     ]
    }
   ],
   "jmpAddrLabel": "opSaveTopicsInit",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "                    :JMP(opSaveTopicsInit) ; instruction added to allow executing $$ function"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 36,
   "mOp": 1,
   "mWR": 0,
   "line": 156,
   "offsetLabel": "numTopics",
   "useCTX": 0,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => A          :MLOAD(numTopics)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1476,
   "line": 160,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inA": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 1477,
   "line": 162,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    A                   :JMPZ(readCode)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "line": 164,
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    SP - 1 => SP"
  },
  {
   "inGAS": "1",
   "CONST": "-375",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1479,
   "line": 166,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    GAS - %LOG_TOPIC_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "storeLog",
     "params": [
      {
       "op": "getReg",
       "regName": "B"
      },
      {
       "op": "number",
       "num": "1"
      },
      {
       "op": "getReg",
       "regName": "C"
      }
     ]
    }
   ],
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    $ => C              :MLOAD(SP)   ; [topic => C]"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1475,
   "line": 169,
   "jmpAddrLabel": "opSaveTopicsLoop",
   "fileName": "opcodes/logs.zkasm",
   "lineStr": "    A - 1 =>  A         :JMP(opSaveTopicsLoop)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 12,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 15,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "2",
   "setD": 1,
   "line": 18,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    2 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 19,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "3",
   "setD": 1,
   "line": 22,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    3 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 23,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "4",
   "setD": 1,
   "line": 26,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    4 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 27,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "5",
   "setD": 1,
   "line": 30,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    5 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 31,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "6",
   "setD": 1,
   "line": 34,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    6 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 35,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "7",
   "setD": 1,
   "line": 38,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    7 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 39,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "8",
   "setD": 1,
   "line": 42,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    8 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 43,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "9",
   "setD": 1,
   "line": 46,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    9 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 47,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "10",
   "setD": 1,
   "line": 50,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    10 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 51,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "11",
   "setD": 1,
   "line": 54,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    11 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 55,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "12",
   "setD": 1,
   "line": 58,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    12 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 59,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "13",
   "setD": 1,
   "line": 62,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    13 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 63,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "14",
   "setD": 1,
   "line": 66,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    14 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 67,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "15",
   "setD": 1,
   "line": 70,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    15 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 71,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "16",
   "setD": 1,
   "line": 74,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    16 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 75,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "17",
   "setD": 1,
   "line": 78,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    17 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 79,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "18",
   "setD": 1,
   "line": 82,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    18 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 83,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "19",
   "setD": 1,
   "line": 86,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    19 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 87,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "20",
   "setD": 1,
   "line": 90,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    20 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 91,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "21",
   "setD": 1,
   "line": 94,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    21 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 95,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "22",
   "setD": 1,
   "line": 98,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    22 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 99,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "23",
   "setD": 1,
   "line": 102,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    23 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 103,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "24",
   "setD": 1,
   "line": 106,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    24 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 107,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "25",
   "setD": 1,
   "line": 110,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    25 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 111,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "26",
   "setD": 1,
   "line": 114,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    26 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 115,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "27",
   "setD": 1,
   "line": 118,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    27 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 119,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "28",
   "setD": 1,
   "line": 122,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    28 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 123,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "29",
   "setD": 1,
   "line": 126,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    29 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 127,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "30",
   "setD": 1,
   "line": 130,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    30 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 131,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "31",
   "setD": 1,
   "line": 134,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    31 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 135,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 138,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    32 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1545,
   "useElseAddr": 1,
   "elseAddr": 1557,
   "line": 139,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "opAuxPUSHA",
   "elseAddrLabel": "opAuxPUSHB",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
  },
  {
   "CONST": "524282",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1546,
   "line": 143,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 6 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1547,
   "line": 144,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 146,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B              :MLOAD(bytecodeLength)"
  },
  {
   "inPC": "1",
   "inD": "1",
   "setA": 1,
   "line": 147,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    PC + D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1552,
   "useElseAddr": 1,
   "elseAddr": 1550,
   "line": 148,
   "jmpAddrLabel": "opAuxPUSHA2",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $                   :LT,JMPC(opAuxPUSHA2)"
  },
  {
   "inPC": "1",
   "setA": 1,
   "line": 149,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    PC => A"
  },
  {
   "inB": "1",
   "inA": "-1",
   "setD": 1,
   "line": 150,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B - A => D"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1553,
   "line": 154,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4739,
   "call": 1,
   "line": 156,
   "jmpAddrLabel": "readPush",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "                        :CALL(readPush); in: [D: bytes to read] out: [E: value read]"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 158,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    E                   :MSTORE(SP++); [pushed_value(E) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 1556,
   "line": 160,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow)"
  },
  {
   "inPC": "1",
   "inD": "1",
   "setPC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 162,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    PC + D => PC                    :JMP(readCode)"
  },
  {
   "CONST": "524282",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1558,
   "line": 166,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 6 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1559,
   "line": 167,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "line": 169,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(isCreate)"
  },
  {
   "CONST": "0",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1579,
   "useElseAddr": 1,
   "elseAddr": 1561,
   "line": 170,
   "jmpAddrLabel": "opAuxPUSHBcreate",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    0 - A                           :JMPN(opAuxPUSHBcreate)"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "setC": 1,
   "line": 172,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    D - 1 => C"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 173,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1564,
   "line": 177,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524284",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1565,
   "line": 178,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262140",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1566,
   "line": 179,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 4 :JMPN(outOfCountersArith)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 38,
   "mOp": 1,
   "mWR": 0,
   "line": 182,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => HASHPOS                    :MLOAD(dataStarts)"
  },
  {
   "inHASHPOS": "1",
   "inPC": "1",
   "setHASHPOS": 1,
   "line": 184,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    HASHPOS + PC => HASHPOS"
  },
  {
   "inPC": "1",
   "CONST": "1",
   "setPC": 1,
   "line": 185,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    PC + 1 => PC"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 187,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 188,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 189,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B                          :HASHK(E)"
  },
  {
   "inA": "1",
   "inB": "1",
   "setA": 1,
   "line": 191,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A + B => A"
  },
  {
   "inC": "1",
   "CONST": "-1",
   "setC": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1576,
   "useElseAddr": 1,
   "elseAddr": 1574,
   "line": 193,
   "jmpAddrLabel": "opAuxPUSHBend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    C - 1 => C                      :JMPN(opAuxPUSHBend)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 194,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "                                    :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1563,
   "line": 195,
   "jmpAddrLabel": "opAuxPUSHBloop",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "                                    :JMP(opAuxPUSHBloop)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1577,
   "line": 199,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS                  :JMPN(outOfGas)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 201,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++); [pushed_value(E) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 203,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP                       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "261920",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1580,
   "line": 208,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 224 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524063",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1581,
   "line": 209,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 225 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1582,
   "line": 210,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 213,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 214,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => CTX                        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 216,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => E                          :MLOAD(argsOffsetCall)"
  },
  {
   "inE": "1",
   "inPC": "1",
   "setE": 1,
   "line": 218,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    E + PC => E"
  },
  {
   "inD": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 220,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    D => C                          :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "inPC": "1",
   "inC": "1",
   "setPC": 1,
   "line": 222,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    PC + C => PC"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 224,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    32 - C => D                     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1576,
   "line": 226,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "opAuxPUSHBend",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => CTX                        :MLOAD(currentCTX), JMP(opAuxPUSHBend)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1591,
   "line": 238,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1592,
   "line": 241,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 1                      :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1593,
   "line": 244,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 246,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1); [value => A]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 1595,
   "line": 248,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 250,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [duplicated_value(A) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 252,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1598,
   "line": 256,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1599,
   "line": 258,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 2                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1600,
   "line": 260,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 262,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-2)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 263,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 264,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1604,
   "line": 268,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1605,
   "line": 270,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 3                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1606,
   "line": 272,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -3,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 274,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-3)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 275,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 276,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1610,
   "line": 280,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-4",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1611,
   "line": 282,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 4                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1612,
   "line": 284,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -4,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 286,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-4)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 287,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 288,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1616,
   "line": 292,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-5",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1617,
   "line": 294,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 5                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1618,
   "line": 296,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -5,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 298,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-5)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 299,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 300,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1622,
   "line": 304,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1623,
   "line": 306,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 6                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1624,
   "line": 308,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -6,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 310,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-6)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 311,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 312,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1628,
   "line": 316,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-7",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1629,
   "line": 318,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 7                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1630,
   "line": 320,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -7,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 322,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-7)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 323,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 324,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1634,
   "line": 328,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-8",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1635,
   "line": 330,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 8                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1636,
   "line": 332,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -8,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 334,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-8)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 335,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 336,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1640,
   "line": 340,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-9",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1641,
   "line": 342,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 9                          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1642,
   "line": 344,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -9,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 346,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-9)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 347,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 348,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1646,
   "line": 352,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-10",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1647,
   "line": 354,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 10                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1648,
   "line": 356,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -10,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 358,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-10)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 359,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 360,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1652,
   "line": 364,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-11",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1653,
   "line": 366,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 11                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1654,
   "line": 368,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -11,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 370,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-11)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 371,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 372,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1658,
   "line": 376,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-12",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1659,
   "line": 378,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 12                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1660,
   "line": 380,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -12,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 382,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-12)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 383,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 384,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1664,
   "line": 388,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-13",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1665,
   "line": 390,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 13                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1666,
   "line": 392,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -13,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 394,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-13)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 395,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 396,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1670,
   "line": 400,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-14",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1671,
   "line": 402,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 14                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1672,
   "line": 404,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -14,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 406,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-14)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 407,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 408,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1676,
   "line": 412,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-15",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1677,
   "line": 414,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 15                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1678,
   "line": 416,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -15,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 418,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-15)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 419,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 420,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1682,
   "line": 424,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-16",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1683,
   "line": 426,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 16                         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1684,
   "line": 428,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -16,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 430,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A                          :MLOAD(SP-16)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 431,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A                               :MSTORE(SP++)"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 432,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1688,
   "line": 444,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1689,
   "line": 447,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1690,
   "line": 450,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 453,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1); [value_to_swap_a => A]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 454,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-2); [value_to_swap_b => B]"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 456,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-2); [swapped_value_a => SP]"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 458,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode); [swapped_value_b => SP]"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1695,
   "line": 462,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1696,
   "line": 464,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1697,
   "line": 466,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 468,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -3,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 469,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-3)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -3,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 470,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-3)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 471,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1702,
   "line": 475,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-4",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1703,
   "line": 477,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 4          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1704,
   "line": 479,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 481,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -4,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 482,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-4)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -4,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 483,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-4)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 484,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1709,
   "line": 488,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-5",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1710,
   "line": 490,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 5          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1711,
   "line": 492,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 494,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -5,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 495,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-5)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -5,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 496,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-5)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 497,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1716,
   "line": 501,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1717,
   "line": 503,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1718,
   "line": 505,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 507,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -6,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 508,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-6)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -6,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 509,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-6)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 510,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1723,
   "line": 514,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-7",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1724,
   "line": 516,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1725,
   "line": 518,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 520,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -7,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 521,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-7)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -7,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 522,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-7)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 523,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1730,
   "line": 527,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-8",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1731,
   "line": 529,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 8          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1732,
   "line": 531,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 533,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -8,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 534,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-8)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -8,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 535,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-8)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 536,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1737,
   "line": 540,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-9",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1738,
   "line": 542,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 9          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1739,
   "line": 544,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 546,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -9,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 547,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-9)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -9,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 548,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-9)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 549,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1744,
   "line": 553,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-10",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1745,
   "line": 555,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 10         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1746,
   "line": 557,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 559,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -10,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 560,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-10)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -10,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 561,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-10)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 562,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1751,
   "line": 566,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-11",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1752,
   "line": 568,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 11         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1753,
   "line": 570,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 572,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -11,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 573,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-11)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -11,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 574,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-11)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 575,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1758,
   "line": 579,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-12",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1759,
   "line": 581,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 12         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1760,
   "line": 583,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 585,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -12,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 586,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-12)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -12,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 587,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-12)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 588,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1765,
   "line": 592,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-13",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1766,
   "line": 594,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 13         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1767,
   "line": 596,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 598,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -13,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 599,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-13)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -13,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 600,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-13)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 601,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1772,
   "line": 605,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-14",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1773,
   "line": 607,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 14         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1774,
   "line": 609,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 611,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -14,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 612,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-14)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -14,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 613,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-14)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 614,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1779,
   "line": 618,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-15",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1780,
   "line": 620,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 15         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1781,
   "line": 622,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 624,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -15,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 625,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-15)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -15,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 626,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-15)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 627,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1786,
   "line": 631,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-16",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1787,
   "line": 633,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 16         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1788,
   "line": 635,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 637,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -16,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 638,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-16)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -16,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 639,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-16)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 640,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1793,
   "line": 644,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-17",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1794,
   "line": 646,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 17         :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1795,
   "line": 648,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 650,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP-1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -17,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 651,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP-17)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -17,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 652,
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    A               :MSTORE(SP-17)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": -1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 653,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1800,
   "line": 665,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1801,
   "line": 668,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 671,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/stack-operations.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas, readCode)"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1803,
   "line": 15,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1804,
   "line": 16,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1805,
   "line": 17,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1806,
   "line": 18,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1807,
   "line": 19,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1808,
   "line": 22,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1809,
   "line": 25,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 27,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP); [offset => E]"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 29,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset), CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "CONST": "32",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 32,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    32              :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 34,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [value(A) => SP]"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1814,
   "line": 50,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1815,
   "line": 51,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1816,
   "line": 52,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1817,
   "line": 53,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1818,
   "line": 54,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1819,
   "line": 57,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1820,
   "line": 60,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 62,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 63,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [value => B]"
  },
  {
   "inB": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 66,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    B               :MSTORE(bytesToStore)"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 68,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [A: value]"
  },
  {
   "CONST": "32",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 70,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    32              :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 71,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "                    :JMP(readCode)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1827,
   "line": 86,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1828,
   "line": 87,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1829,
   "line": 88,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1830,
   "line": 89,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1831,
   "line": 92,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1832,
   "line": 95,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 97,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP+1); [offset => B]"
  },
  {
   "inB": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 99,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    B               :MSTORE(lastMemOffset)"
  },
  {
   "CONST": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 101,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    1               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inB": "1",
   "setA": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4701,
   "call": 1,
   "line": 102,
   "jmpAddrLabel": "offsetUtil",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    B => A          :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 103,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [value => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 105,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "memAlignWR8_W0",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 106,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    ${memAlignWR8_W0(A,B,C)} => D  ; no trust calculate W0"
  },
  {
   "inB": "1",
   "memAlignRD": 0,
   "memAlignWR": 0,
   "memAlignWR8": 1,
   "line": 107,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    B               :MEM_ALIGN_WR8 ; only use LSB of B, rest of bytes could be non zero."
  },
  {
   "inD": "1",
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 109,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    D               :MSTORE(MEM:E), JMP(readCode)"
  },
  {
   "CONST": "262143",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1842,
   "line": 123,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524285",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1843,
   "line": 124,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1844,
   "line": 125,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1845,
   "line": 128,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS      :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 131,
   "offsetLabel": "memLength",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => E              :MLOAD(memLength)"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 134,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "line": 135,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    32              :MSTORE(arithB)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 136,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 137,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => C          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 138,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes2)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 140,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1855,
   "useElseAddr": 1,
   "elseAddr": 1853,
   "line": 141,
   "jmpAddrLabel": "MSIZEend",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $               :EQ, JMPC(MSIZEend)"
  },
  {
   "inC": "1",
   "CONST": "1",
   "setC": 1,
   "line": 143,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C + 1 => C"
  },
  {
   "inC": "32",
   "setE": 1,
   "line": 144,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C * 32 => E"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 147,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E               :MSTORE(SP++); [size(E) => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 149,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1858,
   "line": 161,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1859,
   "line": 162,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1860,
   "line": 165,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [key => C]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 169,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(storageAddr)"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 171,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "sRD": 1,
   "line": 172,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => E          :SLOAD"
  },
  {
   "inE": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3698,
   "call": 1,
   "line": 174,
   "jmpAddrLabel": "isColdSlot",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E               :MSTORE(SP++), CALL(isColdSlot); [value(E) => SP]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inA": "-2000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 176,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SLOAD_GAS - A * %COLD_SLOAD_COST_RED => GAS    :JMPN(outOfGas, readCode)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1867,
   "line": 191,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1868,
   "line": 192,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "278855",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 1869,
   "line": 193,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 765 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1870,
   "line": 194,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-2",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1871,
   "line": 197,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SP - 2  => SP        :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-2301",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1872,
   "line": 199,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SSTORE_ENTRY_EIP_2200_GAS - 1  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1873,
   "useElseAddr": 1,
   "elseAddr": 4681,
   "line": 201,
   "offsetLabel": "isStaticCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidStaticTx",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 203,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP+1) ; [key => C]"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 204,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 205,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP) ; [value => D]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1877,
   "useElseAddr": 1,
   "elseAddr": 1878,
   "line": 207,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "deploymentSSTORE",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(deploymentSSTORE)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1879,
   "line": 209,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREinit",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opSSTOREinit)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 213,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(createContractAddress)"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 217,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "sRD": 1,
   "line": 218,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => E          :SLOAD"
  },
  {
   "inSR": "1",
   "offset": 39,
   "mOp": 1,
   "mWR": 1,
   "line": 220,
   "offsetLabel": "auxSR",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    SR              :MSTORE(auxSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "line": 221,
   "offsetLabel": "originSR",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => SR         :MLOAD(originSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 222,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => B          :SLOAD ; origin value"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 39,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3698,
   "call": 1,
   "line": 224,
   "offsetLabel": "auxSR",
   "useCTX": 0,
   "jmpAddrLabel": "isColdSlot",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => SR         :MLOAD(auxSR), CALL(isColdSlot)"
  },
  {
   "inB": "1",
   "setC": 1,
   "line": 225,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    B => C           ; origin value"
  },
  {
   "inGAS": "1",
   "inA": "-2100",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1887,
   "line": 227,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - A*%COLD_SLOAD_COST => GAS    :JMPN(outOfGas)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 228,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 229,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1890,
   "useElseAddr": 1,
   "elseAddr": 1891,
   "line": 230,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdif",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdif)"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1928,
   "line": 233,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SSTORE_DYNAMIC_GAS => GAS:JMPN(outOfGas, opSSTOREend)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 237,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C => A"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 238,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1894,
   "useElseAddr": 1,
   "elseAddr": 1898,
   "line": 239,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifA",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 241,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 242,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1897,
   "useElseAddr": 1,
   "elseAddr": 1921,
   "line": 243,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifB",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifB)"
  },
  {
   "inGAS": "1",
   "CONST": "-20000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1928,
   "line": 246,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SSTORE_SET_GAS => GAS    :JMPN(outOfGas, opSSTOREend)"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1899,
   "line": 250,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SSTORE_DYNAMIC_GAS => GAS:JMPN(outOfGas)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 251,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 252,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1902,
   "useElseAddr": 1,
   "elseAddr": 1909,
   "line": 253,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifA1",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA1)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 258,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    D => A"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 259,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1905,
   "useElseAddr": 1,
   "elseAddr": 1928,
   "line": 260,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREend)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 262,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1907,
   "useElseAddr": 1,
   "elseAddr": 1919,
   "line": 263,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifA2",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 265,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "inA": "1",
   "CONST": "19900",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1928,
   "line": 266,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A + 19900 => A  :MSTORE(gasRefund), JMP(opSSTOREend)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 270,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 271,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1912,
   "useElseAddr": 1,
   "elseAddr": 1914,
   "line": 272,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifA12",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA12)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 275,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "inA": "1",
   "CONST": "-15000",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1902,
   "line": 276,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREdifAB",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A - %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund), JMP(opSSTOREdifAB)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 279,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 280,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1917,
   "useElseAddr": 1,
   "elseAddr": 1902,
   "line": 281,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREdifAB",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifAB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 284,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "inA": "1",
   "CONST": "15000",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1902,
   "line": 285,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREdifAB",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A + %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund), JMP(opSSTOREdifAB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 290,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "inA": "1",
   "CONST": "2800",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1928,
   "line": 291,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A + 2800 => A   :MSTORE(gasRefund), JMP(opSSTOREend)"
  },
  {
   "inGAS": "1",
   "CONST": "-2900",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1922,
   "line": 296,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    GAS - %SSTORE_RESET_GAS => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 297,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 298,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1925,
   "useElseAddr": 1,
   "elseAddr": 1928,
   "line": 299,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREend)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 302,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(gasRefund)"
  },
  {
   "inA": "1",
   "CONST": "15000",
   "setA": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 303,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    A + %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1928,
   "line": 304,
   "jmpAddrLabel": "opSSTOREend",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "                    :JMP(opSSTOREend)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1929,
   "useElseAddr": 1,
   "elseAddr": 1930,
   "line": 307,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "mloadContract",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(mloadContract)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1931,
   "line": 308,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "jmpAddrLabel": "opSSTOREsr",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opSSTOREsr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 312,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => A          :MLOAD(createContractAddress)"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 316,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 317,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC); key => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 318,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/storage-memory.zkasm",
   "lineStr": "    $ => SR         :SSTORE, JMP(readCode)"
  },
  {
   "CONST": "262080",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1935,
   "line": 14,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 64 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524222",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1936,
   "line": 15,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 66 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1937,
   "line": 16,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1938,
   "line": 18,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1939,
   "line": 20,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 21,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [offset => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 22,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(txCalldataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1961,
   "useElseAddr": 1,
   "elseAddr": 1942,
   "line": 24,
   "jmpAddrLabel": "CALLDATALOADreturn0",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT,JMPC(CALLDATALOADreturn0)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 25,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 27,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 28,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 29,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1947,
   "useElseAddr": 1,
   "elseAddr": 1952,
   "line": 31,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opCALLDATALOAD2",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes2), JMPNZ(opCALLDATALOAD2)"
  },
  {
   "inSP": "1",
   "setC": 1,
   "line": 32,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP => C"
  },
  {
   "CONST": "1024",
   "inB": "1",
   "setSP": 1,
   "line": 34,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET + B => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 35,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP); [stack => B]"
  },
  {
   "inC": "1",
   "setSP": 1,
   "line": 37,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C => SP"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 38,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [data(offset) => SP]"
  },
  {
   "inSP": "1",
   "setC": 1,
   "line": 42,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP => C"
  },
  {
   "inA": "1",
   "setD": 1,
   "line": 44,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => D"
  },
  {
   "CONST": "1024",
   "inB": "1",
   "setSP": 1,
   "line": 46,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET + B => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 47,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP++), CALL(SHLarith); [stack => A]; in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 48,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => B"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "line": 49,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - D => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 50,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(SHRarith); [stack => A]; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inC": "1",
   "setSP": 1,
   "line": 52,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C => SP"
  },
  {
   "inB": "1",
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 53,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + A           :MSTORE(SP++), JMP(readCode); [data(offset) => SP]"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 56,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0               :MSTORE(SP++), JMP(readCode); [0 => SP]"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1963,
   "line": 68,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1964,
   "line": 70,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1965,
   "useElseAddr": 1,
   "elseAddr": 1968,
   "line": 72,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opCALLDATASIZEdep",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCALLDATASIZEdep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(txCalldataLen)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 74,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(SP++); [size => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 76,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 79,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0               :MSTORE(SP++); [0 => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 81,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "261952",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1971,
   "line": 96,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 192 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524096",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1972,
   "line": 97,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 192 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1973,
   "line": 98,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 1974,
   "line": 99,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 1975,
   "line": 101,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 3 => SP          :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 102,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP+2); [destOffset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 103,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP+1); [offset => B]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 104,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "inE": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 106,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 108,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1981,
   "line": 110,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "inC": "1",
   "CONST": "31",
   "setA": 1,
   "line": 113,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C+31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 114,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 115,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 116,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "CONST": "3",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 119,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    3               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 120,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 1989,
   "line": 122,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 123,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inSP": "1",
   "offset": 37,
   "mOp": 1,
   "mWR": 1,
   "line": 125,
   "offsetLabel": "SPw",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP              :MSTORE(SPw)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 126,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(txCalldataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2043,
   "useElseAddr": 1,
   "elseAddr": 1993,
   "line": 128,
   "jmpAddrLabel": "opCALLDATACOPY0",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT,JMPC(opCALLDATACOPY0)"
  },
  {
   "inA": "1",
   "inC": "1",
   "setA": 1,
   "line": 129,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A + C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1995,
   "useElseAddr": 1,
   "elseAddr": 1996,
   "line": 131,
   "jmpAddrLabel": "opCALLDATACOPYX0",
   "elseAddrLabel": "opCALLDATACOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT,JMPC(opCALLDATACOPYX0, opCALLDATACOPYinit)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 134,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(txCalldataLen)"
  },
  {
   "CONST": "261952",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 1997,
   "line": 138,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 192 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524096",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 1998,
   "line": 139,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 192 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262143",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 1999,
   "line": 140,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1 :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2000,
   "line": 141,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2051,
   "useElseAddr": 1,
   "elseAddr": 2001,
   "line": 143,
   "jmpAddrLabel": "opCALLDATACOPYcheckLen",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :JMPZ(opCALLDATACOPYcheckLen)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2023,
   "useElseAddr": 1,
   "elseAddr": 2002,
   "line": 145,
   "jmpAddrLabel": "opCALLDATACOPYfinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32          :JMPN(opCALLDATACOPYfinal)"
  },
  {
   "inB": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 146,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 147,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 148,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(arithRes2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 149,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 150,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "1024",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 152,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET            :MSTORE(arithB), CALL(addARITH); in: [arithA, arithB] out[arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 153,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inA": "1",
   "setSP": 1,
   "line": 155,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 156,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP); [calldata => A]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 157,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 158,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 159,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setSP": 1,
   "line": 161,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A + 1 => SP"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "line": 162,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - D => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 164,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(SHRarith); [calldata => A]; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "inC": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 166,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A + C           :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 168,
   "offsetLabel": "SPw",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => SP         :MLOAD(SPw)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 169,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "line": 170,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32 => C"
  },
  {
   "inC": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 171,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(SP); [size => SP]"
  },
  {
   "inB": "1",
   "CONST": "32",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1996,
   "line": 172,
   "jmpAddrLabel": "opCALLDATACOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + 32 => B     :JMP(opCALLDATACOPYinit)"
  },
  {
   "inB": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 176,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 177,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 178,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(arithRes2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 179,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "CONST": "1024",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 181,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET            :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 182,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(arithB), CALL(addARITH); in: [arithA, arithB] out[arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 183,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "inB": "1",
   "setSP": 1,
   "line": 185,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 186,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(SHLarith); [calldata => A]; in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 187,
   "offsetLabel": "SPw",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => SP         :MLOAD(SPw)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 188,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setSP": 1,
   "line": 190,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + 1 => SP"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "inD": "1",
   "setD": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2048,
   "useElseAddr": 1,
   "elseAddr": 2036,
   "line": 191,
   "jmpAddrLabel": "opCALLDATACOPYxor",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32 + D => D :JMPN(opCALLDATACOPYxor)"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 192,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 193,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP); [calldata => C]"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 194,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - D => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 195,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inB": "1",
   "inA": "1",
   "setA": 1,
   "line": 196,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + A => A"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 198,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2051,
   "line": 199,
   "jmpAddrLabel": "opCALLDATACOPYcheckLen",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :JMP(opCALLDATACOPYcheckLen)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2046,
   "useElseAddr": 1,
   "elseAddr": 2044,
   "line": 202,
   "jmpAddrLabel": "opCALLDATACOPY320",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - C          :JMPN(opCALLDATACOPY320)"
  },
  {
   "CONST": "0",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 204,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2054,
   "line": 205,
   "jmpAddrLabel": "opCALLDATACOPYend",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :JMP(opCALLDATACOPYend)"
  },
  {
   "CONST": "0",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 209,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2043,
   "line": 210,
   "jmpAddrLabel": "opCALLDATACOPY0",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32 => C     :JMP(opCALLDATACOPY0)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 214,
   "jmpAddrLabel": "SHRarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 215,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 217,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 221,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(lastMemLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 222,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(txCalldataLen)"
  },
  {
   "inC": "1",
   "inA": "-1",
   "setC": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2054,
   "useElseAddr": 1,
   "elseAddr": 2043,
   "line": 223,
   "jmpAddrLabel": "opCALLDATACOPYend",
   "elseAddrLabel": "opCALLDATACOPY0",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - A => C      :JMPN(opCALLDATACOPYend, opCALLDATACOPY0)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 228,
   "offsetLabel": "SPw",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => SP         :MLOAD(SPw), JMP(readCode)"
  },
  {
   "CONST": "279368",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2056,
   "line": 241,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 252 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2057,
   "line": 242,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2058,
   "line": 244,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2059,
   "useElseAddr": 1,
   "elseAddr": 2065,
   "line": 246,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opCODESIZEdep",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCODESIZEdep)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 248,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(txDestAddr)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 250,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %SMT_KEY_SC_LENGTH => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 251,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 252,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :SLOAD"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 253,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [size => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 255,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 258,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(txCalldataLen)"
  },
  {
   "inB": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 259,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(SP++); [size => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 261,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2069,
   "useElseAddr": 1,
   "elseAddr": 1970,
   "line": 282,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "opCALLDATACOPY",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCALLDATACOPY)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 2070,
   "line": 284,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 3 => SP          :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 285,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP+2); [destOffset => C]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 286,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP+1); [offset => D]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 287,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP); [size => E]"
  },
  {
   "inC": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 289,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(lastMemOffset)"
  },
  {
   "inE": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 291,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(lastMemLength)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2076,
   "line": 294,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2077,
   "line": 295,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2078,
   "line": 298,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "inE": "1",
   "CONST": "31",
   "setA": 1,
   "line": 300,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E+31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 302,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 303,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 304,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "CONST": "3",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 307,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    3               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 308,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 309,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2086,
   "line": 311,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 314,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 316,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 317,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(bytecodeLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2091,
   "useElseAddr": 1,
   "elseAddr": 2090,
   "line": 318,
   "jmpAddrLabel": "opCODECOPY2",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT, JMPC(opCODECOPY2)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 319,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => A"
  },
  {
   "inA": "1",
   "setHASHPOS": 1,
   "line": 323,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 324,
   "offsetLabel": "contractHashId",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(contractHashId)"
  },
  {
   "inD": "1",
   "offset": 45,
   "mOp": 1,
   "mWR": 1,
   "line": 326,
   "offsetLabel": "codecopyHashId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D               :MSTORE(codecopyHashId)"
  },
  {
   "inB": "1",
   "offset": 46,
   "mOp": 1,
   "mWR": 1,
   "line": 328,
   "offsetLabel": "codecopyBytecodeLength",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(codecopyBytecodeLength)"
  },
  {
   "inC": "1",
   "offset": 42,
   "mOp": 1,
   "mWR": 1,
   "line": 329,
   "offsetLabel": "memOffset",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(memOffset)"
  },
  {
   "inE": "1",
   "offset": 43,
   "mOp": 1,
   "mWR": 1,
   "line": 330,
   "offsetLabel": "remainingBytes",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(remainingBytes)"
  },
  {
   "CONST": "524288",
   "inCntBinary": "-1",
   "inE": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2098,
   "line": 332,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2*E           :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388408",
   "inSTEP": "-1",
   "inE": "-100",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2099,
   "line": 333,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100*E                :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "262144",
   "inCntMemAlign": "-1",
   "inE": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 2100,
   "line": 334,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - E     :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2101,
   "line": 338,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 43,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 2102,
   "line": 340,
   "offsetLabel": "remainingBytes",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(remainingBytes), JMPZ(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 42,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4701,
   "call": 1,
   "line": 341,
   "offsetLabel": "memOffset",
   "useCTX": 0,
   "jmpAddrLabel": "offsetUtil",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(memOffset), CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
  },
  {
   "inE": "1",
   "offset": 47,
   "mOp": 1,
   "mWR": 1,
   "line": 342,
   "offsetLabel": "memInteger",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(memInteger)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 344,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "inA": "1",
   "offset": 44,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2117,
   "call": 1,
   "line": 345,
   "offsetLabel": "previousValue",
   "useCTX": 0,
   "jmpAddrLabel": "opCODECOPYLoadBytes",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(previousValue), CALL(opCODECOPYLoadBytes); in:[codecopyBytecodeLength, codecopyHashId] out: [B: readByte]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 44,
   "mOp": 1,
   "mWR": 0,
   "line": 346,
   "offsetLabel": "previousValue",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(previousValue)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "memAlignWR8_W0",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 347,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    ${memAlignWR8_W0(A,B,C)} => D  ; no trust calculate W0"
  },
  {
   "inB": "1",
   "memAlignRD": 0,
   "memAlignWR": 0,
   "memAlignWR8": 1,
   "line": 348,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MEM_ALIGN_WR8 ; only use LSB of B, rest of bytes could be non zero"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 47,
   "mOp": 1,
   "mWR": 0,
   "line": 349,
   "offsetLabel": "memInteger",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(memInteger)"
  },
  {
   "inD": "1",
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 350,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D               :MSTORE(MEM:E) ; write W0"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 43,
   "mOp": 1,
   "mWR": 0,
   "line": 352,
   "offsetLabel": "remainingBytes",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(remainingBytes)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setB": 1,
   "line": 353,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B - 1 => B  ; decrease 1 byte from length"
  },
  {
   "inB": "1",
   "offset": 43,
   "mOp": 1,
   "mWR": 1,
   "line": 354,
   "offsetLabel": "remainingBytes",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(remainingBytes)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 42,
   "mOp": 1,
   "mWR": 0,
   "line": 355,
   "offsetLabel": "memOffset",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(memOffset)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setA": 1,
   "line": 356,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A + 1 => A  ; increment offset to write the next byte"
  },
  {
   "inA": "1",
   "offset": 42,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2100,
   "line": 357,
   "offsetLabel": "memOffset",
   "useCTX": 0,
   "jmpAddrLabel": "opCODECOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(memOffset), JMP(opCODECOPYinit)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 362,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 46,
   "mOp": 1,
   "mWR": 0,
   "line": 363,
   "offsetLabel": "codecopyBytecodeLength",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(codecopyBytecodeLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2122,
   "useElseAddr": 1,
   "elseAddr": 2120,
   "line": 364,
   "jmpAddrLabel": "readZero",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :EQ, JMPC(readZero)"
  },
  {
   "inHASHPOS": "1",
   "setA": 1,
   "line": 365,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    HASHPOS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2123,
   "useElseAddr": 1,
   "elseAddr": 2122,
   "line": 366,
   "jmpAddrLabel": "readValueBytecode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT, JMPC(readValueBytecode)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 368,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => B          :RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 45,
   "mOp": 1,
   "mWR": 0,
   "line": 370,
   "offsetLabel": "codecopyHashId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(codecopyHashId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 372,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :HASHP1(E), RETURN"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2126,
   "line": 385,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2127,
   "line": 386,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 2128,
   "line": 388,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 389,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 390,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2131,
   "line": 392,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 394,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %SMT_KEY_SC_LENGTH => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 395,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 396,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :SLOAD"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 397,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [size => SP]"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2136,
   "line": 421,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "149785",
   "inCntPaddingPG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4673,
   "useElseAddr": 1,
   "elseAddr": 2137,
   "line": 422,
   "jmpAddrLabel": "outOfCountersPadding",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_PADDING_PG - CNT_PADDING_PG - 11 :JMPN(outOfCountersPadding)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 2138,
   "line": 423,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 2    :JMPN(outOfCountersMemalign)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2139,
   "line": 424,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2140,
   "line": 425,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-4",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 2141,
   "line": 427,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 4 => SP          :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 3,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 428,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP+3), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 429,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2144,
   "line": 431,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS            :JMPN(outOfGas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2170,
   "call": 1,
   "line": 432,
   "jmpAddrLabel": "opEXTCODECOPYCheckHash",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(opEXTCODECOPYCheckHash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 433,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP+2); [destOffset => C]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 434,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP+1); [offset => D]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 435,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP); [size => E]"
  },
  {
   "inC": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 437,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(lastMemOffset)"
  },
  {
   "inE": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "line": 439,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(lastMemLength)"
  },
  {
   "inE": "1",
   "CONST": "31",
   "setA": 1,
   "line": 442,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E+31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 444,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "line": 445,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 446,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 447,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "CONST": "3",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 450,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    3               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 451,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 452,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2159,
   "line": 454,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 457,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 459,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 49,
   "mOp": 1,
   "mWR": 0,
   "line": 460,
   "offsetLabel": "tmpContractLength",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpContractLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2164,
   "useElseAddr": 1,
   "elseAddr": 2163,
   "line": 461,
   "jmpAddrLabel": "opEXTCODECOPY2",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT, JMPC(opEXTCODECOPY2)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 462,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => A"
  },
  {
   "inA": "1",
   "setHASHPOS": 1,
   "line": 466,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 48,
   "mOp": 1,
   "mWR": 0,
   "line": 467,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpContractHashId)"
  },
  {
   "inD": "1",
   "offset": 45,
   "mOp": 1,
   "mWR": 1,
   "line": 468,
   "offsetLabel": "codecopyHashId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D               :MSTORE(codecopyHashId) ; set hashId to get bytes from"
  },
  {
   "inB": "1",
   "offset": 46,
   "mOp": 1,
   "mWR": 1,
   "line": 469,
   "offsetLabel": "codecopyBytecodeLength",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B               :MSTORE(codecopyBytecodeLength) ; set contract bytecode length"
  },
  {
   "inC": "1",
   "offset": 42,
   "mOp": 1,
   "mWR": 1,
   "line": 470,
   "offsetLabel": "memOffset",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(memOffset)"
  },
  {
   "inE": "1",
   "offset": 43,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2100,
   "line": 471,
   "offsetLabel": "remainingBytes",
   "useCTX": 0,
   "jmpAddrLabel": "opCODECOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E               :MSTORE(remainingBytes), JMP(opCODECOPYinit)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 475,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %SMT_KEY_SC_LENGTH => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 476,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "line": 477,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D                          :SLOAD"
  },
  {
   "inD": "1",
   "offset": 49,
   "mOp": 1,
   "mWR": 1,
   "line": 478,
   "offsetLabel": "tmpContractLength",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D                               :MSTORE(tmpContractLength)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 480,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A => E"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 481,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 482,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2201,
   "useElseAddr": 1,
   "elseAddr": 2178,
   "line": 483,
   "jmpAddrLabel": "opEXTCODECOPYCheckHashEnd",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $                               :EQ, JMPC(opEXTCODECOPYCheckHashEnd)"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 486,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 487,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + 1           :MSTORE(arithA)"
  },
  {
   "CONST": "56",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 488,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    56              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 489,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 490,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "CONST": "279619",
   "inCntPoseidonG": "-1",
   "setA": 1,
   "line": 491,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2185,
   "line": 492,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT, JMPC(outOfCountersPoseidon)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 494,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 496,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %SMT_KEY_SC_CODE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 497,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 498,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 500,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E                          :MLOAD(nextHashPId)"
  },
  {
   "inE": "1",
   "offset": 48,
   "mOp": 1,
   "mWR": 1,
   "line": 501,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E                               :MSTORE(tmpContractHashId)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 502,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E + 1                           :MSTORE(nextHashPId)"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 505,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => B"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2194,
   "line": 506,
   "jmpAddrLabel": "opEXTCODECOPYCheckHashLoop",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => HASHPOS                    :JMP(opEXTCODECOPYCheckHashLoop)"
  },
  {
   "CONST": "8388388",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2195,
   "line": 510,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - 20              :JMPN(outOfCountersStep)"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2198,
   "useElseAddr": 1,
   "elseAddr": 2196,
   "line": 512,
   "jmpAddrLabel": "opEXTCODECOPYCheckHashLoopEnd",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        B                                       :JMPZ(opEXTCODECOPYCheckHashLoopEnd)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getBytecode",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "HASHPOS"
     },
     {
      "op": "number",
      "num": "1"
     }
    ]
   },
   "inFREE": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 514,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        ${getBytecode(A, HASHPOS, 1)}           :HASHP1(E)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2194,
   "line": 515,
   "jmpAddrLabel": "opEXTCODECOPYCheckHashLoop",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        B - 1 => B                              :JMP(opEXTCODECOPYCheckHashLoop)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPLen": 1,
   "line": 518,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        HASHPOS                         :HASHPLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPDigest": 1,
   "line": 519,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        $ => E                          :HASHPDIGEST(E)"
  },
  {
   "inE": "1",
   "assert": 1,
   "line": 521,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "        E                               :ASSERT"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 523,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                                        :RETURN"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2203,
   "line": 527,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 2204,
   "line": 528,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :JMPZ(readCode)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2210,
   "useElseAddr": 1,
   "elseAddr": 2205,
   "line": 529,
   "jmpAddrLabel": "opEXTCODECOPYfinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32          :JMPN(opEXTCODECOPYfinal)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getBytecode",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "number",
      "num": "32"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 530,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    ${getBytecode(A,B,32)} => D"
  },
  {
   "inD": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 532,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D               :MSTORE(bytesToStore)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 533,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "line": 534,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32 => C"
  },
  {
   "inB": "1",
   "CONST": "32",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2202,
   "line": 535,
   "jmpAddrLabel": "opEXTCODECOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + 32 => B     :JMP(opEXTCODECOPYinit)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getBytecode",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 539,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    ${getBytecode(A,B,C)} => A"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 540,
   "jmpAddrLabel": "SHLarith",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32 - C  => D    :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 542,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 543,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :JMP(readCode)"
  },
  {
   "CONST": "524287",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2215,
   "line": 556,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2216,
   "line": 557,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inGAS": "1",
   "CONST": "-2",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2217,
   "line": 560,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 562,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(retDataCTX)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 564,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2223,
   "useElseAddr": 1,
   "elseAddr": 2220,
   "line": 565,
   "jmpAddrLabel": "endOpRETURNDATASIZE",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :EQ, JMPC(endOpRETURNDATASIZE)"
  },
  {
   "inB": "1",
   "setCTX": 1,
   "line": 566,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => CTX"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 567,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(retDataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 569,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 572,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(SP++); [size => SP]"
  },
  {
   "CONST": "1024",
   "inSP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4679,
   "useElseAddr": 1,
   "elseAddr": 4215,
   "line": 574,
   "jmpAddrLabel": "stackOverflow",
   "elseAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
  },
  {
   "CONST": "262112",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 2226,
   "line": 590,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 32            :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524256",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2227,
   "line": 591,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 32          :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "279110",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2228,
   "line": 592,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 510 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2229,
   "line": 593,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "262142",
   "inCntMemAlign": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4671,
   "useElseAddr": 1,
   "elseAddr": 2230,
   "line": 594,
   "jmpAddrLabel": "outOfCountersMemalign",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 2    :JMPN(outOfCountersMemalign)"
  },
  {
   "inSP": "1",
   "CONST": "-3",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 2231,
   "line": 596,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 3 => SP          :JMPN(stackUnderflow)"
  },
  {
   "inGAS": "1",
   "CONST": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2232,
   "line": 598,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 2,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 600,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => D          :MLOAD(SP+2); [destOffset => D]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 601,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 602,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
  },
  {
   "inD": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 604,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D               :MSTORE(lastMemOffset)"
  },
  {
   "inC": "1",
   "offset": 19,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4490,
   "call": 1,
   "line": 606,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "jmpAddrLabel": "saveMem",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "line": 608,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => B          :MLOAD(retDataCTX)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 609,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2276,
   "useElseAddr": 1,
   "elseAddr": 2240,
   "line": 610,
   "jmpAddrLabel": "opRETURNDATACOPYEmpty",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :EQ, JMPC(opRETURNDATACOPYEmpty)"
  },
  {
   "inB": "1",
   "setCTX": 1,
   "line": 612,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => CTX"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 613,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 614,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(retDataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 23,
   "mOp": 1,
   "mWR": 0,
   "line": 615,
   "offsetLabel": "retDataOffset",
   "useCTX": 1,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => E          :MLOAD(retDataOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 616,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inE": "1",
   "inB": "1",
   "setE": 1,
   "line": 618,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E + B => E"
  },
  {
   "inB": "1",
   "inC": "1",
   "setB": 1,
   "line": 621,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B + C => B ; total offset (retdataOffset + dataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2248,
   "line": 622,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :LT, JMPC(outOfGas)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 623,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => B ; memory pointer where start to copy memory"
  },
  {
   "inC": "1",
   "CONST": "31",
   "setA": 1,
   "line": 625,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C+31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 627,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "line": 628,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    32              :MSTORE(arithB)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 629,
   "jmpAddrLabel": "divARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 630,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "CONST": "3",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 633,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    3               :MSTORE(arithA)"
  },
  {
   "inA": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 634,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 635,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2258,
   "line": 637,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2259,
   "line": 640,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 2260,
   "line": 641,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C               :JMPZ(readCode)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2269,
   "useElseAddr": 1,
   "elseAddr": 2261,
   "line": 642,
   "jmpAddrLabel": "opRETURNDATACOPYfinal",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32          :JMPN(opRETURNDATACOPYfinal)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 643,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 645,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(retDataCTX), CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 648,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 649,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => B"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 650,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 652,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inE": "1",
   "setD": 1,
   "line": 653,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => D"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2258,
   "line": 654,
   "jmpAddrLabel": "opRETURNDATACOPYinit",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    C - 32 => C     :JMP(opRETURNDATACOPYinit)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 657,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    B => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 25,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 659,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "jmpAddrLabel": "MLOADX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(retDataCTX), CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 661,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 662,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E => B ; offset retDataCTX"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 663,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    D => E ; offset current CTX"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 665,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 666,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :JMP(readCode)"
  },
  {
   "inE": "1",
   "inC": "1",
   "setB": 1,
   "line": 670,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    E + C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "useElseAddr": 1,
   "elseAddr": 4675,
   "line": 671,
   "jmpAddrLabel": "readCode",
   "elseAddrLabel": "outOfGas",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $               :EQ, JMPC(readCode, outOfGas)"
  },
  {
   "CONST": "279365",
   "inCntPoseidonG": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 2279,
   "line": 684,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 255 :JMPN(outOfCountersPoseidon)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2280,
   "line": 685,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inSP": "1",
   "CONST": "-1",
   "setSP": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 2281,
   "line": 687,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 688,
   "jmpAddrLabel": "maskAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 689,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
  },
  {
   "inGAS": "1",
   "CONST": "-100",
   "inD": "-2500",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2284,
   "line": 691,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_RED => GAS    :JMPN(outOfGas)"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 693,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    %SMT_KEY_SC_CODE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 694,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 695,
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    $ => A          :SLOAD"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 696,
   "jmpAddrLabel": "readCode",
   "fileName": "opcodes/calldata-returndata-code.zkasm",
   "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [hash => SP]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 682,
   "line": 19,
   "jmpAddrLabel": "opSTOP",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSTOP)            ; 0x00"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 273,
   "line": 20,
   "jmpAddrLabel": "opADD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opADD)             ; 0x01"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 281,
   "line": 21,
   "jmpAddrLabel": "opMUL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMUL)             ; 0x02"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 292,
   "line": 22,
   "jmpAddrLabel": "opSUB",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSUB)             ; 0x03"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 301,
   "line": 23,
   "jmpAddrLabel": "opDIV",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDIV)             ; 0x04"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 313,
   "line": 24,
   "jmpAddrLabel": "opSDIV",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSDIV)            ; 0x05"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 334,
   "line": 25,
   "jmpAddrLabel": "opMOD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMOD)             ; 0x06"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 346,
   "line": 26,
   "jmpAddrLabel": "opSMOD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSMOD)            ; 0x07"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 364,
   "line": 27,
   "jmpAddrLabel": "opADDMOD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opADDMOD)          ; 0x08"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 388,
   "line": 28,
   "jmpAddrLabel": "opMULMOD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMULMOD)          ; 0x09"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 396,
   "line": 29,
   "jmpAddrLabel": "opEXP",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opEXP)             ; 0x0a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 408,
   "line": 30,
   "jmpAddrLabel": "opSIGNEXTEND",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSIGNEXTEND)      ; 0x0b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 31,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x0c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 32,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x0d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 33,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x0e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 34,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x0f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 493,
   "line": 35,
   "jmpAddrLabel": "opLT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLT)              ; 0x10"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 501,
   "line": 36,
   "jmpAddrLabel": "opGT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opGT)              ; 0x11"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 509,
   "line": 37,
   "jmpAddrLabel": "opSLT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSLT)             ; 0x12"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 517,
   "line": 38,
   "jmpAddrLabel": "opSGT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSGT)             ; 0x13"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 525,
   "line": 39,
   "jmpAddrLabel": "opEQ",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opEQ)              ; 0x14"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 533,
   "line": 40,
   "jmpAddrLabel": "opISZERO",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opISZERO)          ; 0x15"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 540,
   "line": 41,
   "jmpAddrLabel": "opAND",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opAND)             ; 0x16"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 548,
   "line": 42,
   "jmpAddrLabel": "opOR",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opOR)              ; 0x17"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 556,
   "line": 43,
   "jmpAddrLabel": "opXOR",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opXOR)             ; 0x18"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 564,
   "line": 44,
   "jmpAddrLabel": "opNOT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opNOT)             ; 0x19"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 571,
   "line": 45,
   "jmpAddrLabel": "opBYTE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opBYTE)            ; 0x1a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 595,
   "line": 46,
   "jmpAddrLabel": "opSHL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSHL)             ; 0x1b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 586,
   "line": 47,
   "jmpAddrLabel": "opSHR",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSHR)             ; 0x1c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 605,
   "line": 48,
   "jmpAddrLabel": "opSAR",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSAR)             ; 0x1d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 49,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x1e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 50,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x1f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1279,
   "line": 51,
   "jmpAddrLabel": "opSHA3",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSHA3)            ; 0x20"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 52,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x21"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 53,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x22"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 54,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x23"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 55,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x24"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 56,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x25"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 57,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x26"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 58,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x27"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 59,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x28"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 60,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x29"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 61,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 62,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 63,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 64,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 65,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 66,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x2f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 635,
   "line": 67,
   "jmpAddrLabel": "opADDRESS",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opADDRESS)         ; 0x30"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 650,
   "line": 68,
   "jmpAddrLabel": "opBALANCE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opBALANCE)         ; 0x31"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 658,
   "line": 69,
   "jmpAddrLabel": "opORIGIN",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opORIGIN)          ; 0x32"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 663,
   "line": 70,
   "jmpAddrLabel": "opCALLER",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLER)          ; 0x33"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 668,
   "line": 71,
   "jmpAddrLabel": "opCALLVALUE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLVALUE)       ; 0x34"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1934,
   "line": 72,
   "jmpAddrLabel": "opCALLDATALOAD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLDATALOAD)    ; 0x35"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1962,
   "line": 73,
   "jmpAddrLabel": "opCALLDATASIZE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLDATASIZE)    ; 0x36"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1970,
   "line": 74,
   "jmpAddrLabel": "opCALLDATACOPY",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLDATACOPY)    ; 0x37"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2055,
   "line": 75,
   "jmpAddrLabel": "opCODESIZE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCODESIZE)        ; 0x38"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2068,
   "line": 76,
   "jmpAddrLabel": "opCODECOPY",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCODECOPY)        ; 0x39"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 673,
   "line": 77,
   "jmpAddrLabel": "opGASPRICE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opGASPRICE)        ; 0x3a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2125,
   "line": 78,
   "jmpAddrLabel": "opEXTCODESIZE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opEXTCODESIZE)     ; 0x3b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2135,
   "line": 79,
   "jmpAddrLabel": "opEXTCODECOPY",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opEXTCODECOPY)     ; 0x3c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2214,
   "line": 80,
   "jmpAddrLabel": "opRETURNDATASIZE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opRETURNDATASIZE)  ; 0x3d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2225,
   "line": 81,
   "jmpAddrLabel": "opRETURNDATACOPY",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opRETURNDATACOPY)  ; 0x3e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2278,
   "line": 82,
   "jmpAddrLabel": "opEXTCODEHASH",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opEXTCODEHASH)     ; 0x3f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 436,
   "line": 83,
   "jmpAddrLabel": "opBLOCKHASH",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opBLOCKHASH)       ; 0x40"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 459,
   "line": 84,
   "jmpAddrLabel": "opCOINBASE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCOINBASE)        ; 0x41"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 464,
   "line": 85,
   "jmpAddrLabel": "opTIMESTAMP",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opTIMESTAMP)       ; 0x42"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 469,
   "line": 86,
   "jmpAddrLabel": "opNUMBER",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opNUMBER)          ; 0x43"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 474,
   "line": 87,
   "jmpAddrLabel": "opDIFFICULTY",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDIFFICULTY)      ; 0x44"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 479,
   "line": 88,
   "jmpAddrLabel": "opGASLIMIT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opGASLIMIT)        ; 0x45"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 484,
   "line": 89,
   "jmpAddrLabel": "opCHAINID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCHAINID)         ; 0x46"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 642,
   "line": 90,
   "jmpAddrLabel": "opSELFBALANCE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSELFBALANCE)     ; 0x47"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 489,
   "line": 91,
   "jmpAddrLabel": "opBASEFEE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opBASEFEE)         ; 0x48"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 92,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x49"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 93,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4A"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 94,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4B"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 95,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4C"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 96,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4D"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 97,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4E"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 98,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x4F"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1799,
   "line": 99,
   "jmpAddrLabel": "opPOP",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPOP)             ; 0x50"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1802,
   "line": 100,
   "jmpAddrLabel": "opMLOAD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMLOAD)           ; 0x51"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1813,
   "line": 101,
   "jmpAddrLabel": "opMSTORE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMSTORE)          ; 0x52"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1826,
   "line": 102,
   "jmpAddrLabel": "opMSTORE8",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMSTORE8)         ; 0x53"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1857,
   "line": 103,
   "jmpAddrLabel": "opSLOAD",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSLOAD)           ; 0x54"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1866,
   "line": 104,
   "jmpAddrLabel": "opSSTORE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSSTORE)          ; 0x55"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1328,
   "line": 105,
   "jmpAddrLabel": "opJUMP",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opJUMP)            ; 0x56"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1333,
   "line": 106,
   "jmpAddrLabel": "opJUMPI",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opJUMPI)           ; 0x57"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1370,
   "line": 107,
   "jmpAddrLabel": "opPC",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPC)              ; 0x58"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1841,
   "line": 108,
   "jmpAddrLabel": "opMSIZE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opMSIZE)           ; 0x59"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 678,
   "line": 109,
   "jmpAddrLabel": "opGAS",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opGAS)             ; 0x5a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1374,
   "line": 110,
   "jmpAddrLabel": "opJUMPDEST",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opJUMPDEST)        ; 0x5b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 111,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x5C"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 112,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x5D"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 113,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x5E"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 114,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0x5F"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1481,
   "line": 115,
   "jmpAddrLabel": "opPUSH1",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH1)           ; 0x60"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1483,
   "line": 116,
   "jmpAddrLabel": "opPUSH2",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH2)           ; 0x61"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1485,
   "line": 117,
   "jmpAddrLabel": "opPUSH3",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH3)           ; 0x62"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1487,
   "line": 118,
   "jmpAddrLabel": "opPUSH4",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH4)           ; 0x63"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1489,
   "line": 119,
   "jmpAddrLabel": "opPUSH5",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH5)           ; 0x64"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1491,
   "line": 120,
   "jmpAddrLabel": "opPUSH6",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH6)           ; 0x65"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1493,
   "line": 121,
   "jmpAddrLabel": "opPUSH7",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH7)           ; 0x66"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1495,
   "line": 122,
   "jmpAddrLabel": "opPUSH8",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH8)           ; 0x67"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1497,
   "line": 123,
   "jmpAddrLabel": "opPUSH9",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH9)           ; 0x68"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1499,
   "line": 124,
   "jmpAddrLabel": "opPUSH10",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH10)          ; 0x69"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1501,
   "line": 125,
   "jmpAddrLabel": "opPUSH11",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH11)          ; 0x6a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1503,
   "line": 126,
   "jmpAddrLabel": "opPUSH12",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH12)          ; 0x6b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1505,
   "line": 127,
   "jmpAddrLabel": "opPUSH13",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH13)          ; 0x6c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1507,
   "line": 128,
   "jmpAddrLabel": "opPUSH14",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH14)          ; 0x6d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1509,
   "line": 129,
   "jmpAddrLabel": "opPUSH15",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH15)          ; 0x6e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1511,
   "line": 130,
   "jmpAddrLabel": "opPUSH16",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH16)          ; 0x6f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1513,
   "line": 131,
   "jmpAddrLabel": "opPUSH17",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH17)          ; 0x70"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1515,
   "line": 132,
   "jmpAddrLabel": "opPUSH18",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH18)          ; 0x71"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1517,
   "line": 133,
   "jmpAddrLabel": "opPUSH19",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH19)          ; 0x72"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1519,
   "line": 134,
   "jmpAddrLabel": "opPUSH20",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH20)          ; 0x73"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1521,
   "line": 135,
   "jmpAddrLabel": "opPUSH21",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH21)          ; 0x74"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1523,
   "line": 136,
   "jmpAddrLabel": "opPUSH22",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH22)          ; 0x75"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1525,
   "line": 137,
   "jmpAddrLabel": "opPUSH23",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH23)          ; 0x76"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1527,
   "line": 138,
   "jmpAddrLabel": "opPUSH24",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH24)          ; 0x77"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1529,
   "line": 139,
   "jmpAddrLabel": "opPUSH25",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH25)          ; 0x78"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1531,
   "line": 140,
   "jmpAddrLabel": "opPUSH26",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH26)          ; 0x79"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1533,
   "line": 141,
   "jmpAddrLabel": "opPUSH27",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH27)          ; 0x7a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1535,
   "line": 142,
   "jmpAddrLabel": "opPUSH28",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH28)          ; 0x7b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1537,
   "line": 143,
   "jmpAddrLabel": "opPUSH29",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH29)          ; 0x7c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1539,
   "line": 144,
   "jmpAddrLabel": "opPUSH30",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH30)          ; 0x7d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1541,
   "line": 145,
   "jmpAddrLabel": "opPUSH31",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH31)          ; 0x7e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1543,
   "line": 146,
   "jmpAddrLabel": "opPUSH32",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opPUSH32)          ; 0x7f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1590,
   "line": 147,
   "jmpAddrLabel": "opDUP1",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP1)            ; 0x80"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1597,
   "line": 148,
   "jmpAddrLabel": "opDUP2",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP2)            ; 0x81"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1603,
   "line": 149,
   "jmpAddrLabel": "opDUP3",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP3)            ; 0x82"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1609,
   "line": 150,
   "jmpAddrLabel": "opDUP4",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP4)            ; 0x83"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1615,
   "line": 151,
   "jmpAddrLabel": "opDUP5",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP5)            ; 0x84"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1621,
   "line": 152,
   "jmpAddrLabel": "opDUP6",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP6)            ; 0x85"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1627,
   "line": 153,
   "jmpAddrLabel": "opDUP7",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP7)            ; 0x86"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1633,
   "line": 154,
   "jmpAddrLabel": "opDUP8",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP8)            ; 0x87"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1639,
   "line": 155,
   "jmpAddrLabel": "opDUP9",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP9)            ; 0x88"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1645,
   "line": 156,
   "jmpAddrLabel": "opDUP10",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP10)           ; 0x89"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1651,
   "line": 157,
   "jmpAddrLabel": "opDUP11",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP11)           ; 0x8a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1657,
   "line": 158,
   "jmpAddrLabel": "opDUP12",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP12)           ; 0x8b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1663,
   "line": 159,
   "jmpAddrLabel": "opDUP13",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP13)           ; 0x8c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1669,
   "line": 160,
   "jmpAddrLabel": "opDUP14",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP14)           ; 0x8d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1675,
   "line": 161,
   "jmpAddrLabel": "opDUP15",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP15)           ; 0x8e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1681,
   "line": 162,
   "jmpAddrLabel": "opDUP16",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDUP16)           ; 0x8f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1687,
   "line": 163,
   "jmpAddrLabel": "opSWAP1",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP1)           ; 0x90"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1694,
   "line": 164,
   "jmpAddrLabel": "opSWAP2",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP2)           ; 0x91"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1701,
   "line": 165,
   "jmpAddrLabel": "opSWAP3",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP3)           ; 0x92"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1708,
   "line": 166,
   "jmpAddrLabel": "opSWAP4",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP4)           ; 0x93"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1715,
   "line": 167,
   "jmpAddrLabel": "opSWAP5",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP5)           ; 0x94"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1722,
   "line": 168,
   "jmpAddrLabel": "opSWAP6",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP6)           ; 0x95"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1729,
   "line": 169,
   "jmpAddrLabel": "opSWAP7",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP7)           ; 0x96"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1736,
   "line": 170,
   "jmpAddrLabel": "opSWAP8",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP8)           ; 0x97"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1743,
   "line": 171,
   "jmpAddrLabel": "opSWAP9",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP9)           ; 0x98"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1750,
   "line": 172,
   "jmpAddrLabel": "opSWAP10",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP10)          ; 0x99"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1757,
   "line": 173,
   "jmpAddrLabel": "opSWAP11",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP11)          ; 0x9a"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1764,
   "line": 174,
   "jmpAddrLabel": "opSWAP12",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP12)          ; 0x9b"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1771,
   "line": 175,
   "jmpAddrLabel": "opSWAP13",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP13)          ; 0x9c"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1778,
   "line": 176,
   "jmpAddrLabel": "opSWAP14",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP14)          ; 0x9d"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1785,
   "line": 177,
   "jmpAddrLabel": "opSWAP15",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP15)          ; 0x9e"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1792,
   "line": 178,
   "jmpAddrLabel": "opSWAP16",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSWAP16)          ; 0x9f"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1376,
   "line": 179,
   "jmpAddrLabel": "opLOG0",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLOG0)            ; 0xa0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1394,
   "line": 180,
   "jmpAddrLabel": "opLOG1",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLOG1)            ; 0xa1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1412,
   "line": 181,
   "jmpAddrLabel": "opLOG2",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLOG2)            ; 0xa2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1430,
   "line": 182,
   "jmpAddrLabel": "opLOG3",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLOG3)            ; 0xa3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1448,
   "line": 183,
   "jmpAddrLabel": "opLOG4",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opLOG4)            ; 0xa4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 184,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xA5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 185,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xA6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 186,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xA7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 187,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xA8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 188,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xA9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 189,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAA"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 190,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAB"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 191,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAC"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 192,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAD"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 193,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAE"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 194,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xAF"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 195,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 196,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 197,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 198,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 199,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 200,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 201,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 202,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 203,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 204,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xB9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 205,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBA"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 206,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBB"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 207,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBC"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 208,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBD"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 209,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBE"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 210,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xBF"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 211,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 212,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 213,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 214,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 215,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 216,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 217,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 218,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 219,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 220,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xC9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 221,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCA"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 222,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCB"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 223,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCC"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 224,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCD"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 225,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCE"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 226,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xCF"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 227,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 228,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 229,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 230,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 231,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 232,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 233,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 234,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 235,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 236,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xD9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 237,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDA"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 238,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDB"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 239,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDC"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 240,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDD"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 241,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDE"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 242,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xDF"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 243,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 244,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 245,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 246,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 247,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 248,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 249,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 250,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 251,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 252,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xE9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 253,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xEA"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 254,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xEB"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 255,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xEC"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 256,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xED"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 257,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xEE"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 258,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xEF"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 699,
   "line": 259,
   "jmpAddrLabel": "opCREATE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCREATE)          ; 0xf0"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 765,
   "line": 260,
   "jmpAddrLabel": "opCALL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALL)            ; 0xf1"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 838,
   "line": 261,
   "jmpAddrLabel": "opCALLCODE",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCALLCODE)        ; 0xf2"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 904,
   "line": 262,
   "jmpAddrLabel": "opRETURN",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opRETURN)          ; 0xf3"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 995,
   "line": 263,
   "jmpAddrLabel": "opDELEGATECALL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opDELEGATECALL)    ; 0xf4"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1055,
   "line": 264,
   "jmpAddrLabel": "opCREATE2",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opCREATE2)         ; 0xf5"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 265,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xf6"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 266,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xf7"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 267,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xf8"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 268,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xf9"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1126,
   "line": 269,
   "jmpAddrLabel": "opSTATICCALL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSTATICCALL)      ; 0xfa"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 270,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xfb"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 271,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xfc"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1178,
   "line": 272,
   "jmpAddrLabel": "opREVERT",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opREVERT)          ; 0xfd"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1278,
   "line": 273,
   "jmpAddrLabel": "opINVALID",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opINVALID)         ; 0xfe"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 1226,
   "line": 274,
   "jmpAddrLabel": "opSENDALL",
   "fileName": "map-opcodes.zkasm",
   "lineStr": "    :JMP(opSENDALL)         ; 0xff"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 3,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => B                          :MLOAD(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 4,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "CONST": "2548",
   "setRR": 1,
   "line": 5,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    zkPC+2 => RR"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4706,
   "useElseAddr": 1,
   "elseAddr": 2548,
   "line": 6,
   "jmpAddrLabel": "moveBalances",
   "elseAddrLabel": "next",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $                               :LT, JMPC(moveBalances)"
  },
  {
   "inGAS": "1",
   "CONST": "-3000",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2549,
   "line": 8,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    GAS - %ECRECOVER_GAS => GAS                   :JMPN(outOfGas) ; gas static = 3000"
  },
  {
   "CONST": "1024",
   "setSP": 1,
   "line": 11,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    %CALLDATA_OFFSET => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 12,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => A                              :MLOAD(SP++) ; hash"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 13,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => D                              :MLOAD(SP++) ; v"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 14,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => B                              :MLOAD(SP++) ; r"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2705,
   "call": 1,
   "line": 15,
   "jmpAddrLabel": "ecrecover_precompiled",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => C                              :MLOAD(SP) ,CALL(ecrecover_precompiled) ; in: [A: hash, B: r, C: s, D: v], out: [A: result_ecrecover] ; s"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2555,
   "useElseAddr": 1,
   "elseAddr": 2560,
   "line": 16,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "endECRECOVER",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    B                                   :JMPNZ(endECRECOVER)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 18,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => E                              :MLOAD(retCallOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 2557,
   "line": 19,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => C                              :MLOAD(originCTX), JMPZ(handleGas)"
  },
  {
   "inC": "1",
   "setCTX": 1,
   "line": 20,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    C => CTX"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 21,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    A                                   :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2687,
   "line": 22,
   "jmpAddrLabel": "preEnd",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "                                        :JMP(preEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 2561,
   "line": 25,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    $ => A                              :MLOAD(originCTX), JMPZ(handleGas)"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 26,
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "    A => CTX"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2687,
   "line": 27,
   "jmpAddrLabel": "preEnd",
   "fileName": "precompiled/pre-ecrecover.zkasm",
   "lineStr": "                                        :JMP(preEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 3,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => B          :MLOAD(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 4,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "CONST": "2567",
   "setRR": 1,
   "line": 5,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    zkPC+2 => RR"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4706,
   "useElseAddr": 1,
   "elseAddr": 2567,
   "line": 6,
   "jmpAddrLabel": "moveBalances",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $               :LT, JMPC(moveBalances)"
  },
  {
   "inGAS": "1",
   "CONST": "-15",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2568,
   "line": 8,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    GAS - %IDENTITY_GAS => GAS :JMPN(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 9,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => C          :MLOAD(argsLengthCall)"
  },
  {
   "inC": "1",
   "CONST": "31",
   "setA": 1,
   "line": 11,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C + 31 => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 12,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "32",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 13,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 14,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inGAS": "1",
   "inA": "-3",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2574,
   "line": 16,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    GAS - %IDENTITY_WORD_GAS*A => GAS   :JMPN(outOfGas)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 17,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "inCTX": "1",
   "setA": 1,
   "line": 18,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    CTX => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 2577,
   "line": 19,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX), JMPZ(handleGas)"
  },
  {
   "inA": "1",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 20,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A               :MSTORE(retDataCTX)"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 21,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A => CTX"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 22,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "CONST": "0",
   "setE": 1,
   "line": 23,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    0 => E"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 24,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inB": "1",
   "offset": 23,
   "mOp": 1,
   "mWR": 1,
   "line": 25,
   "offsetLabel": "retDataOffset",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    B               :MSTORE(retDataOffset)"
  },
  {
   "inC": "1",
   "offset": 24,
   "mOp": 1,
   "mWR": 1,
   "line": 26,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C               :MSTORE(retDataLength)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2585,
   "line": 29,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2586,
   "line": 30,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2598,
   "useElseAddr": 1,
   "elseAddr": 2587,
   "line": 33,
   "jmpAddrLabel": "IDENTITYreturn",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C               :JMPZ(IDENTITYreturn)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2593,
   "useElseAddr": 1,
   "elseAddr": 2588,
   "line": 34,
   "jmpAddrLabel": "IDENTITYfinal",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C - 32          :JMPN(IDENTITYfinal)"
  },
  {
   "CONST": "1024",
   "inA": "1",
   "setSP": 1,
   "line": 35,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %CALLDATA_OFFSET + A => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 36,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => B          :MLOAD(SP)"
  },
  {
   "inB": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 37,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    B               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setA": 1,
   "line": 38,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A + 1 => A"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2584,
   "line": 39,
   "jmpAddrLabel": "IDENTITYinit",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C - 32 => C     :JMP(IDENTITYinit)"
  },
  {
   "CONST": "1024",
   "inA": "1",
   "setSP": 1,
   "line": 42,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %CALLDATA_OFFSET + A => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 43,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => A          :MLOAD(SP)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 44,
   "jmpAddrLabel": "SHRarith",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 45,
   "jmpAddrLabel": "SHLarith",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "                    :CALL(SHLarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 46,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX)"
  },
  {
   "CONST": "0",
   "setE": 1,
   "line": 50,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    0 => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 22,
   "mOp": 1,
   "mWR": 0,
   "line": 51,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => B          :MLOAD(retCallLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 24,
   "mOp": 1,
   "mWR": 0,
   "line": 54,
   "offsetLabel": "retDataLength",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => A          :MLOAD(retDataLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2604,
   "useElseAddr": 1,
   "elseAddr": 2602,
   "line": 55,
   "jmpAddrLabel": "IDENTITYreturn2",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $               :LT, JMPC(IDENTITYreturn2)"
  },
  {
   "inB": "1",
   "setC": 1,
   "line": 56,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    B => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2606,
   "line": 57,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "jmpAddrLabel": "IDENTITYreturnLoop",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => B          :MLOAD(retCallOffset), JMP(IDENTITYreturnLoop)"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 60,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 61,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => B          :MLOAD(retCallOffset)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2607,
   "line": 64,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388208",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2608,
   "line": 65,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2625,
   "useElseAddr": 1,
   "elseAddr": 2609,
   "line": 67,
   "jmpAddrLabel": "IDENTITYend",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C               :JMPZ(IDENTITYend)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2620,
   "useElseAddr": 1,
   "elseAddr": 2610,
   "line": 68,
   "jmpAddrLabel": "IDENTITYreturnFinal",
   "elseAddrLabel": "next",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C - 32          :JMPN(IDENTITYreturnFinal)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 69,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "                    :CALL(MLOAD32)"
  },
  {
   "inE": "1",
   "setD": 1,
   "line": 70,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    E => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 71,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 72,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 73,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 74,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "                    :CALL(MSTORE32)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 75,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    E => B"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 76,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    D => E"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "line": 77,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    C - 32 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2606,
   "line": 78,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "IDENTITYreturnLoop",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(IDENTITYreturnLoop)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 81,
   "jmpAddrLabel": "MLOADX",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "                    :CALL(MLOADX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 82,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 83,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 84,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 85,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 88,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2687,
   "line": 89,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "preEnd",
   "fileName": "precompiled/identity.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX), JMP(preEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 8,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C          :MLOAD(argsLengthCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 9,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 10,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => E          :MLOAD(argsOffsetCall), CALL(MLOAD32)"
  },
  {
   "inA": "1",
   "offset": 41,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 11,
   "offsetLabel": "Bsize",
   "useCTX": 1,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A               :MSTORE(Bsize), CALL(MLOAD32)"
  },
  {
   "inA": "1",
   "offset": 42,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 12,
   "offsetLabel": "Esize",
   "useCTX": 1,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A               :MSTORE(Esize), CALL(MLOAD32)"
  },
  {
   "inA": "1",
   "offset": 43,
   "mOp": 1,
   "mWR": 1,
   "line": 13,
   "offsetLabel": "Msize",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A               :MSTORE(Msize)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 41,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 14,
   "offsetLabel": "Bsize",
   "useCTX": 1,
   "jmpAddrLabel": "MLOADX",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C          :MLOAD(Bsize), CALL(MLOADX)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 15,
   "jmpAddrLabel": "SHRarith",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith)"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 16,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 42,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 17,
   "offsetLabel": "Esize",
   "useCTX": 1,
   "jmpAddrLabel": "MLOADX",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C          :MLOAD(Esize), CALL(MLOADX)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 18,
   "jmpAddrLabel": "SHRarith",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith)"
  },
  {
   "inA": "1",
   "offset": 44,
   "mOp": 1,
   "mWR": 1,
   "line": 19,
   "offsetLabel": "exp",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A               :MSTORE(exp)"
  },
  {
   "inA": "1",
   "setD": 1,
   "line": 20,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 43,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 21,
   "offsetLabel": "Msize",
   "useCTX": 1,
   "jmpAddrLabel": "MLOADX",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C          :MLOAD(Msize), CALL(MLOADX)"
  },
  {
   "inD": "1",
   "setE": 1,
   "line": 22,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    D => E"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 23,
   "jmpAddrLabel": "SHRarith",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith)"
  },
  {
   "inE": "1",
   "setD": 1,
   "line": 24,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    E => D"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 25,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    B => E"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 26,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2651,
   "useElseAddr": 1,
   "elseAddr": 2647,
   "line": 27,
   "jmpAddrLabel": "MODEXPreturn0",
   "elseAddrLabel": "next",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $               :EQ,JMPC(MODEXPreturn0)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 28,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "exp",
    "params": [
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 29,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    ${exp(B,D)} => B"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 30,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    ${B%A} => A"
  },
  {
   "inC": "1",
   "setD": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2653,
   "line": 31,
   "jmpAddrLabel": "MODEXPfinal",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    C => D          :JMP(MODEXPfinal)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 34,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 35,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    C => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 38,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 21,
   "mOp": 1,
   "mWR": 0,
   "line": 39,
   "offsetLabel": "retCallOffset",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => E          :MLOAD(retCallOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 22,
   "mOp": 1,
   "mWR": 0,
   "line": 40,
   "offsetLabel": "retCallLength",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C          :MLOAD(retCallLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 41,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "call": 1,
   "line": 45,
   "jmpAddrLabel": "SHLarith",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    32 - D => D     :CALL(SHLarith)"
  },
  {
   "inA": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 46,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A               :MSTORE(bytesToStore)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2662,
   "useElseAddr": 1,
   "elseAddr": 2660,
   "line": 47,
   "jmpAddrLabel": "MODEXPstoreX",
   "elseAddrLabel": "next",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    C - 32          :JMPN(MODEXPstoreX)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "call": 1,
   "line": 48,
   "jmpAddrLabel": "MSTORE32",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "                    :CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2663,
   "line": 49,
   "jmpAddrLabel": "MODEXPgas",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "                    :JMP(MODEXPgas)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4347,
   "call": 1,
   "line": 52,
   "jmpAddrLabel": "MSTOREX",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "                    :CALL(MSTOREX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 41,
   "mOp": 1,
   "mWR": 0,
   "line": 55,
   "offsetLabel": "Bsize",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => A              :MLOAD(Bsize)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 43,
   "mOp": 1,
   "mWR": 0,
   "line": 56,
   "offsetLabel": "Msize",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => B              :MLOAD(Msize)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2666,
   "useElseAddr": 1,
   "elseAddr": 2667,
   "line": 57,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "MODEXPgas2",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => D              :LT, JMPNC(MODEXPgas2)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 58,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    B => A"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 61,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    0 => D ;iteration_count"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "add",
      "values": [
       {
        "op": "getReg",
        "regName": "A"
       },
       {
        "op": "number",
        "num": "7"
       }
      ]
     },
     {
      "op": "number",
      "num": "8"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 62,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    ${(A+7)/8} => A ;words"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "exp",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "number",
      "num": "2"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 63,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    ${exp(A,2)} => A ;multiplication_complexity"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 64,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    A                   :MSTORE(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 42,
   "mOp": 1,
   "mWR": 0,
   "line": 65,
   "offsetLabel": "Esize",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => C              :MLOAD(Esize)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 44,
   "mOp": 1,
   "mWR": 0,
   "line": 66,
   "offsetLabel": "exp",
   "useCTX": 1,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => B              :MLOAD(exp)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2674,
   "useElseAddr": 1,
   "elseAddr": 2677,
   "line": 67,
   "jmpAddrLabel": "MODEXPgas3",
   "elseAddrLabel": "MODEXPgas4",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    C - 32              :JMPN(MODEXPgas3, MODEXPgas4)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 70,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2677,
   "useElseAddr": 1,
   "elseAddr": 2676,
   "line": 71,
   "jmpAddrLabel": "MODEXPgas4",
   "elseAddrLabel": "next",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $                   :EQ,JMPC(MODEXPgas4)"
  },
  {
   "inC": "8",
   "CONST": "-1",
   "setD": 1,
   "line": 72,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    8*C - 1 => D ;iteration_count"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 75,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    1 => B"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 76,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    D => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2680,
   "useElseAddr": 1,
   "elseAddr": 2681,
   "line": 77,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "MODEXPgasEnd",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => A              :LT, JMPNC(MODEXPgasEnd)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 78,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    1 => D ;iteration_count"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 81,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => A              :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "mul",
      "values": [
       {
        "op": "getReg",
        "regName": "A"
       },
       {
        "op": "getReg",
        "regName": "D"
       }
      ]
     },
     {
      "op": "number",
      "num": "3"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "line": 82,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    ${A*D/3} => A ;multiplication_complexity * iteration_count / 3 TODO: This is UNSAFE!!"
  },
  {
   "CONST": "200",
   "setB": 1,
   "line": 83,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    200 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2685,
   "useElseAddr": 1,
   "elseAddr": 2686,
   "line": 84,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "MODEXPend",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    $ => A              :LT, JMPNC(MODEXPend)"
  },
  {
   "CONST": "200",
   "setB": 1,
   "line": 85,
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    200 => B"
  },
  {
   "inGAS": "1",
   "inB": "-1",
   "setGAS": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 2687,
   "line": 88,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "preEnd",
   "fileName": "precompiled/modexp.zkasm",
   "lineStr": "    GAS - B => GAS      :JMPN(outOfGas, preEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 2,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => B          :MLOAD(gasCTX)"
  },
  {
   "inB": "1",
   "inGAS": "1",
   "setGAS": 1,
   "line": 3,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    B + GAS => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 4,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 5,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "CONST": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 6,
   "jmpAddrLabel": "readCode",
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    1               :MSTORE(SP++), JMP(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setGAS": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 9,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => GAS        :MLOAD(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 10,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 11,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 12,
   "jmpAddrLabel": "readCode",
   "fileName": "precompiled/end.zkasm",
   "lineStr": "    0               :MSTORE(SP++), JMP(readCode)"
  },
  {
   "inA": "1",
   "CONST": "-2",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2544,
   "useElseAddr": 1,
   "elseAddr": 2697,
   "line": 12,
   "jmpAddrLabel": "funcECRECOVER",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 2               :JMPN(funcECRECOVER)"
  },
  {
   "inA": "1",
   "CONST": "-3",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2698,
   "line": 13,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 3               :JMPN(callContract)  ;:JMPN(SHA256)"
  },
  {
   "inA": "1",
   "CONST": "-4",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2699,
   "line": 14,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 4               :JMPN(callContract)  ;:JMPN(RIPEMD160)"
  },
  {
   "inA": "1",
   "CONST": "-5",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2563,
   "useElseAddr": 1,
   "elseAddr": 2700,
   "line": 15,
   "jmpAddrLabel": "IDENTITY",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 5               :JMPN(IDENTITY)"
  },
  {
   "inA": "1",
   "CONST": "-6",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2701,
   "line": 16,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 6               :JMPN(callContract) ;:JMPN(MODEXP)"
  },
  {
   "inA": "1",
   "CONST": "-7",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2702,
   "line": 17,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 7               :JMPN(callContract) ;:JMPN(ECADD)"
  },
  {
   "inA": "1",
   "CONST": "-8",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2703,
   "line": 18,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 8               :JMPN(callContract) ;:JMPN(ECMUL)"
  },
  {
   "inA": "1",
   "CONST": "-9",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2704,
   "line": 19,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 9               :JMPN(callContract) ;:JMPN(ECPAIRING)"
  },
  {
   "inA": "1",
   "CONST": "-10",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 2705,
   "line": 20,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "precompiled/selector.zkasm",
   "lineStr": "    A - 10              :JMPN(callContract) ;:JMPN(BLAKE2F)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
   "offset": 61,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2707,
   "line": 34,
   "offsetLabel": "ecrecover_s_upperlimit",
   "useCTX": 0,
   "jmpAddrLabel": "ecrecover_store_args",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FNEC_MINUS_ONE :MSTORE(ecrecover_s_upperlimit),JMP(ecrecover_store_args)"
  },
  {
   "CONSTL": "57896044618658097711785492504343953926418782139537452191302581570759080747169",
   "offset": 61,
   "mOp": 1,
   "mWR": 1,
   "line": 37,
   "offsetLabel": "ecrecover_s_upperlimit",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FNEC_DIV_TWO   :MSTORE(ecrecover_s_upperlimit)"
  },
  {
   "CONST": "523188",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 2708,
   "line": 41,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 1100   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "261044",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 2709,
   "line": 42,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %MAX_CNT_ARITH - CNT_ARITH - 1100     :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "8382008",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 2710,
   "line": 43,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - 6400     :JMPN(outOfCountersStep)"
  },
  {
   "inA": "1",
   "offset": 50,
   "mOp": 1,
   "mWR": 1,
   "line": 45,
   "offsetLabel": "ecrecover_hash",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        A           :MSTORE(ecrecover_hash)"
  },
  {
   "inB": "1",
   "offset": 51,
   "mOp": 1,
   "mWR": 1,
   "line": 46,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        B           :MSTORE(ecrecover_r)"
  },
  {
   "inC": "1",
   "offset": 52,
   "mOp": 1,
   "mWR": 1,
   "line": 47,
   "offsetLabel": "ecrecover_s",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C           :MSTORE(ecrecover_s)"
  },
  {
   "inD": "1",
   "offset": 53,
   "mOp": 1,
   "mWR": 1,
   "line": 48,
   "offsetLabel": "ecrecover_v",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        D           :MSTORE(ecrecover_v)"
  },
  {
   "inRR": "1",
   "offset": 59,
   "mOp": 1,
   "mWR": 1,
   "line": 51,
   "offsetLabel": "ecrecover_RR",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        RR          :MSTORE(ecrecover_RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 51,
   "mOp": 1,
   "mWR": 0,
   "line": 54,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_r)"
  },
  {
   "CONSTL": "0",
   "setA": 1,
   "line": 55,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0n => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2782,
   "useElseAddr": 1,
   "elseAddr": 2718,
   "line": 56,
   "jmpAddrLabel": "ecrecover_r_is_zero",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $           :EQ,JMPC(ecrecover_r_is_zero)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
   "setA": 1,
   "line": 57,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FNEC_MINUS_ONE => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2783,
   "useElseAddr": 1,
   "elseAddr": 2720,
   "line": 59,
   "jmpAddrLabel": "ecrecover_r_is_too_big",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $           :LT,JMPC(ecrecover_r_is_too_big)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 61,
   "mOp": 1,
   "mWR": 0,
   "line": 62,
   "offsetLabel": "ecrecover_s_upperlimit",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_s_upperlimit)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 52,
   "mOp": 1,
   "mWR": 0,
   "line": 63,
   "offsetLabel": "ecrecover_s",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_s)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2785,
   "useElseAddr": 1,
   "elseAddr": 2723,
   "line": 64,
   "jmpAddrLabel": "ecrecover_s_is_too_big",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $           :LT,JMPC(ecrecover_s_is_too_big)"
  },
  {
   "CONSTL": "0",
   "setA": 1,
   "line": 65,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0n => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2784,
   "useElseAddr": 1,
   "elseAddr": 2725,
   "line": 66,
   "jmpAddrLabel": "ecrecover_s_is_zero",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $           :EQ,JMPC(ecrecover_s_is_zero)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 51,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2832,
   "call": 1,
   "line": 69,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "jmpAddrLabel": "invFnEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_r),CALL(invFnEc)"
  },
  {
   "inB": "1",
   "offset": 54,
   "mOp": 1,
   "mWR": 1,
   "line": 70,
   "offsetLabel": "ecrecover_r_inv",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        B           :MSTORE(ecrecover_r_inv)"
  },
  {
   "CONSTL": "27",
   "setB": 1,
   "line": 72,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0x1Bn => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 53,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "ecrecover_v",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_v)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2730,
   "useElseAddr": 1,
   "elseAddr": 2731,
   "line": 74,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "ecrecover_v_not_eq_1b",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_v_not_eq_1b)"
  },
  {
   "CONSTL": "0",
   "offset": 60,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2734,
   "line": 77,
   "offsetLabel": "ecrecover_v_parity",
   "useCTX": 0,
   "jmpAddrLabel": "ecrecover_v_ok",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0n          :MSTORE(ecrecover_v_parity),JMP(ecrecover_v_ok)"
  },
  {
   "CONSTL": "28",
   "setB": 1,
   "line": 80,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0x1Cn => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2733,
   "useElseAddr": 1,
   "elseAddr": 2786,
   "line": 81,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "ecrecover_v_not_eq_1b1c",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_v_not_eq_1b1c)"
  },
  {
   "CONSTL": "1",
   "offset": 60,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2734,
   "line": 84,
   "offsetLabel": "ecrecover_v_parity",
   "useCTX": 0,
   "jmpAddrLabel": "ecrecover_v_ok",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        1n          :MSTORE(ecrecover_v_parity),JMP(ecrecover_v_ok)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "setB": 1,
   "offset": 51,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 91,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A,B    :MLOAD(ecrecover_r),CALL(mulFpEc)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 93,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 51,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 94,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_r),CALL(mulFpEc)"
  },
  {
   "CONST": "7",
   "setA": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2791,
   "call": 1,
   "line": 96,
   "jmpAddrLabel": "addFpEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        7 => A      :CALL(addFpEc)"
  },
  {
   "inC": "1",
   "offset": 56,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2844,
   "call": 1,
   "line": 98,
   "offsetLabel": "ecrecover_y2",
   "useCTX": 0,
   "jmpAddrLabel": "sqrtFpEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C           :MSTORE(ecrecover_y2),CALL(sqrtFpEc)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setA": 1,
   "line": 102,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FPEC_NON_SQRT => A"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 103,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2742,
   "useElseAddr": 1,
   "elseAddr": 2744,
   "line": 104,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "ecrecover_has_sqrt",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_has_sqrt)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 56,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2858,
   "call": 1,
   "line": 108,
   "offsetLabel": "ecrecover_y2",
   "useCTX": 0,
   "jmpAddrLabel": "checkSqrtFpEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => C      :MLOAD(ecrecover_y2),CALL(checkSqrtFpEc)"
  },
  {
   "CONST": "1",
   "assert": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2787,
   "line": 110,
   "jmpAddrLabel": "ecrecover_not_exists_sqrt_of_y",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        1           :ASSERT,JMP(ecrecover_not_exists_sqrt_of_y)"
  },
  {
   "CONSTL": "1",
   "setA": 1,
   "line": 118,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0x01n => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 119,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :AND"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 60,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "offsetLabel": "ecrecover_v_parity",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_v_parity)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 7,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2751,
   "useElseAddr": 1,
   "elseAddr": 2748,
   "line": 122,
   "jmpAddrLabel": "ecrecover_v_y2_same_parity",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $           :XOR,JMPZ(ecrecover_v_y2_same_parity)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 125,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 126,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 127,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => C      :SUB"
  },
  {
   "inC": "1",
   "offset": 55,
   "mOp": 1,
   "mWR": 1,
   "line": 131,
   "offsetLabel": "ecrecover_y",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C           :MSTORE(ecrecover_y)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 50,
   "mOp": 1,
   "mWR": 0,
   "line": 135,
   "offsetLabel": "ecrecover_hash",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_hash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 54,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2813,
   "call": 1,
   "line": 136,
   "offsetLabel": "ecrecover_r_inv",
   "useCTX": 0,
   "jmpAddrLabel": "mulFnEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_r_inv),CALL(mulFnEc)"
  },
  {
   "freeInTag": {
    "op": "sub",
    "values": [
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "offsetLabel": "FNEC"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 72,
   "mOp": 1,
   "mWR": 1,
   "line": 140,
   "offsetLabel": "mulPointEc_k1",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        ${const.FNEC - C}  => A :MSTORE(mulPointEc_k1)"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 141,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        1 => B"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 142,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0 => D"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 143,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %FNEC       :ARITH"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 52,
   "mOp": 1,
   "mWR": 0,
   "line": 145,
   "offsetLabel": "ecrecover_s",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_s)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 54,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2813,
   "call": 1,
   "line": 146,
   "offsetLabel": "ecrecover_r_inv",
   "useCTX": 0,
   "jmpAddrLabel": "mulFnEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => B      :MLOAD(ecrecover_r_inv),CALL(mulFnEc)"
  },
  {
   "inC": "1",
   "offset": 73,
   "mOp": 1,
   "mWR": 1,
   "line": 149,
   "offsetLabel": "mulPointEc_k2",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        C           :MSTORE(mulPointEc_k2)"
  },
  {
   "CONSTL": "55066263022277343669578718895168534326250603453777594175500187360389116729240",
   "offset": 68,
   "mOp": 1,
   "mWR": 1,
   "line": 151,
   "offsetLabel": "mulPointEc_p1_x",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %ECGX       :MSTORE(mulPointEc_p1_x)"
  },
  {
   "CONSTL": "32670510020758816978083085130507043184471273380659243275938904335757337482424",
   "offset": 69,
   "mOp": 1,
   "mWR": 1,
   "line": 152,
   "offsetLabel": "mulPointEc_p1_y",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %ECGY       :MSTORE(mulPointEc_p1_y)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 51,
   "mOp": 1,
   "mWR": 0,
   "line": 154,
   "offsetLabel": "ecrecover_r",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_r)"
  },
  {
   "inA": "1",
   "offset": 70,
   "mOp": 1,
   "mWR": 1,
   "line": 155,
   "offsetLabel": "mulPointEc_p2_x",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        A           :MSTORE(mulPointEc_p2_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 55,
   "mOp": 1,
   "mWR": 0,
   "line": 157,
   "offsetLabel": "ecrecover_y",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A      :MLOAD(ecrecover_y)"
  },
  {
   "inA": "1",
   "offset": 71,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3614,
   "call": 1,
   "line": 158,
   "offsetLabel": "mulPointEc_p2_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        A           :MSTORE(mulPointEc_p2_y),CALL(mulPointEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 162,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => E         :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 163,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        E + 1 => E     :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 164,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 165,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A         :MLOAD(mulPointEc_p3_x)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 169,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        A              :HASHK(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 0,
   "line": 172,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A         :MLOAD(mulPointEc_p3_y)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 173,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        A              :HASHK(E)"
  },
  {
   "CONST": "64",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 175,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        64             :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 176,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A         :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 2778,
   "line": 177,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1 :JMPN(outOfCountersKeccak)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 178,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A         :HASHKDIGEST(E)"
  },
  {
   "CONSTL": "1461501637330902918203684832716283019655932542975",
   "setB": 1,
   "line": 181,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 182,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => A         :AND"
  },
  {
   "CONST": "0",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2789,
   "line": 183,
   "jmpAddrLabel": "ecrecover_end",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0 => B         :JMP(ecrecover_end)"
  },
  {
   "CONST": "1",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 187,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        1 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "2",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 190,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        2 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "3",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 193,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        3 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 196,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        4 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "5",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 199,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        5 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "6",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2788,
   "line": 202,
   "jmpAddrLabel": "ecrecover_error",
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        6 => B      :JMP(ecrecover_error)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 205,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 59,
   "mOp": 1,
   "mWR": 0,
   "line": 208,
   "offsetLabel": "ecrecover_RR",
   "useCTX": 0,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        $ => RR     :MLOAD(ecrecover_RR)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 209,
   "fileName": "ecrecover/ecrecover.zkasm",
   "lineStr": "        :RETURN"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 8,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_addFpEc_AC"
      },
      {
       "op": "add",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        1 => B"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_addFpEc_AC"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 14,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        ${_addFpEc_AC >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_addFpEc_AC"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 15,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        ${_addFpEc_AC} => E :ARITH"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_addFpEc_AC"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 22,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        ${_addFpEc_AC / const.FPEC} => B        ; times p"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_addFpEc_AC"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 23,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        ${_addFpEc_AC % const.FPEC} => C        ; A + C (256 bits)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 24,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 26,
   "fileName": "ecrecover/addFpEc.zkasm",
   "lineStr": "        E :ARITH,RETURN"
  },
  {
   "inC": "1",
   "setA": 1,
   "setB": 1,
   "line": 8,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        C => A,B"
  },
  {
   "CONSTL": "0",
   "setC": 1,
   "line": 9,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_sqFpEc_AA"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        0n => C"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_sqFpEc_AA"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 15,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        ${_sqFpEc_AA >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_sqFpEc_AA"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 21,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        ${_sqFpEc_AA} => E :ARITH"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_sqFpEc_AA"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 28,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        ${_sqFpEc_AA % const.FPEC} => C"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_sqFpEc_AA"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 29,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        ${_sqFpEc_AA / const.FPEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 30,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 32,
   "fileName": "ecrecover/sqFpEc.zkasm",
   "lineStr": "        E :ARITH,RETURN"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 8,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_mulFpEc_AB"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFpEc_AB"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 14,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        ${_mulFpEc_AB >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_mulFpEc_AB"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 20,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        ${_mulFpEc_AB} => E:ARITH"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFpEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 27,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        ${_mulFpEc_AB % const.FPEC} => C"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFpEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 28,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        ${_mulFpEc_AB / const.FPEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 29,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 31,
   "fileName": "ecrecover/mulFpEc.zkasm",
   "lineStr": "        E :ARITH,RETURN"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 8,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_mulFnEc_AB"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFnEc_AB"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 14,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        ${_mulFnEc_AB >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_mulFnEc_AB"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 20,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        ${_mulFnEc_AB} => E :ARITH"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFnEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "offsetLabel": "FNEC"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 27,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        ${_mulFnEc_AB % const.FNEC} => C"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulFnEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "offsetLabel": "FNEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 28,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        ${_mulFnEc_AB / const.FNEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
   "setA": 1,
   "line": 29,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        %FNEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 31,
   "fileName": "ecrecover/mulFnEc.zkasm",
   "lineStr": "        E :ARITH,RETURN"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setB": 1,
   "line": 11,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        %FPEC => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2823,
   "useElseAddr": 1,
   "elseAddr": 2822,
   "line": 12,
   "jmpAddrLabel": "invFpEc_normalized",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        $       :LT,JMPC(invFpEc_normalized)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 13,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        $ => A  :SUB"
  },
  {
   "CONSTL": "0",
   "setC": 1,
   "line": 16,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        0n => C"
  },
  {
   "freeInTag": {
    "op": "setVar",
    "values": [
     {
      "op": "declareVar",
      "varName": "_invFpEc_A"
     },
     {
      "op": "functionCall",
      "funcName": "inverseFpEc",
      "params": [
       {
        "op": "getReg",
        "regName": "A"
       }
      ]
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 62,
   "mOp": 1,
   "mWR": 1,
   "line": 19,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_invFpEc_AB"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getVar",
         "varName": "_invFpEc_A"
        }
       ]
      }
     ]
    }
   ],
   "offsetLabel": "invFpEc_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        ${var _invFpEc_A = inverseFpEc(A)} => B :MSTORE(invFpEc_tmp);"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_invFpEc_AB"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 25,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        ${_invFpEc_AB >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_invFpEc_AB"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 26,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        ${_invFpEc_AB} => E :ARITH"
  },
  {
   "CONSTL": "1",
   "setC": 1,
   "line": 33,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        1n => C"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_invFpEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 34,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        ${_invFpEc_AB / const.FPEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 35,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 37,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        E :ARITH"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 62,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 38,
   "offsetLabel": "invFpEc_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/invFpEc.zkasm",
   "lineStr": "        $ => B   :MLOAD(invFpEc_tmp),RETURN"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
   "setB": 1,
   "line": 11,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        %FNEC => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2835,
   "useElseAddr": 1,
   "elseAddr": 2834,
   "line": 12,
   "jmpAddrLabel": "invFnEc_normalized",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        $       :LT,JMPC(invFnEc_normalized)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 13,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        $ => A  :SUB"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 16,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": "setVar",
    "values": [
     {
      "op": "declareVar",
      "varName": "_invFnEc_A"
     },
     {
      "op": "functionCall",
      "funcName": "inverseFnEc",
      "params": [
       {
        "op": "getReg",
        "regName": "A"
       }
      ]
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 63,
   "mOp": 1,
   "mWR": 1,
   "line": 19,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_invFnEc_AB"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "offsetLabel": "invFnEc_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        ${var _invFnEc_A = inverseFnEc(A)} => B :MSTORE(invFnEc_tmp)"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_invFnEc_AB"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 24,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        ${_invFnEc_AB >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_invFnEc_AB"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 25,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        ${_invFnEc_AB} => E :ARITH"
  },
  {
   "CONST": "1",
   "setC": 1,
   "line": 32,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        1 => C"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_invFnEc_AB"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "offsetLabel": "FNEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 33,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        ${_invFnEc_AB / const.FNEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
   "setA": 1,
   "line": 34,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        %FNEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 36,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        E :ARITH"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 63,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 37,
   "offsetLabel": "invFnEc_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/invFnEc.zkasm",
   "lineStr": "        $ => B   :MLOAD(invFnEc_tmp), RETURN"
  },
  {
   "inC": "1",
   "offset": 64,
   "mOp": 1,
   "mWR": 1,
   "line": 12,
   "offsetLabel": "sqrtFpC_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        C               :MSTORE(sqrtFpC_tmp)"
  },
  {
   "freeInTag": {
    "op": "setVar",
    "values": [
     {
      "op": "declareVar",
      "varName": "_sqrtFpEc_sqrt"
     },
     {
      "op": "functionCall",
      "funcName": "sqrtFpEc",
      "params": [
       {
        "op": "getReg",
        "regName": "C"
       }
      ]
     }
    ]
   },
   "inFREE": "1",
   "setA": 1,
   "setC": 1,
   "offset": 65,
   "mOp": 1,
   "mWR": 1,
   "line": 17,
   "offsetLabel": "sqrtFpC_res",
   "useCTX": 0,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        ${var _sqrtFpEc_sqrt = sqrtFpEc(C) } => A,C   :MSTORE(sqrtFpC_res)"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "setB": 1,
   "line": 18,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        %FPEC_NON_SQRT => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2857,
   "useElseAddr": 1,
   "elseAddr": 2848,
   "line": 19,
   "jmpAddrLabel": "sqrtFpEc_End",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        $                                             :EQ,JMPC(sqrtFpEc_End)"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 21,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        A => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 22,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_sqrtFpEc_sq"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqrtFpEc_sqrt"
        },
        {
         "op": "getVar",
         "varName": "_sqrtFpEc_sqrt"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_sqrtFpEc_sq"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 26,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        ${_sqrtFpEc_sq >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_sqrtFpEc_sq"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 27,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        ${_sqrtFpEc_sq} => E :ARITH"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 64,
   "mOp": 1,
   "mWR": 0,
   "line": 34,
   "offsetLabel": "sqrtFpC_tmp",
   "useCTX": 0,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        $ => C          :MLOAD(sqrtFpC_tmp)"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_sqrtFpEc_sq"
     },
     {
      "op": "number",
      "module": "const",
      "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "offsetLabel": "FPEC"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 35,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        ${_sqrtFpEc_sq / const.FPEC} => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "setA": 1,
   "line": 36,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        %FPEC => A"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 37,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        E :ARITH"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 65,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 39,
   "offsetLabel": "sqrtFpC_res",
   "useCTX": 0,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        $ => C          :MLOAD(sqrtFpC_res),RETURN"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 42,
   "fileName": "ecrecover/sqrtFpEc.zkasm",
   "lineStr": "        :RETURN"
  },
  {
   "inRR": "1",
   "offset": 67,
   "mOp": 1,
   "mWR": 1,
   "line": 19,
   "offsetLabel": "checkSqrtFpEc_RR",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        RR          :MSTORE(checkSqrtFpEc_RR)"
  },
  {
   "inC": "1",
   "offset": 66,
   "mOp": 1,
   "mWR": 1,
   "line": 20,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C           :MSTORE(checkSqrtFpEc_base)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 24,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 25,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 26,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 30,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 31,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 32,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 36,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 37,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 38,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 42,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 43,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 44,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 48,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 49,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 50,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 54,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 55,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 56,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 60,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 61,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 62,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 66,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 67,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 68,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 72,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 74,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 78,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 79,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 80,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 84,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 85,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 86,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 90,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 91,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 92,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 96,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 97,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 98,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 102,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 103,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 104,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 108,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 109,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 110,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 114,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 115,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 116,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 120,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 121,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 122,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 126,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 127,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 128,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 132,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 133,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 134,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 138,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 139,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 140,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 144,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 145,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 146,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 150,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 151,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 152,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 156,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 157,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 158,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 162,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 163,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 164,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 168,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 169,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 170,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 174,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 175,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 176,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 180,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 181,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 182,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 186,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 187,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 188,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 192,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 193,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 194,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 198,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 199,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 200,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 204,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 205,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 206,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 210,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 211,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 212,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 216,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 217,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 218,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 222,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 223,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 224,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 228,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 229,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 230,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 234,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 235,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 236,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 240,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 241,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 242,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 246,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 247,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 248,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 252,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 253,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 254,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 258,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 259,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 260,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 264,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 265,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 266,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 270,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 271,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 272,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 276,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 277,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 278,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 282,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 283,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 284,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 288,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 289,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 290,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 294,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 295,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 296,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 300,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 301,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 302,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 306,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 307,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 308,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 312,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 313,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 314,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 318,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 319,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 320,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 324,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 325,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 326,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 330,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 331,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 332,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 336,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 337,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 338,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 342,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 343,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 344,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 348,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 349,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 350,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 354,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 355,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 356,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 360,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 361,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 362,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 366,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 367,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 368,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 372,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 373,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 374,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 378,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 379,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 380,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 384,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 385,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 386,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 390,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 391,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 392,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 396,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 397,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 398,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 402,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 403,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 404,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 408,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 409,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 410,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 414,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 415,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 416,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 420,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 421,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 422,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 426,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 427,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 428,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 432,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 433,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 434,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 438,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 439,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 440,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 444,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 445,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 446,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 450,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 451,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 452,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 456,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 457,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 458,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 462,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 463,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 464,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 468,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 469,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 470,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 474,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 475,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 476,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 480,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 481,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 482,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 486,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 487,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 488,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 492,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 493,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 494,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 498,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 499,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 500,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 504,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 505,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 506,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 510,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 511,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 512,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 516,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 517,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 518,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 522,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 523,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 524,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 528,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 529,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 530,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 534,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 535,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 536,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 540,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 541,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 542,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 546,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 547,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 548,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 552,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 553,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 554,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 558,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 559,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 560,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 564,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 565,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 566,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 570,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 571,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 572,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 576,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 577,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 578,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 582,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 583,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 584,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 588,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 589,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 590,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 594,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 595,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 596,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 600,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 601,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 602,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 606,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 607,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 608,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 612,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 613,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 614,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 618,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 619,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 620,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 624,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 625,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 626,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 630,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 631,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 632,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 636,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 637,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 638,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 642,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 643,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 644,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 648,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 649,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 650,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 654,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 655,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 656,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 660,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 661,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 662,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 666,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 667,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 668,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 672,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 673,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 674,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 678,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 679,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 680,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 684,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 685,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 686,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 690,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 691,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 692,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 696,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 697,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 698,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 702,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 703,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 704,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 708,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 709,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 710,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 714,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 715,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 716,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 720,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 721,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 722,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 726,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 727,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 728,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 732,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 733,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 734,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 738,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 739,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 740,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 744,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 745,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 746,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 750,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 751,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 752,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 756,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 757,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 758,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 762,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 763,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 764,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 768,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 769,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 770,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 774,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 775,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 776,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 780,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 781,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 782,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 786,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 787,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 788,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 792,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 793,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 794,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 798,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 799,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 800,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 804,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 805,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 806,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 810,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 811,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 812,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 816,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 817,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 818,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 822,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 823,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 824,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 828,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 829,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 830,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 834,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 835,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 836,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 840,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 841,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 842,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 846,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 847,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 848,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 852,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 853,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 854,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 858,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 859,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 860,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 864,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 865,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 866,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 870,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 871,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 872,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 876,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 877,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 878,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 882,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 883,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 884,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 888,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 889,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 890,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 894,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 895,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 896,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 900,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 901,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 902,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 906,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 907,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 908,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 912,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 913,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 914,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 918,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 919,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 920,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 924,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 925,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 926,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 930,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 931,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 932,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 936,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 937,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 938,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 942,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 943,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 944,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 948,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 949,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 950,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 954,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 955,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 956,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 960,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 961,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 962,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 966,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 967,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 968,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 972,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 973,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 974,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 978,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 979,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 980,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 984,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 985,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 986,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 990,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 991,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 992,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 996,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 997,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 998,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1002,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1003,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1004,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1008,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1009,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1010,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1014,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1015,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1016,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1020,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1021,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1022,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1026,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1027,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1028,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1032,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1033,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1034,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1038,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1039,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1040,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1044,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1045,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1046,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1050,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1051,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1052,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1056,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1057,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1058,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1062,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1063,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1064,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1068,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1069,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1070,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1074,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1075,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1076,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1080,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1081,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1082,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1086,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1087,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1088,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1092,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1093,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1094,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1098,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1099,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1100,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1104,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1105,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1106,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1110,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1111,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1112,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1116,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1117,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1118,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1122,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1123,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1124,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1128,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1129,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1130,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1134,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1135,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1136,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1140,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1141,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1142,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1146,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1147,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1148,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1152,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1153,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1154,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1158,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1159,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1160,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1164,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1165,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1166,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1170,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1171,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1172,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1176,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1177,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1178,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1182,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1183,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1184,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1188,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1189,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1190,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1194,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1195,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1196,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1200,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1201,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1202,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1206,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1207,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1208,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1212,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1213,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1214,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1218,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1219,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1220,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1224,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1225,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1226,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1230,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1231,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1232,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1236,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1237,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1238,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1242,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1243,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1244,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1248,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1249,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1250,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1254,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1255,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1256,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1260,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1261,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1262,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1266,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1267,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1268,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1272,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1273,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1274,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1278,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1279,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1280,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1284,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1285,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1286,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1290,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1291,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1292,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1296,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1297,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1298,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1302,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1303,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1304,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1308,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1309,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1310,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1314,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1315,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1316,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1320,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1321,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1322,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1326,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1327,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1328,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1332,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1333,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1334,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1338,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1339,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1340,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1344,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1345,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1346,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1350,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1351,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1352,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1358,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1364,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1365,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1366,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1370,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1371,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1372,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1376,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1377,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1378,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1382,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1383,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1384,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1388,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1389,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1390,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1394,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1395,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1396,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1400,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1401,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1402,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1406,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1407,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1408,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1412,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1413,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1414,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1418,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1419,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1420,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1424,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1425,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1426,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1430,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1431,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1432,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1436,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1437,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1438,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1442,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1443,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1444,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1448,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1449,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1450,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1454,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1455,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1456,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1460,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1461,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1462,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1466,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1467,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1468,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1472,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1473,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1474,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1478,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1479,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1480,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1484,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1485,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1486,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1490,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1491,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1492,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1497,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1501,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1505,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1509,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1514,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1515,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1516,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1521,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1525,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1526,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1527,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1531,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1532,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1533,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2798,
   "call": 1,
   "line": 1537,
   "jmpAddrLabel": "sqFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "                :CALL(sqFpEc)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 66,
   "mOp": 1,
   "mWR": 0,
   "line": 1538,
   "offsetLabel": "checkSqrtFpEc_base",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
  },
  {
   "inC": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2806,
   "call": 1,
   "line": 1539,
   "jmpAddrLabel": "mulFpEc",
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B\t:CALL(mulFpEc)"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 1542,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        C => B"
  },
  {
   "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
   "setA": 1,
   "line": 1543,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        %FPEC_MINUS_ONE => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 67,
   "mOp": 1,
   "mWR": 0,
   "line": 1544,
   "offsetLabel": "checkSqrtFpEc_RR",
   "useCTX": 0,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => RR     :MLOAD(checkSqrtFpEc_RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1545,
   "fileName": "ecrecover/checkSqrtFpEc.zkasm",
   "lineStr": "        $ => A      :EQ,RETURN"
  },
  {
   "inRR": "1",
   "offset": 76,
   "mOp": 1,
   "mWR": 1,
   "line": 22,
   "offsetLabel": "mulPointEc_RR",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        RR      :MSTORE(mulPointEc_RR)"
  },
  {
   "inHASHPOS": "1",
   "offset": 79,
   "mOp": 1,
   "mWR": 1,
   "line": 23,
   "offsetLabel": "mulPointEc_HASHPOS",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        HASHPOS :MSTORE(mulPointEc_HASHPOS)"
  },
  {
   "CONST": "256",
   "setRCX": 1,
   "line": 25,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        256 => RCX"
  },
  {
   "CONSTL": "0",
   "setHASHPOS": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 28,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        0n => HASHPOS :MSTORE(mulPointEc_p3_x)"
  },
  {
   "CONSTL": "0",
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "line": 30,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        0n      :MSTORE(mulPointEc_p3_y)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 68,
   "mOp": 1,
   "mWR": 0,
   "line": 32,
   "offsetLabel": "mulPointEc_p1_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A  :MLOAD(mulPointEc_p1_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 69,
   "mOp": 1,
   "mWR": 0,
   "line": 33,
   "offsetLabel": "mulPointEc_p1_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B  :MLOAD(mulPointEc_p1_y)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 70,
   "mOp": 1,
   "mWR": 0,
   "line": 34,
   "offsetLabel": "mulPointEc_p2_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => C  :MLOAD(mulPointEc_p2_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 71,
   "mOp": 1,
   "mWR": 0,
   "line": 35,
   "offsetLabel": "mulPointEc_p2_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => D  :MLOAD(mulPointEc_p2_y)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "xAddPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 77,
   "mOp": 1,
   "mWR": 1,
   "line": 36,
   "offsetLabel": "mulPointEc_p12_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${xAddPointEc(A,B,C,D)} => E  :MSTORE(mulPointEc_p12_x)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "yAddPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "arithEq0": 0,
   "arithEq1": 1,
   "arithEq2": 0,
   "offset": 78,
   "mOp": 1,
   "mWR": 1,
   "line": 37,
   "offsetLabel": "mulPointEc_p12_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${yAddPointEc(A,B,C,D)} :ARITH_ECADD_DIFFERENT, MSTORE(mulPointEc_p12_y)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "setB": 1,
   "offset": 72,
   "mOp": 1,
   "mWR": 0,
   "line": 60,
   "offsetLabel": "mulPointEc_k1",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 0,
   "offset": 72,
   "mOp": 1,
   "mWR": 1,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3631,
   "useElseAddr": 1,
   "elseAddr": 3627,
   "line": 62,
   "offsetLabel": "mulPointEc_k1",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_k11",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k1),JMPC(mulPointEc_k11)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "setB": 1,
   "offset": 73,
   "mOp": 1,
   "mWR": 0,
   "line": 67,
   "offsetLabel": "mulPointEc_k2",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 0,
   "offset": 73,
   "mOp": 1,
   "mWR": 1,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3637,
   "useElseAddr": 1,
   "elseAddr": 3629,
   "line": 69,
   "offsetLabel": "mulPointEc_k2",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_k10_k21",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k2),JMPC(mulPointEc_k10_k21)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3652,
   "line": 74,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_square",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y), JMP(mulPointEc_square)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "setB": 1,
   "offset": 73,
   "mOp": 1,
   "mWR": 0,
   "line": 78,
   "offsetLabel": "mulPointEc_k2",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 0,
   "offset": 73,
   "mOp": 1,
   "mWR": 1,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3635,
   "useElseAddr": 1,
   "elseAddr": 3633,
   "line": 79,
   "offsetLabel": "mulPointEc_k2",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_k11_k21",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k2),JMPC(mulPointEc_k11_k21)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 68,
   "mOp": 1,
   "mWR": 0,
   "line": 83,
   "offsetLabel": "mulPointEc_p1_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => C  :MLOAD(mulPointEc_p1_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 69,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3639,
   "line": 84,
   "offsetLabel": "mulPointEc_p1_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_p2_loaded",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => D  :MLOAD(mulPointEc_p1_y), JMP(mulPointEc_p2_loaded)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 77,
   "mOp": 1,
   "mWR": 0,
   "line": 88,
   "offsetLabel": "mulPointEc_p12_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => C  :MLOAD(mulPointEc_p12_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 78,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3639,
   "line": 89,
   "offsetLabel": "mulPointEc_p12_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_p2_loaded",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => D  :MLOAD(mulPointEc_p12_y), JMP(mulPointEc_p2_loaded)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 70,
   "mOp": 1,
   "mWR": 0,
   "line": 93,
   "offsetLabel": "mulPointEc_p2_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => C  :MLOAD(mulPointEc_p2_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 71,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3639,
   "line": 94,
   "offsetLabel": "mulPointEc_p2_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_p2_loaded",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => D  :MLOAD(mulPointEc_p2_y), JMP(mulPointEc_p2_loaded)"
  },
  {
   "inHASHPOS": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3649,
   "useElseAddr": 1,
   "elseAddr": 3640,
   "line": 100,
   "jmpAddrLabel": "mulPointEc_p3_assignment",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        HASHPOS   :JMPZ(mulPointEc_p3_assignment)"
  },
  {
   "CONST": "1",
   "setHASHPOS": 1,
   "line": 101,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        1 => HASHPOS"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 103,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        C => A  ; point_x"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 0,
   "line": 104,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_x)"
  },
  {
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3658,
   "useElseAddr": 1,
   "elseAddr": 3644,
   "line": 105,
   "jmpAddrLabel": "mulPointEc_x_equals_before_add",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "                :EQ,JMPC(mulPointEc_x_equals_before_add)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 0,
   "line": 108,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 0,
   "line": 109,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "xAddPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 111,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${xAddPointEc(A,B,C,D)} => E  :MSTORE(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "yAddPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "C"
     },
     {
      "op": "getReg",
      "regName": "D"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "arithEq0": 0,
   "arithEq1": 1,
   "arithEq2": 0,
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "line": 112,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${yAddPointEc(A,B,C,D)} => B :ARITH_ECADD_DIFFERENT, MSTORE(mulPointEc_p3_y)"
  },
  {
   "inE": "1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3652,
   "line": 116,
   "jmpAddrLabel": "mulPointEc_square",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        E => A  :JMP(mulPointEc_square)"
  },
  {
   "CONST": "1",
   "setHASHPOS": 1,
   "line": 120,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        1 => HASHPOS"
  },
  {
   "inC": "1",
   "setA": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 121,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        C => A   :MSTORE(mulPointEc_p3_x)"
  },
  {
   "inD": "1",
   "setB": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "line": 122,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        D => B   :MSTORE(mulPointEc_p3_y)"
  },
  {
   "inRCX": "1",
   "CONST": "-1",
   "setRCX": 1,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3667,
   "useElseAddr": 1,
   "elseAddr": 3653,
   "line": 126,
   "jmpAddrLabel": "mulPointEc_end_loop",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        RCX - 1 => RCX    :JMPZ(mulPointEc_end_loop)"
  },
  {
   "inHASHPOS": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3625,
   "useElseAddr": 1,
   "elseAddr": 3654,
   "line": 127,
   "jmpAddrLabel": "mulPointEc_loop",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        HASHPOS :JMPZ(mulPointEc_loop)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 0,
   "line": 129,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 0,
   "line": 130,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "xDblPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 132,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${xDblPointEc(A,B)} => E  :MSTORE(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "yDblPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "arithEq0": 0,
   "arithEq1": 0,
   "arithEq2": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3625,
   "line": 133,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_loop",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${yDblPointEc(A,B)} :ARITH_ECADD_SAME, MSTORE(mulPointEc_p3_y), JMP(mulPointEc_loop)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 136,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        D => A ; D contains y of point to add (depends of bits k1,k2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 0,
   "line": 137,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => B :MLOAD(mulPointEc_p3_y)"
  },
  {
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3663,
   "useElseAddr": 1,
   "elseAddr": 3661,
   "line": 138,
   "jmpAddrLabel": "mulPointEc_same_point_to_add",
   "elseAddrLabel": "next",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "               :EQ,JMPC(mulPointEc_same_point_to_add)"
  },
  {
   "CONSTL": "0",
   "setHASHPOS": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 143,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        0n => HASHPOS   :MSTORE(mulPointEc_p3_x)"
  },
  {
   "CONSTL": "0",
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3652,
   "line": 144,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_square",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        0n              :MSTORE(mulPointEc_p3_y), JMP(mulPointEc_square)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 147,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        C => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 148,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        D => B"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "xDblPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 74,
   "mOp": 1,
   "mWR": 1,
   "line": 150,
   "offsetLabel": "mulPointEc_p3_x",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${xDblPointEc(A,B)} => E  :MSTORE(mulPointEc_p3_x)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "yDblPointEc",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "arithEq0": 0,
   "arithEq1": 0,
   "arithEq2": 1,
   "offset": 75,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3648,
   "line": 151,
   "offsetLabel": "mulPointEc_p3_y",
   "useCTX": 0,
   "jmpAddrLabel": "mulPointEc_after_add",
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        ${yDblPointEc(A,B)} => B  :ARITH_ECADD_SAME, MSTORE(mulPointEc_p3_y), JMP(mulPointEc_after_add)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 76,
   "mOp": 1,
   "mWR": 0,
   "line": 155,
   "offsetLabel": "mulPointEc_RR",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => RR         :MLOAD(mulPointEc_RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 79,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 156,
   "offsetLabel": "mulPointEc_HASHPOS",
   "useCTX": 0,
   "fileName": "ecrecover/mulPointEc.zkasm",
   "lineStr": "        $ => HASHPOS    :MLOAD(mulPointEc_HASHPOS), RETURN"
  },
  {
   "CONST": "0",
   "offset": 35,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 8,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    0               :MSTORE(touchedSR), RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 35,
   "mOp": 1,
   "mWR": 0,
   "line": 12,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => A          :MLOAD(touchedSR)"
  },
  {
   "inA": "1",
   "offset": 40,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 13,
   "offsetLabel": "initTouchedSR",
   "useCTX": 1,
   "fileName": "touched.zkasm",
   "lineStr": "    A               :MSTORE(initTouchedSR), RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 40,
   "mOp": 1,
   "mWR": 0,
   "line": 17,
   "offsetLabel": "initTouchedSR",
   "useCTX": 1,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => A               :MLOAD(initTouchedSR)"
  },
  {
   "inA": "1",
   "offset": 35,
   "mOp": 1,
   "mWR": 1,
   "line": 18,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    A                    :MSTORE(touchedSR)"
  },
  {
   "inB": "1",
   "offset": 80,
   "mOp": 1,
   "mWR": 1,
   "line": 25,
   "offsetLabel": "tmpB",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    B               :MSTORE(tmpB)"
  },
  {
   "inC": "1",
   "offset": 81,
   "mOp": 1,
   "mWR": 1,
   "line": 26,
   "offsetLabel": "tmpC",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    C               :MSTORE(tmpC)"
  },
  {
   "inE": "1",
   "offset": 83,
   "mOp": 1,
   "mWR": 1,
   "line": 27,
   "offsetLabel": "tmpE",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    E               :MSTORE(tmpE)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 30,
   "fileName": "touched.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3681,
   "useElseAddr": 1,
   "elseAddr": 3679,
   "line": 31,
   "jmpAddrLabel": "checkWarmed",
   "elseAddrLabel": "next",
   "fileName": "touched.zkasm",
   "lineStr": "    $                           :EQ, JMPC(checkWarmed)"
  },
  {
   "CONST": "10",
   "setB": 1,
   "line": 33,
   "fileName": "touched.zkasm",
   "lineStr": "    10 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3694,
   "useElseAddr": 1,
   "elseAddr": 3681,
   "line": 34,
   "jmpAddrLabel": "finishColdPrecompiled",
   "elseAddrLabel": "next",
   "fileName": "touched.zkasm",
   "lineStr": "    $                           :LT, JMPC(finishColdPrecompiled)"
  },
  {
   "inSR": "1",
   "offset": 84,
   "mOp": 1,
   "mWR": 1,
   "line": 38,
   "offsetLabel": "tmpStateRoot",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    SR              :MSTORE(tmpStateRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 35,
   "mOp": 1,
   "mWR": 0,
   "line": 39,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :MLOAD(touchedSR)"
  },
  {
   "CONST": "5",
   "setB": 1,
   "line": 43,
   "fileName": "touched.zkasm",
   "lineStr": "    %SMT_KEY_TOUCHED_ADDR => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 44,
   "fileName": "touched.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3687,
   "useElseAddr": 1,
   "elseAddr": 3686,
   "line": 45,
   "jmpAddrLabel": "markWarmAddress",
   "elseAddrLabel": "next",
   "fileName": "touched.zkasm",
   "lineStr": "    $ => D          :SLOAD, JMPZ(markWarmAddress)"
  },
  {
   "CONST": "0",
   "setD": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3689,
   "line": 48,
   "jmpAddrLabel": "finishColdAddress",
   "fileName": "touched.zkasm",
   "lineStr": "    0 => D          :JMP(finishColdAddress)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 52,
   "fileName": "touched.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 53,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :SSTORE"
  },
  {
   "inSR": "1",
   "offset": 35,
   "mOp": 1,
   "mWR": 1,
   "line": 58,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    SR              :MSTORE(touchedSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 84,
   "mOp": 1,
   "mWR": 0,
   "line": 59,
   "offsetLabel": "tmpStateRoot",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :MLOAD(tmpStateRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 80,
   "mOp": 1,
   "mWR": 0,
   "line": 62,
   "offsetLabel": "tmpB",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 81,
   "mOp": 1,
   "mWR": 0,
   "line": 63,
   "offsetLabel": "tmpC",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 83,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 64,
   "offsetLabel": "tmpE",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 67,
   "fileName": "touched.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 80,
   "mOp": 1,
   "mWR": 0,
   "line": 69,
   "offsetLabel": "tmpB",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 81,
   "mOp": 1,
   "mWR": 0,
   "line": 70,
   "offsetLabel": "tmpC",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 83,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 71,
   "offsetLabel": "tmpE",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
  },
  {
   "inB": "1",
   "offset": 80,
   "mOp": 1,
   "mWR": 1,
   "line": 79,
   "offsetLabel": "tmpB",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    B               :MSTORE(tmpB)"
  },
  {
   "inD": "1",
   "offset": 82,
   "mOp": 1,
   "mWR": 1,
   "line": 80,
   "offsetLabel": "tmpD",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    D               :MSTORE(tmpD)"
  },
  {
   "inE": "1",
   "offset": 83,
   "mOp": 1,
   "mWR": 1,
   "line": 81,
   "offsetLabel": "tmpE",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    E               :MSTORE(tmpE)"
  },
  {
   "inSR": "1",
   "offset": 84,
   "mOp": 1,
   "mWR": 1,
   "line": 84,
   "offsetLabel": "tmpStateRoot",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    SR              :MSTORE(tmpStateRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 35,
   "mOp": 1,
   "mWR": 0,
   "line": 85,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :MLOAD(touchedSR)"
  },
  {
   "CONST": "6",
   "setB": 1,
   "line": 89,
   "fileName": "touched.zkasm",
   "lineStr": "    %SMT_KEY_TOUCHED_SLOTS => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "sRD": 1,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3706,
   "useElseAddr": 1,
   "elseAddr": 3705,
   "line": 90,
   "jmpAddrLabel": "markWarmSlot",
   "elseAddrLabel": "next",
   "fileName": "touched.zkasm",
   "lineStr": "    $ => D          :SLOAD, JMPZ(markWarmSlot)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3709,
   "line": 93,
   "jmpAddrLabel": "finishColdSlot",
   "fileName": "touched.zkasm",
   "lineStr": "    0 => A          :JMP(finishColdSlot)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 97,
   "fileName": "touched.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 98,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :SSTORE"
  },
  {
   "CONST": "1",
   "setA": 1,
   "line": 100,
   "fileName": "touched.zkasm",
   "lineStr": "    1 => A"
  },
  {
   "inSR": "1",
   "offset": 35,
   "mOp": 1,
   "mWR": 1,
   "line": 104,
   "offsetLabel": "touchedSR",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    SR              :MSTORE(touchedSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 84,
   "mOp": 1,
   "mWR": 0,
   "line": 105,
   "offsetLabel": "tmpStateRoot",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => SR         :MLOAD(tmpStateRoot)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 80,
   "mOp": 1,
   "mWR": 0,
   "line": 108,
   "offsetLabel": "tmpB",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 82,
   "mOp": 1,
   "mWR": 0,
   "line": 109,
   "offsetLabel": "tmpD",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpD)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 83,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 110,
   "offsetLabel": "tmpE",
   "useCTX": 0,
   "fileName": "touched.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
  },
  {
   "CONSTL": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 5,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1n => B                                                                :RETURN ;2**0"
  },
  {
   "CONSTL": "2",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 6,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2n => B                                                                :RETURN ;2**1"
  },
  {
   "CONSTL": "4",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 7,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4n => B                                                                :RETURN ;2**2"
  },
  {
   "CONSTL": "8",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 8,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8n => B                                                                :RETURN ;2**3"
  },
  {
   "CONSTL": "16",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 9,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10n => B                                                               :RETURN ;2**4"
  },
  {
   "CONSTL": "32",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 10,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20n => B                                                               :RETURN ;2**5"
  },
  {
   "CONSTL": "64",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 11,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40n => B                                                               :RETURN ;2**6"
  },
  {
   "CONSTL": "128",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 12,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80n => B                                                               :RETURN ;2**7"
  },
  {
   "CONSTL": "256",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 13,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100n => B                                                              :RETURN ;2**8"
  },
  {
   "CONSTL": "512",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 14,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200n => B                                                              :RETURN ;2**9"
  },
  {
   "CONSTL": "1024",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 15,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400n => B                                                              :RETURN ;2**10"
  },
  {
   "CONSTL": "2048",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 16,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800n => B                                                              :RETURN ;2**11"
  },
  {
   "CONSTL": "4096",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 17,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000n => B                                                             :RETURN ;2**12"
  },
  {
   "CONSTL": "8192",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 18,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000n => B                                                             :RETURN ;2**13"
  },
  {
   "CONSTL": "16384",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 19,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000n => B                                                             :RETURN ;2**14"
  },
  {
   "CONSTL": "32768",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 20,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000n => B                                                             :RETURN ;2**15"
  },
  {
   "CONSTL": "65536",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 21,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000n => B                                                            :RETURN ;2**16"
  },
  {
   "CONSTL": "131072",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 22,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000n => B                                                            :RETURN ;2**17"
  },
  {
   "CONSTL": "262144",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 23,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000n => B                                                            :RETURN ;2**18"
  },
  {
   "CONSTL": "524288",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 24,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000n => B                                                            :RETURN ;2**19"
  },
  {
   "CONSTL": "1048576",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 25,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000n => B                                                           :RETURN ;2**20"
  },
  {
   "CONSTL": "2097152",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 26,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000n => B                                                           :RETURN ;2**21"
  },
  {
   "CONSTL": "4194304",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 27,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000n => B                                                           :RETURN ;2**22"
  },
  {
   "CONSTL": "8388608",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 28,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000n => B                                                           :RETURN ;2**23"
  },
  {
   "CONSTL": "16777216",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 29,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000n => B                                                          :RETURN ;2**24"
  },
  {
   "CONSTL": "33554432",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 30,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000n => B                                                          :RETURN ;2**25"
  },
  {
   "CONSTL": "67108864",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 31,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000n => B                                                          :RETURN ;2**26"
  },
  {
   "CONSTL": "134217728",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 32,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000n => B                                                          :RETURN ;2**27"
  },
  {
   "CONSTL": "268435456",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 33,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000n => B                                                         :RETURN ;2**28"
  },
  {
   "CONSTL": "536870912",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 34,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000n => B                                                         :RETURN ;2**29"
  },
  {
   "CONSTL": "1073741824",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 35,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000n => B                                                         :RETURN ;2**30"
  },
  {
   "CONSTL": "2147483648",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 36,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000n => B                                                         :RETURN ;2**31"
  },
  {
   "CONSTL": "4294967296",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 37,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000n => B                                                        :RETURN ;2**32"
  },
  {
   "CONSTL": "8589934592",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 38,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000n => B                                                        :RETURN ;2**33"
  },
  {
   "CONSTL": "17179869184",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 39,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000n => B                                                        :RETURN ;2**34"
  },
  {
   "CONSTL": "34359738368",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 40,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000n => B                                                        :RETURN ;2**35"
  },
  {
   "CONSTL": "68719476736",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 41,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000n => B                                                       :RETURN ;2**36"
  },
  {
   "CONSTL": "137438953472",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 42,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000n => B                                                       :RETURN ;2**37"
  },
  {
   "CONSTL": "274877906944",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 43,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000n => B                                                       :RETURN ;2**38"
  },
  {
   "CONSTL": "549755813888",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 44,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000n => B                                                       :RETURN ;2**39"
  },
  {
   "CONSTL": "1099511627776",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 45,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000n => B                                                      :RETURN ;2**40"
  },
  {
   "CONSTL": "2199023255552",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 46,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000n => B                                                      :RETURN ;2**41"
  },
  {
   "CONSTL": "4398046511104",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 47,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000n => B                                                      :RETURN ;2**42"
  },
  {
   "CONSTL": "8796093022208",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 48,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000n => B                                                      :RETURN ;2**43"
  },
  {
   "CONSTL": "17592186044416",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 49,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000n => B                                                     :RETURN ;2**44"
  },
  {
   "CONSTL": "35184372088832",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 50,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000n => B                                                     :RETURN ;2**45"
  },
  {
   "CONSTL": "70368744177664",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 51,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000n => B                                                     :RETURN ;2**46"
  },
  {
   "CONSTL": "140737488355328",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 52,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000n => B                                                     :RETURN ;2**47"
  },
  {
   "CONSTL": "281474976710656",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 53,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000n => B                                                    :RETURN ;2**48"
  },
  {
   "CONSTL": "562949953421312",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 54,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000n => B                                                    :RETURN ;2**49"
  },
  {
   "CONSTL": "1125899906842624",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 55,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000n => B                                                    :RETURN ;2**50"
  },
  {
   "CONSTL": "2251799813685248",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 56,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000n => B                                                    :RETURN ;2**51"
  },
  {
   "CONSTL": "4503599627370496",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 57,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000n => B                                                   :RETURN ;2**52"
  },
  {
   "CONSTL": "9007199254740992",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 58,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000n => B                                                   :RETURN ;2**53"
  },
  {
   "CONSTL": "18014398509481984",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 59,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000n => B                                                   :RETURN ;2**54"
  },
  {
   "CONSTL": "36028797018963968",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 60,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000n => B                                                   :RETURN ;2**55"
  },
  {
   "CONSTL": "72057594037927936",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 61,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000n => B                                                  :RETURN ;2**56"
  },
  {
   "CONSTL": "144115188075855872",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 62,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000n => B                                                  :RETURN ;2**57"
  },
  {
   "CONSTL": "288230376151711744",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 63,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000n => B                                                  :RETURN ;2**58"
  },
  {
   "CONSTL": "576460752303423488",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 64,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000n => B                                                  :RETURN ;2**59"
  },
  {
   "CONSTL": "1152921504606846976",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 65,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000n => B                                                 :RETURN ;2**60"
  },
  {
   "CONSTL": "2305843009213693952",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 66,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000n => B                                                 :RETURN ;2**61"
  },
  {
   "CONSTL": "4611686018427387904",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 67,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000n => B                                                 :RETURN ;2**62"
  },
  {
   "CONSTL": "9223372036854775808",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 68,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000n => B                                                 :RETURN ;2**63"
  },
  {
   "CONSTL": "18446744073709551616",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 69,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000n => B                                                :RETURN ;2**64"
  },
  {
   "CONSTL": "36893488147419103232",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 70,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000n => B                                                :RETURN ;2**65"
  },
  {
   "CONSTL": "73786976294838206464",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 71,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000n => B                                                :RETURN ;2**66"
  },
  {
   "CONSTL": "147573952589676412928",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 72,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000n => B                                                :RETURN ;2**67"
  },
  {
   "CONSTL": "295147905179352825856",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 73,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000n => B                                               :RETURN ;2**68"
  },
  {
   "CONSTL": "590295810358705651712",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 74,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000n => B                                               :RETURN ;2**69"
  },
  {
   "CONSTL": "1180591620717411303424",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 75,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000n => B                                               :RETURN ;2**70"
  },
  {
   "CONSTL": "2361183241434822606848",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 76,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000n => B                                               :RETURN ;2**71"
  },
  {
   "CONSTL": "4722366482869645213696",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 77,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000n => B                                              :RETURN ;2**72"
  },
  {
   "CONSTL": "9444732965739290427392",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 78,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000n => B                                              :RETURN ;2**73"
  },
  {
   "CONSTL": "18889465931478580854784",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 79,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000n => B                                              :RETURN ;2**74"
  },
  {
   "CONSTL": "37778931862957161709568",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 80,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000n => B                                              :RETURN ;2**75"
  },
  {
   "CONSTL": "75557863725914323419136",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 81,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000n => B                                             :RETURN ;2**76"
  },
  {
   "CONSTL": "151115727451828646838272",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 82,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000n => B                                             :RETURN ;2**77"
  },
  {
   "CONSTL": "302231454903657293676544",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 83,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000n => B                                             :RETURN ;2**78"
  },
  {
   "CONSTL": "604462909807314587353088",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 84,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000n => B                                             :RETURN ;2**79"
  },
  {
   "CONSTL": "1208925819614629174706176",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 85,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000n => B                                            :RETURN ;2**80"
  },
  {
   "CONSTL": "2417851639229258349412352",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 86,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000n => B                                            :RETURN ;2**81"
  },
  {
   "CONSTL": "4835703278458516698824704",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 87,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000n => B                                            :RETURN ;2**82"
  },
  {
   "CONSTL": "9671406556917033397649408",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 88,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000n => B                                            :RETURN ;2**83"
  },
  {
   "CONSTL": "19342813113834066795298816",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 89,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000n => B                                           :RETURN ;2**84"
  },
  {
   "CONSTL": "38685626227668133590597632",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 90,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000n => B                                           :RETURN ;2**85"
  },
  {
   "CONSTL": "77371252455336267181195264",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 91,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000n => B                                           :RETURN ;2**86"
  },
  {
   "CONSTL": "154742504910672534362390528",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 92,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000n => B                                           :RETURN ;2**87"
  },
  {
   "CONSTL": "309485009821345068724781056",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 93,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000n => B                                          :RETURN ;2**88"
  },
  {
   "CONSTL": "618970019642690137449562112",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 94,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000n => B                                          :RETURN ;2**89"
  },
  {
   "CONSTL": "1237940039285380274899124224",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 95,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000n => B                                          :RETURN ;2**90"
  },
  {
   "CONSTL": "2475880078570760549798248448",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 96,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000n => B                                          :RETURN ;2**91"
  },
  {
   "CONSTL": "4951760157141521099596496896",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 97,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000n => B                                         :RETURN ;2**92"
  },
  {
   "CONSTL": "9903520314283042199192993792",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 98,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000n => B                                         :RETURN ;2**93"
  },
  {
   "CONSTL": "19807040628566084398385987584",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 99,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000n => B                                         :RETURN ;2**94"
  },
  {
   "CONSTL": "39614081257132168796771975168",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 100,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000n => B                                         :RETURN ;2**95"
  },
  {
   "CONSTL": "79228162514264337593543950336",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 101,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000n => B                                        :RETURN ;2**96"
  },
  {
   "CONSTL": "158456325028528675187087900672",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 102,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000n => B                                        :RETURN ;2**97"
  },
  {
   "CONSTL": "316912650057057350374175801344",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 103,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000n => B                                        :RETURN ;2**98"
  },
  {
   "CONSTL": "633825300114114700748351602688",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 104,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000n => B                                        :RETURN ;2**99"
  },
  {
   "CONSTL": "1267650600228229401496703205376",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 105,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000n => B                                       :RETURN ;2**100"
  },
  {
   "CONSTL": "2535301200456458802993406410752",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 106,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000n => B                                       :RETURN ;2**101"
  },
  {
   "CONSTL": "5070602400912917605986812821504",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 107,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000n => B                                       :RETURN ;2**102"
  },
  {
   "CONSTL": "10141204801825835211973625643008",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 108,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000n => B                                       :RETURN ;2**103"
  },
  {
   "CONSTL": "20282409603651670423947251286016",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 109,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000n => B                                      :RETURN ;2**104"
  },
  {
   "CONSTL": "40564819207303340847894502572032",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 110,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000n => B                                      :RETURN ;2**105"
  },
  {
   "CONSTL": "81129638414606681695789005144064",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 111,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000n => B                                      :RETURN ;2**106"
  },
  {
   "CONSTL": "162259276829213363391578010288128",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 112,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000n => B                                      :RETURN ;2**107"
  },
  {
   "CONSTL": "324518553658426726783156020576256",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 113,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000n => B                                     :RETURN ;2**108"
  },
  {
   "CONSTL": "649037107316853453566312041152512",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 114,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000n => B                                     :RETURN ;2**109"
  },
  {
   "CONSTL": "1298074214633706907132624082305024",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 115,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000n => B                                     :RETURN ;2**110"
  },
  {
   "CONSTL": "2596148429267413814265248164610048",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 116,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000n => B                                     :RETURN ;2**111"
  },
  {
   "CONSTL": "5192296858534827628530496329220096",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 117,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000n => B                                    :RETURN ;2**112"
  },
  {
   "CONSTL": "10384593717069655257060992658440192",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 118,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000n => B                                    :RETURN ;2**113"
  },
  {
   "CONSTL": "20769187434139310514121985316880384",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 119,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000n => B                                    :RETURN ;2**114"
  },
  {
   "CONSTL": "41538374868278621028243970633760768",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 120,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000n => B                                    :RETURN ;2**115"
  },
  {
   "CONSTL": "83076749736557242056487941267521536",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 121,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000n => B                                   :RETURN ;2**116"
  },
  {
   "CONSTL": "166153499473114484112975882535043072",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 122,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000n => B                                   :RETURN ;2**117"
  },
  {
   "CONSTL": "332306998946228968225951765070086144",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 123,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000n => B                                   :RETURN ;2**118"
  },
  {
   "CONSTL": "664613997892457936451903530140172288",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 124,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000n => B                                   :RETURN ;2**119"
  },
  {
   "CONSTL": "1329227995784915872903807060280344576",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 125,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000n => B                                  :RETURN ;2**120"
  },
  {
   "CONSTL": "2658455991569831745807614120560689152",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 126,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000n => B                                  :RETURN ;2**121"
  },
  {
   "CONSTL": "5316911983139663491615228241121378304",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 127,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000n => B                                  :RETURN ;2**122"
  },
  {
   "CONSTL": "10633823966279326983230456482242756608",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 128,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000n => B                                  :RETURN ;2**123"
  },
  {
   "CONSTL": "21267647932558653966460912964485513216",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 129,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000n => B                                 :RETURN ;2**124"
  },
  {
   "CONSTL": "42535295865117307932921825928971026432",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 130,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000n => B                                 :RETURN ;2**125"
  },
  {
   "CONSTL": "85070591730234615865843651857942052864",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 131,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000n => B                                 :RETURN ;2**126"
  },
  {
   "CONSTL": "170141183460469231731687303715884105728",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 132,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000n => B                                 :RETURN ;2**127"
  },
  {
   "CONSTL": "340282366920938463463374607431768211456",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 133,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000n => B                                :RETURN ;2**128"
  },
  {
   "CONSTL": "680564733841876926926749214863536422912",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 134,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000n => B                                :RETURN ;2**129"
  },
  {
   "CONSTL": "1361129467683753853853498429727072845824",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 135,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000n => B                                :RETURN ;2**130"
  },
  {
   "CONSTL": "2722258935367507707706996859454145691648",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 136,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000n => B                                :RETURN ;2**131"
  },
  {
   "CONSTL": "5444517870735015415413993718908291383296",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 137,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000n => B                               :RETURN ;2**132"
  },
  {
   "CONSTL": "10889035741470030830827987437816582766592",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 138,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000n => B                               :RETURN ;2**133"
  },
  {
   "CONSTL": "21778071482940061661655974875633165533184",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 139,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000n => B                               :RETURN ;2**134"
  },
  {
   "CONSTL": "43556142965880123323311949751266331066368",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 140,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000n => B                               :RETURN ;2**135"
  },
  {
   "CONSTL": "87112285931760246646623899502532662132736",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 141,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000n => B                              :RETURN ;2**136"
  },
  {
   "CONSTL": "174224571863520493293247799005065324265472",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 142,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000n => B                              :RETURN ;2**137"
  },
  {
   "CONSTL": "348449143727040986586495598010130648530944",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 143,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000n => B                              :RETURN ;2**138"
  },
  {
   "CONSTL": "696898287454081973172991196020261297061888",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 144,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000n => B                              :RETURN ;2**139"
  },
  {
   "CONSTL": "1393796574908163946345982392040522594123776",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 145,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000n => B                             :RETURN ;2**140"
  },
  {
   "CONSTL": "2787593149816327892691964784081045188247552",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 146,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000n => B                             :RETURN ;2**141"
  },
  {
   "CONSTL": "5575186299632655785383929568162090376495104",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 147,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000n => B                             :RETURN ;2**142"
  },
  {
   "CONSTL": "11150372599265311570767859136324180752990208",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 148,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000n => B                             :RETURN ;2**143"
  },
  {
   "CONSTL": "22300745198530623141535718272648361505980416",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 149,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000n => B                            :RETURN ;2**144"
  },
  {
   "CONSTL": "44601490397061246283071436545296723011960832",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 150,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000n => B                            :RETURN ;2**145"
  },
  {
   "CONSTL": "89202980794122492566142873090593446023921664",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 151,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000n => B                            :RETURN ;2**146"
  },
  {
   "CONSTL": "178405961588244985132285746181186892047843328",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 152,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000n => B                            :RETURN ;2**147"
  },
  {
   "CONSTL": "356811923176489970264571492362373784095686656",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 153,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000n => B                           :RETURN ;2**148"
  },
  {
   "CONSTL": "713623846352979940529142984724747568191373312",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 154,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000n => B                           :RETURN ;2**149"
  },
  {
   "CONSTL": "1427247692705959881058285969449495136382746624",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 155,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000n => B                           :RETURN ;2**150"
  },
  {
   "CONSTL": "2854495385411919762116571938898990272765493248",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 156,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000n => B                           :RETURN ;2**151"
  },
  {
   "CONSTL": "5708990770823839524233143877797980545530986496",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 157,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000n => B                          :RETURN ;2**152"
  },
  {
   "CONSTL": "11417981541647679048466287755595961091061972992",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 158,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000n => B                          :RETURN ;2**153"
  },
  {
   "CONSTL": "22835963083295358096932575511191922182123945984",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 159,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000n => B                          :RETURN ;2**154"
  },
  {
   "CONSTL": "45671926166590716193865151022383844364247891968",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 160,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000n => B                          :RETURN ;2**155"
  },
  {
   "CONSTL": "91343852333181432387730302044767688728495783936",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 161,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000n => B                         :RETURN ;2**156"
  },
  {
   "CONSTL": "182687704666362864775460604089535377456991567872",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 162,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000n => B                         :RETURN ;2**157"
  },
  {
   "CONSTL": "365375409332725729550921208179070754913983135744",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 163,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000n => B                         :RETURN ;2**158"
  },
  {
   "CONSTL": "730750818665451459101842416358141509827966271488",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 164,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000n => B                         :RETURN ;2**159"
  },
  {
   "CONSTL": "1461501637330902918203684832716283019655932542976",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 165,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000n => B                        :RETURN ;2**160"
  },
  {
   "CONSTL": "2923003274661805836407369665432566039311865085952",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 166,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000n => B                        :RETURN ;2**161"
  },
  {
   "CONSTL": "5846006549323611672814739330865132078623730171904",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 167,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000n => B                        :RETURN ;2**162"
  },
  {
   "CONSTL": "11692013098647223345629478661730264157247460343808",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 168,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000n => B                        :RETURN ;2**163"
  },
  {
   "CONSTL": "23384026197294446691258957323460528314494920687616",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 169,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000n => B                       :RETURN ;2**164"
  },
  {
   "CONSTL": "46768052394588893382517914646921056628989841375232",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 170,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000n => B                       :RETURN ;2**165"
  },
  {
   "CONSTL": "93536104789177786765035829293842113257979682750464",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 171,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000n => B                       :RETURN ;2**166"
  },
  {
   "CONSTL": "187072209578355573530071658587684226515959365500928",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 172,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000n => B                       :RETURN ;2**167"
  },
  {
   "CONSTL": "374144419156711147060143317175368453031918731001856",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 173,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000n => B                      :RETURN ;2**168"
  },
  {
   "CONSTL": "748288838313422294120286634350736906063837462003712",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 174,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000n => B                      :RETURN ;2**169"
  },
  {
   "CONSTL": "1496577676626844588240573268701473812127674924007424",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 175,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000n => B                      :RETURN ;2**170"
  },
  {
   "CONSTL": "2993155353253689176481146537402947624255349848014848",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 176,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000n => B                      :RETURN ;2**171"
  },
  {
   "CONSTL": "5986310706507378352962293074805895248510699696029696",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 177,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000n => B                     :RETURN ;2**172"
  },
  {
   "CONSTL": "11972621413014756705924586149611790497021399392059392",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 178,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000n => B                     :RETURN ;2**173"
  },
  {
   "CONSTL": "23945242826029513411849172299223580994042798784118784",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 179,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000n => B                     :RETURN ;2**174"
  },
  {
   "CONSTL": "47890485652059026823698344598447161988085597568237568",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 180,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000n => B                     :RETURN ;2**175"
  },
  {
   "CONSTL": "95780971304118053647396689196894323976171195136475136",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 181,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000n => B                    :RETURN ;2**176"
  },
  {
   "CONSTL": "191561942608236107294793378393788647952342390272950272",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 182,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000n => B                    :RETURN ;2**177"
  },
  {
   "CONSTL": "383123885216472214589586756787577295904684780545900544",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 183,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000n => B                    :RETURN ;2**178"
  },
  {
   "CONSTL": "766247770432944429179173513575154591809369561091801088",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 184,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000n => B                    :RETURN ;2**179"
  },
  {
   "CONSTL": "1532495540865888858358347027150309183618739122183602176",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 185,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000n => B                   :RETURN ;2**180"
  },
  {
   "CONSTL": "3064991081731777716716694054300618367237478244367204352",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 186,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000n => B                   :RETURN ;2**181"
  },
  {
   "CONSTL": "6129982163463555433433388108601236734474956488734408704",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 187,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000n => B                   :RETURN ;2**182"
  },
  {
   "CONSTL": "12259964326927110866866776217202473468949912977468817408",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 188,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000n => B                   :RETURN ;2**183"
  },
  {
   "CONSTL": "24519928653854221733733552434404946937899825954937634816",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 189,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000n => B                  :RETURN ;2**184"
  },
  {
   "CONSTL": "49039857307708443467467104868809893875799651909875269632",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 190,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000n => B                  :RETURN ;2**185"
  },
  {
   "CONSTL": "98079714615416886934934209737619787751599303819750539264",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 191,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000n => B                  :RETURN ;2**186"
  },
  {
   "CONSTL": "196159429230833773869868419475239575503198607639501078528",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 192,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000n => B                  :RETURN ;2**187"
  },
  {
   "CONSTL": "392318858461667547739736838950479151006397215279002157056",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 193,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000n => B                 :RETURN ;2**188"
  },
  {
   "CONSTL": "784637716923335095479473677900958302012794430558004314112",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 194,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000n => B                 :RETURN ;2**189"
  },
  {
   "CONSTL": "1569275433846670190958947355801916604025588861116008628224",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 195,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000n => B                 :RETURN ;2**190"
  },
  {
   "CONSTL": "3138550867693340381917894711603833208051177722232017256448",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 196,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000n => B                 :RETURN ;2**191"
  },
  {
   "CONSTL": "6277101735386680763835789423207666416102355444464034512896",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 197,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000n => B                :RETURN ;2**192"
  },
  {
   "CONSTL": "12554203470773361527671578846415332832204710888928069025792",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 198,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000n => B                :RETURN ;2**193"
  },
  {
   "CONSTL": "25108406941546723055343157692830665664409421777856138051584",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 199,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000n => B                :RETURN ;2**194"
  },
  {
   "CONSTL": "50216813883093446110686315385661331328818843555712276103168",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 200,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000n => B                :RETURN ;2**195"
  },
  {
   "CONSTL": "100433627766186892221372630771322662657637687111424552206336",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 201,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000000n => B               :RETURN ;2**196"
  },
  {
   "CONSTL": "200867255532373784442745261542645325315275374222849104412672",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 202,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000000n => B               :RETURN ;2**197"
  },
  {
   "CONSTL": "401734511064747568885490523085290650630550748445698208825344",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 203,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000000n => B               :RETURN ;2**198"
  },
  {
   "CONSTL": "803469022129495137770981046170581301261101496891396417650688",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 204,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000000n => B               :RETURN ;2**199"
  },
  {
   "CONSTL": "1606938044258990275541962092341162602522202993782792835301376",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 205,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000000n => B              :RETURN ;2**200"
  },
  {
   "CONSTL": "3213876088517980551083924184682325205044405987565585670602752",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 206,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000000n => B              :RETURN ;2**201"
  },
  {
   "CONSTL": "6427752177035961102167848369364650410088811975131171341205504",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 207,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000000n => B              :RETURN ;2**202"
  },
  {
   "CONSTL": "12855504354071922204335696738729300820177623950262342682411008",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 208,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000000n => B              :RETURN ;2**203"
  },
  {
   "CONSTL": "25711008708143844408671393477458601640355247900524685364822016",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 209,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**204"
  },
  {
   "CONSTL": "51422017416287688817342786954917203280710495801049370729644032",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 210,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**205"
  },
  {
   "CONSTL": "102844034832575377634685573909834406561420991602098741459288064",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 211,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**206"
  },
  {
   "CONSTL": "205688069665150755269371147819668813122841983204197482918576128",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 212,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**207"
  },
  {
   "CONSTL": "411376139330301510538742295639337626245683966408394965837152256",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 213,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**208"
  },
  {
   "CONSTL": "822752278660603021077484591278675252491367932816789931674304512",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 214,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**209"
  },
  {
   "CONSTL": "1645504557321206042154969182557350504982735865633579863348609024",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 215,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**210"
  },
  {
   "CONSTL": "3291009114642412084309938365114701009965471731267159726697218048",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 216,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**211"
  },
  {
   "CONSTL": "6582018229284824168619876730229402019930943462534319453394436096",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 217,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**212"
  },
  {
   "CONSTL": "13164036458569648337239753460458804039861886925068638906788872192",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 218,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**213"
  },
  {
   "CONSTL": "26328072917139296674479506920917608079723773850137277813577744384",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 219,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**214"
  },
  {
   "CONSTL": "52656145834278593348959013841835216159447547700274555627155488768",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 220,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**215"
  },
  {
   "CONSTL": "105312291668557186697918027683670432318895095400549111254310977536",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 221,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**216"
  },
  {
   "CONSTL": "210624583337114373395836055367340864637790190801098222508621955072",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 222,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**217"
  },
  {
   "CONSTL": "421249166674228746791672110734681729275580381602196445017243910144",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 223,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**218"
  },
  {
   "CONSTL": "842498333348457493583344221469363458551160763204392890034487820288",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 224,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**219"
  },
  {
   "CONSTL": "1684996666696914987166688442938726917102321526408785780068975640576",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 225,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**220"
  },
  {
   "CONSTL": "3369993333393829974333376885877453834204643052817571560137951281152",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 226,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**221"
  },
  {
   "CONSTL": "6739986666787659948666753771754907668409286105635143120275902562304",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 227,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**222"
  },
  {
   "CONSTL": "13479973333575319897333507543509815336818572211270286240551805124608",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 228,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**223"
  },
  {
   "CONSTL": "26959946667150639794667015087019630673637144422540572481103610249216",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 229,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**224"
  },
  {
   "CONSTL": "53919893334301279589334030174039261347274288845081144962207220498432",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 230,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**225"
  },
  {
   "CONSTL": "107839786668602559178668060348078522694548577690162289924414440996864",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 231,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**226"
  },
  {
   "CONSTL": "215679573337205118357336120696157045389097155380324579848828881993728",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 232,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**227"
  },
  {
   "CONSTL": "431359146674410236714672241392314090778194310760649159697657763987456",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 233,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**228"
  },
  {
   "CONSTL": "862718293348820473429344482784628181556388621521298319395315527974912",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 234,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**229"
  },
  {
   "CONSTL": "1725436586697640946858688965569256363112777243042596638790631055949824",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 235,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**230"
  },
  {
   "CONSTL": "3450873173395281893717377931138512726225554486085193277581262111899648",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 236,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**231"
  },
  {
   "CONSTL": "6901746346790563787434755862277025452451108972170386555162524223799296",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 237,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**232"
  },
  {
   "CONSTL": "13803492693581127574869511724554050904902217944340773110325048447598592",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 238,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**233"
  },
  {
   "CONSTL": "27606985387162255149739023449108101809804435888681546220650096895197184",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 239,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**234"
  },
  {
   "CONSTL": "55213970774324510299478046898216203619608871777363092441300193790394368",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 240,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**235"
  },
  {
   "CONSTL": "110427941548649020598956093796432407239217743554726184882600387580788736",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 241,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**236"
  },
  {
   "CONSTL": "220855883097298041197912187592864814478435487109452369765200775161577472",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 242,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**237"
  },
  {
   "CONSTL": "441711766194596082395824375185729628956870974218904739530401550323154944",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 243,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**238"
  },
  {
   "CONSTL": "883423532389192164791648750371459257913741948437809479060803100646309888",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 244,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**239"
  },
  {
   "CONSTL": "1766847064778384329583297500742918515827483896875618958121606201292619776",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 245,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**240"
  },
  {
   "CONSTL": "3533694129556768659166595001485837031654967793751237916243212402585239552",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 246,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**241"
  },
  {
   "CONSTL": "7067388259113537318333190002971674063309935587502475832486424805170479104",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 247,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**242"
  },
  {
   "CONSTL": "14134776518227074636666380005943348126619871175004951664972849610340958208",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 248,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**243"
  },
  {
   "CONSTL": "28269553036454149273332760011886696253239742350009903329945699220681916416",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 249,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x10000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**244"
  },
  {
   "CONSTL": "56539106072908298546665520023773392506479484700019806659891398441363832832",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 250,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x20000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**245"
  },
  {
   "CONSTL": "113078212145816597093331040047546785012958969400039613319782796882727665664",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 251,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x40000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**246"
  },
  {
   "CONSTL": "226156424291633194186662080095093570025917938800079226639565593765455331328",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 252,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x80000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**247"
  },
  {
   "CONSTL": "452312848583266388373324160190187140051835877600158453279131187530910662656",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 253,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x100000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**248"
  },
  {
   "CONSTL": "904625697166532776746648320380374280103671755200316906558262375061821325312",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 254,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x200000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**249"
  },
  {
   "CONSTL": "1809251394333065553493296640760748560207343510400633813116524750123642650624",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 255,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x400000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**250"
  },
  {
   "CONSTL": "3618502788666131106986593281521497120414687020801267626233049500247285301248",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 256,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x800000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**251"
  },
  {
   "CONSTL": "7237005577332262213973186563042994240829374041602535252466099000494570602496",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 257,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**252"
  },
  {
   "CONSTL": "14474011154664524427946373126085988481658748083205070504932198000989141204992",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 258,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**253"
  },
  {
   "CONSTL": "28948022309329048855892746252171976963317496166410141009864396001978282409984",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 259,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**254"
  },
  {
   "CONSTL": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 260,
   "fileName": "2-exp.zkasm",
   "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**255"
  },
  {
   "inSR": "1",
   "offset": 32,
   "mOp": 1,
   "mWR": 1,
   "line": 30,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onProcessTx"
      }
     ]
    }
   ],
   "offsetLabel": "originSR",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        SR                              :MSTORE(originSR)"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 31,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        SR                              :MSTORE(initSR)"
  },
  {
   "CONST": "8288408",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 3973,
   "line": 34,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - 100000 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524188",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 3974,
   "line": 35,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 100   :JMPN(outOfCountersBinary)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 11,
   "mOp": 1,
   "mWR": 0,
   "line": 36,
   "offsetLabel": "txHash",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txHash)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 8,
   "mOp": 1,
   "mWR": 0,
   "line": 38,
   "offsetLabel": "txR",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 7,
   "mOp": 1,
   "mWR": 0,
   "line": 39,
   "offsetLabel": "txS",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :MLOAD(txS)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 9,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 2706,
   "call": 1,
   "line": 40,
   "offsetLabel": "txV",
   "useCTX": 1,
   "jmpAddrLabel": "ecrecover_tx",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(txV), CALL(ecrecover_tx)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 43,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B"
  },
  {
   "inA": "1",
   "offset": 10,
   "mOp": 1,
   "mWR": 1,
   "line": 44,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(txSrcAddr)"
  },
  {
   "inA": "1",
   "offset": 27,
   "mOp": 1,
   "mWR": 1,
   "line": 45,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(txSrcOriginAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4269,
   "useElseAddr": 1,
   "elseAddr": 3982,
   "line": 46,
   "jmpAddrLabel": "invalidIntrinsicTxSignature",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :EQ,JMPC(invalidIntrinsicTxSignature)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 52,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_LENGTH => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 53,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3985,
   "useElseAddr": 1,
   "elseAddr": 4276,
   "line": 54,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidIntrinsicTxSenderCode",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :SLOAD, JMPNZ(invalidIntrinsicTxSenderCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 39,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3986,
   "useElseAddr": 1,
   "elseAddr": 3989,
   "line": 61,
   "offsetLabel": "isPreEIP155",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "endCheckChainId",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(isPreEIP155), JMPNZ(endCheckChainId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 6,
   "mOp": 1,
   "mWR": 0,
   "line": 62,
   "offsetLabel": "txChainId",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txChainId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 7,
   "mOp": 1,
   "mWR": 0,
   "line": 63,
   "offsetLabel": "chainID",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(chainID)                                       ; A: chainId tx"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 3989,
   "useElseAddr": 1,
   "elseAddr": 4270,
   "line": 64,
   "jmpAddrLabel": "endCheckChainId",
   "elseAddrLabel": "invalidIntrinsicTxChainId",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :EQ,JMPC(endCheckChainId, invalidIntrinsicTxChainId)  ; If A == B --> endCheckChainId"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3669,
   "call": 1,
   "line": 68,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "jmpAddrLabel": "initTouchedTree",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr), CALL(initTouchedTree)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 69,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "                                        :CALL(isColdAddress) ; add tx.origin to touched addresses"
  },
  {
   "CONST": "0",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "line": 70,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0                               :MSTORE(depth) ; Initial depth is 0"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 5,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "txGasPriceRLP",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txGasPriceRLP)"
  },
  {
   "inA": "1",
   "offset": 28,
   "mOp": 1,
   "mWR": 1,
   "line": 74,
   "offsetLabel": "txGasPrice",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(txGasPrice)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "setE": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 79,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A, E                       :MLOAD(txSrcOriginAddr) ; Address of the origin to A and E"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 80,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_NONCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 81,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 82,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 83,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txNonce)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4000,
   "useElseAddr": 1,
   "elseAddr": 4271,
   "line": 84,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidIntrinsicTxNonce",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :EQ, JMPNC(invalidIntrinsicTxNonce) ; Compare nonce state tree with nonce transaction"
  },
  {
   "inB": "1",
   "assert": 1,
   "line": 85,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :ASSERT ; sanity check"
  },
  {
   "inA": "1",
   "CONST": "1",
   "setD": 1,
   "line": 86,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A + 1 => D"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 87,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => A"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 88,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_NONCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 89,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 90,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE ; Store the nonce plus one"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 97,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txGasLimit)"
  },
  {
   "CONST": "30000000",
   "setA": 1,
   "line": 99,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %TX_GAS_LIMIT => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4275,
   "useElseAddr": 1,
   "elseAddr": 4009,
   "line": 100,
   "jmpAddrLabel": "invalidIntrinsicBatchGasLimit",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT,JMPC(invalidIntrinsicBatchGasLimit)"
  },
  {
   "CONST": "21000",
   "setE": 1,
   "line": 103,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %BASE_TX_GAS => E ; Store init intrinsic gas at E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4012,
   "useElseAddr": 1,
   "elseAddr": 4011,
   "line": 104,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "getCalldataGasCost",
   "elseAddrLabel": "addDeploymentGasCost",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(addDeploymentGasCost, getCalldataGasCost)"
  },
  {
   "CONST": "53000",
   "setE": 1,
   "line": 107,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %BASE_TX_DEPLOY_GAS => E ; 53000 gas if transaction is a create"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 110,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txCalldataLen)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 111,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4027,
   "useElseAddr": 1,
   "elseAddr": 4015,
   "line": 112,
   "jmpAddrLabel": "endCalldataIntrinsicGas",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :EQ,JMPC(endCalldataIntrinsicGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 38,
   "mOp": 1,
   "mWR": 0,
   "line": 115,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => HASHPOS                    :MLOAD(dataStarts)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4017,
   "line": 116,
   "jmpAddrLabel": "loopBytes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C                          :JMP(loopBytes)"
  },
  {
   "CONST": "8388398",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4018,
   "line": 119,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
  },
  {
   "inA": "1",
   "inC": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4027,
   "useElseAddr": 1,
   "elseAddr": 4019,
   "line": 120,
   "jmpAddrLabel": "endCalldataIntrinsicGas",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        A - C - 1                       :JMPN(endCalldataIntrinsicGas)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 121,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 122,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 123,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :HASHK1(E)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 124,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B => E"
  },
  {
   "inC": "1",
   "CONST": "1",
   "setC": 1,
   "line": 125,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C + 1 => C"
  },
  {
   "inD": "1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4025,
   "useElseAddr": 1,
   "elseAddr": 4026,
   "line": 126,
   "jmpAddrLabel": "add4Gas",
   "elseAddrLabel": "add16Gas",
   "fileName": "process-tx.zkasm",
   "lineStr": "        D - 1                           :JMPN(add4Gas, add16Gas)"
  },
  {
   "inE": "1",
   "CONST": "4",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4017,
   "line": 129,
   "jmpAddrLabel": "loopBytes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        E + 4 => E                      :JMP(loopBytes)"
  },
  {
   "inE": "1",
   "CONST": "16",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4017,
   "line": 132,
   "jmpAddrLabel": "loopBytes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        E + 16 => E                     :JMP(loopBytes)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 136,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txGasLimit)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 137,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4272,
   "useElseAddr": 1,
   "elseAddr": 4030,
   "line": 138,
   "jmpAddrLabel": "invalidIntrinsicTxGasLimit",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT, JMPC(invalidIntrinsicTxGasLimit)"
  },
  {
   "inE": "1",
   "offset": 22,
   "mOp": 1,
   "mWR": 1,
   "line": 140,
   "offsetLabel": "gasCalldata",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E                               :MSTORE(gasCalldata)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 144,
   "offsetLabel": "txGasPrice",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txGasPrice)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 145,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 146,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 118,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4035,
   "useElseAddr": 1,
   "elseAddr": 4273,
   "line": 147,
   "offsetLabel": "arithOverflow",
   "useCTX": 0,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidIntrinsicTxGasOverflow",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(arithOverflow), JMPNZ(invalidIntrinsicTxGasOverflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 148,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 150,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 151,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B, C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "sRD": 1,
   "line": 152,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 154,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txValue)"
  },
  {
   "inD": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 155,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        D                               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 156,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :MSTORE(arithB), CALL(addARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 157,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(arithRes1)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 159,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4274,
   "useElseAddr": 1,
   "elseAddr": 4045,
   "line": 160,
   "jmpAddrLabel": "invalidIntrinsicTxBalance",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT, JMPC(invalidIntrinsicTxBalance)"
  },
  {
   "inC": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 163,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C                               :MSTORE(arithA)"
  },
  {
   "inD": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4522,
   "call": 1,
   "line": 164,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "subARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        D                               :MSTORE(arithB), CALL(subARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 166,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 167,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 168,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B,C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 169,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "inSR": "1",
   "offset": 17,
   "mOp": 1,
   "mWR": 1,
   "line": 172,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        SR                              :MSTORE(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setGAS": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 175,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => GAS                        :MLOAD(txGasLimit)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 22,
   "mOp": 1,
   "mWR": 0,
   "line": 176,
   "offsetLabel": "gasCalldata",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(gasCalldata)"
  },
  {
   "inGAS": "1",
   "inA": "-1",
   "setGAS": 1,
   "line": 177,
   "fileName": "process-tx.zkasm",
   "lineStr": "        GAS - A => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4056,
   "useElseAddr": 1,
   "elseAddr": 4062,
   "line": 185,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "getContractAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(getContractAddress)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 186,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 187,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "                                        :CALL(isColdAddress) ; Add 'to' to touched addresses"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 190,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4174,
   "useElseAddr": 1,
   "elseAddr": 4060,
   "line": 191,
   "jmpAddrLabel": "callContract",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :EQ, JMPC(callContract)"
  },
  {
   "CONST": "10",
   "setB": 1,
   "line": 192,
   "fileName": "process-tx.zkasm",
   "lineStr": "        10 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 2696,
   "useElseAddr": 1,
   "elseAddr": 4174,
   "line": 193,
   "jmpAddrLabel": "selectorPrecompiled",
   "elseAddrLabel": "callContract",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT,JMPC(selectorPrecompiled, callContract)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 205,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 207,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 208,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 35,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4066,
   "useElseAddr": 1,
   "elseAddr": 4089,
   "line": 210,
   "offsetLabel": "isCreate2",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "create2",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(isCreate2), JMPNZ(create2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 212,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 4068,
   "line": 213,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1:JMPN(outOfCountersKeccak)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 214,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txNonce)"
  },
  {
   "CONST": "128",
   "setB": 1,
   "line": 215,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0x80 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4080,
   "useElseAddr": 1,
   "elseAddr": 4071,
   "line": 216,
   "jmpAddrLabel": "nonce1byte",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT,JMPC(nonce1byte)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 217,
   "offsetLabel": "lengthNonce",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :MLOAD(lengthNonce)"
  },
  {
   "CONST": "214",
   "inC": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 219,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0xc0 + 22 + C                   :HASHK1(E)"
  },
  {
   "CONST": "148",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 220,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0x94                            :HASHK1(E)"
  },
  {
   "CONST": "20",
   "setD": 1,
   "line": 221,
   "fileName": "process-tx.zkasm",
   "lineStr": "        20 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 222,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txSrcAddr)"
  },
  {
   "inB": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 223,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :HASHK(E)"
  },
  {
   "CONST": "128",
   "inC": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 224,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0x80 + C                        :HASHK1(E)"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 225,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C => D"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4128,
   "line": 226,
   "jmpAddrLabel": "endContractAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :HASHK(E), JMP(endContractAddress)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 229,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 230,
   "offsetLabel": "txNonce",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txNonce)"
  },
  {
   "CONST": "214",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 231,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0xc0 + 22                       :HASHK1(E)"
  },
  {
   "CONST": "148",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 232,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0x94                            :HASHK1(E)"
  },
  {
   "CONST": "20",
   "setD": 1,
   "line": 233,
   "fileName": "process-tx.zkasm",
   "lineStr": "        20 => D"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 234,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4088,
   "useElseAddr": 1,
   "elseAddr": 4087,
   "line": 235,
   "jmpAddrLabel": "nonceIs0",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :JMPZ(nonceIs0)"
  },
  {
   "inB": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4128,
   "line": 236,
   "jmpAddrLabel": "endContractAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :HASHK1(E),JMP(endContractAddress)"
  },
  {
   "CONST": "128",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4128,
   "line": 239,
   "jmpAddrLabel": "endContractAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "        0x80                            :HASHK1(E),JMP(endContractAddress)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 243,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :MLOAD(txCalldataLen)"
  },
  {
   "inC": "1",
   "CONST": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 245,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C + 1                           :MSTORE(arithA)"
  },
  {
   "CONST": "136",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 246,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        136                             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 247,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 248,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2374",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "setA": 1,
   "line": 250,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 2 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 4096,
   "line": 251,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT, JMPC(outOfCountersKeccak)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 253,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => CTX                        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 254,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(argsOffsetCall)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4099,
   "line": 258,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524284",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4100,
   "line": 259,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4113,
   "useElseAddr": 1,
   "elseAddr": 4101,
   "line": 261,
   "jmpAddrLabel": "create2end",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        C                               :JMPZ(create2end)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4108,
   "useElseAddr": 1,
   "elseAddr": 4102,
   "line": 262,
   "jmpAddrLabel": "endloopCreate2",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        C - 32                          :JMPN(endloopCreate2)"
  },
  {
   "inB": "1",
   "setE": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 263,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B => E                          :CALL(MLOAD32)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 264,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => B"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 265,
   "fileName": "process-tx.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 266,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 267,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4098,
   "line": 268,
   "jmpAddrLabel": "loopCreate2",
   "fileName": "process-tx.zkasm",
   "lineStr": "        C - 32 => C                     :JMP(loopCreate2)"
  },
  {
   "inB": "1",
   "setE": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 271,
   "jmpAddrLabel": "MLOADX",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B => E                          :CALL(MLOADX)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 272,
   "jmpAddrLabel": "SHRarith",
   "fileName": "process-tx.zkasm",
   "lineStr": "        32 - C => D                     :CALL(SHRarith)"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 273,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 274,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 275,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 278,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => CTX                        :MLOAD(currentCTX)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 279,
   "fileName": "process-tx.zkasm",
   "lineStr": "        HASHPOS                         :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 280,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => C                          :HASHKDIGEST(E)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 283,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 284,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 285,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
  },
  {
   "CONST": "255",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 286,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0xff                            :HASHK1(E)"
  },
  {
   "CONST": "20",
   "setD": 1,
   "line": 287,
   "fileName": "process-tx.zkasm",
   "lineStr": "        20 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 288,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 289,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :HASHK(E)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 290,
   "fileName": "process-tx.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 36,
   "mOp": 1,
   "mWR": 0,
   "line": 291,
   "offsetLabel": "salt",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(salt)"
  },
  {
   "inB": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 292,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :HASHK(E)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 293,
   "fileName": "process-tx.zkasm",
   "lineStr": "        32 => D"
  },
  {
   "inC": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 294,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C                               :HASHK(E)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 297,
   "fileName": "process-tx.zkasm",
   "lineStr": "        HASHPOS                         :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4878,
   "call": 1,
   "line": 298,
   "jmpAddrLabel": "maskAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :HASHKDIGEST(E), CALL(maskAddress) ; Mask address to 20 bytes"
  },
  {
   "inA": "1",
   "offset": 14,
   "mOp": 1,
   "mWR": 1,
   "line": 299,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(createContractAddress)"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 300,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(txDestAddr)"
  },
  {
   "inA": "1",
   "offset": 2,
   "mOp": 1,
   "mWR": 1,
   "line": 301,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(storageAddr)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3674,
   "call": 1,
   "line": 305,
   "jmpAddrLabel": "isColdAddress",
   "fileName": "process-tx.zkasm",
   "lineStr": "                                :CALL(isColdAddress) ; add address to touched addresses"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 307,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A => E"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 310,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 311,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_NONCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 312,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                      :SLOAD"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 313,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4680,
   "useElseAddr": 1,
   "elseAddr": 4140,
   "line": 314,
   "jmpAddrLabel": "deployAddressCollision",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                           :LT,JMPC(deployAddressCollision)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 317,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => A"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 318,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_CODE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 319,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                      :SLOAD"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 320,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4680,
   "useElseAddr": 1,
   "elseAddr": 4145,
   "line": 321,
   "jmpAddrLabel": "deployAddressCollision",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                           :LT,JMPC(deployAddressCollision)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 324,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E => A"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 325,
   "fileName": "process-tx.zkasm",
   "lineStr": "        1 => D"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 326,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_NONCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 327,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 329,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 330,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "CONST": "4153",
   "setRR": 1,
   "line": 331,
   "fileName": "process-tx.zkasm",
   "lineStr": "        zkPC+2 => RR"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4706,
   "useElseAddr": 1,
   "elseAddr": 4153,
   "line": 332,
   "jmpAddrLabel": "moveBalances",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT, JMPC(moveBalances)"
  },
  {
   "CONST": "0",
   "setPC": 1,
   "line": 333,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => PC"
  },
  {
   "CONST": "0",
   "setSP": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 334,
   "jmpAddrLabel": "readCode",
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => SP                         :JMP(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4156,
   "useElseAddr": 1,
   "elseAddr": 4163,
   "line": 339,
   "offsetLabel": "isCreate",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "readDeployBytecodeCreate",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(isCreate), JMPNZ(readDeployBytecodeCreate)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 341,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txCalldataLen)"
  },
  {
   "inB": "1",
   "inPC": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4278,
   "useElseAddr": 1,
   "elseAddr": 4158,
   "line": 342,
   "jmpAddrLabel": "defaultOpCode",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B - PC - 1                      :JMPN(defaultOpCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setHASHPOS": 1,
   "offset": 38,
   "mOp": 1,
   "mWR": 0,
   "line": 343,
   "offsetLabel": "dataStarts",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => HASHPOS                    :MLOAD(dataStarts)"
  },
  {
   "inHASHPOS": "1",
   "inPC": "1",
   "setHASHPOS": 1,
   "line": 344,
   "fileName": "process-tx.zkasm",
   "lineStr": "        HASHPOS + PC => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 345,
   "offsetLabel": "batchHashDataId",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK1": 1,
   "line": 346,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "functionCall",
       "funcName": "onOpcode",
       "params": [
        {
         "op": "getReg",
         "regName": "RR"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => RR                         :HASHK1(E)"
  },
  {
   "inPC": "1",
   "CONST": "1",
   "setPC": 1,
   "JMP": 1,
   "useJmpAddr": 0,
   "ind": 0,
   "indRR": 1,
   "offset": 2288,
   "line": 348,
   "offsetLabel": "mapping_opcodes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 12,
   "mOp": 1,
   "mWR": 0,
   "line": 352,
   "offsetLabel": "txCalldataLen",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(txCalldataLen)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 353,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => CTX                        :MLOAD(originCTX)"
  },
  {
   "inE": "1",
   "inPC": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4173,
   "useElseAddr": 1,
   "elseAddr": 4166,
   "line": 355,
   "jmpAddrLabel": "readDeployBytecodeCreateDefault",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        E - PC - 1                      :JMPN(readDeployBytecodeCreateDefault)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 356,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(argsOffsetCall)"
  },
  {
   "inE": "1",
   "inPC": "1",
   "setE": 1,
   "line": 357,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E + PC => E"
  },
  {
   "CONST": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 358,
   "jmpAddrLabel": "MLOADX",
   "fileName": "process-tx.zkasm",
   "lineStr": "        1 => C                          :CALL(MLOADX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 359,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => CTX                        :MLOAD(currentCTX)"
  },
  {
   "CONST": "31",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 360,
   "jmpAddrLabel": "SHRarith",
   "fileName": "process-tx.zkasm",
   "lineStr": "        31 => D                         :CALL(SHRarith)"
  },
  {
   "inA": "1",
   "setRR": 1,
   "line": 361,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "functionCall",
       "funcName": "onOpcode",
       "params": [
        {
         "op": "getReg",
         "regName": "RR"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "process-tx.zkasm",
   "lineStr": "        A => RR"
  },
  {
   "inPC": "1",
   "CONST": "1",
   "setPC": 1,
   "JMP": 1,
   "useJmpAddr": 0,
   "ind": 0,
   "indRR": 1,
   "offset": 2288,
   "line": 363,
   "offsetLabel": "mapping_opcodes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4278,
   "line": 367,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "jmpAddrLabel": "defaultOpCode",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => CTX                        :MLOAD(currentCTX), JMP(defaultOpCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 377,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txValue)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 378,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "CONST": "4178",
   "setRR": 1,
   "line": 379,
   "fileName": "process-tx.zkasm",
   "lineStr": "        zkPC+2 => RR"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4706,
   "useElseAddr": 1,
   "elseAddr": 4178,
   "line": 380,
   "jmpAddrLabel": "moveBalances",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :LT, JMPC(moveBalances)"
  },
  {
   "CONST": "0",
   "setPC": 1,
   "line": 381,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => PC"
  },
  {
   "CONST": "0",
   "setSP": 1,
   "line": 382,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 384,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 387,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_LENGTH => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 388,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 389,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :SLOAD"
  },
  {
   "inB": "1",
   "offset": 27,
   "mOp": 1,
   "mWR": 1,
   "line": 390,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :MSTORE(bytecodeLength)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 391,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4278,
   "useElseAddr": 1,
   "elseAddr": 4187,
   "line": 392,
   "jmpAddrLabel": "defaultOpCode",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :EQ, JMPC(defaultOpCode) ;no bytecode"
  },
  {
   "inB": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 396,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B               :MSTORE(arithA)"
  },
  {
   "CONST": "56",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 397,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        56              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 398,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B          :MLOAD(arithRes1)"
  },
  {
   "CONST": "279619",
   "inCntPoseidonG": "-1",
   "setA": 1,
   "line": 399,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 4192,
   "line": 400,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $               :LT, JMPC(outOfCountersPoseidon)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 402,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 404,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_CODE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 405,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :SLOAD"
  },
  {
   "inA": "1",
   "offset": 38,
   "mOp": 1,
   "mWR": 1,
   "line": 406,
   "offsetLabel": "hashContractTxDestAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(hashContractTxDestAddr)"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 407,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 408,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(bytecodeLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 411,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(nextHashPId)"
  },
  {
   "inE": "1",
   "offset": 28,
   "mOp": 1,
   "mWR": 1,
   "line": 412,
   "offsetLabel": "contractHashId",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E                               :MSTORE(contractHashId)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 413,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E+1                             :MSTORE(nextHashPId)"
  },
  {
   "CONST": "8388404",
   "inSTEP": "-1",
   "inB": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4202,
   "line": 416,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        %MAX_CNT_STEPS - STEP - B - 4   :JMPN(outOfCountersStep)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setRCX": 1,
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4204,
   "useElseAddr": 1,
   "elseAddr": 4203,
   "line": 419,
   "jmpAddrLabel": "checkHashBytecodeEnd",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B - 1 => RCX                    :JMPN(checkHashBytecodeEnd)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "getBytecode",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "HASHPOS"
     },
     {
      "op": "number",
      "num": "1"
     }
    ]
   },
   "inFREE": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "repeat": 1,
   "line": 420,
   "fileName": "process-tx.zkasm",
   "lineStr": "        ${getBytecode(A, HASHPOS, 1)}   :HASHP1(E), REPEAT(RCX) ; hash contract bytecode"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPLen": 1,
   "line": 423,
   "fileName": "process-tx.zkasm",
   "lineStr": "        HASHPOS                         :HASHPLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPDigest": 1,
   "line": 424,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :HASHPDIGEST(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 38,
   "mOp": 1,
   "mWR": 0,
   "line": 426,
   "offsetLabel": "hashContractTxDestAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(hashContractTxDestAddr)"
  },
  {
   "inE": "1",
   "assert": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 427,
   "jmpAddrLabel": "readCode",
   "fileName": "process-tx.zkasm",
   "lineStr": "        E                               :ASSERT, JMP(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 430,
   "offsetLabel": "contractHashId",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => E                          :MLOAD(contractHashId) ; hash index"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 431,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 433,
   "offsetLabel": "bytecodeLength",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(bytecodeLength)"
  },
  {
   "inB": "1",
   "inPC": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4278,
   "useElseAddr": 1,
   "elseAddr": 4212,
   "line": 434,
   "jmpAddrLabel": "defaultOpCode",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B - PC - 1                      :JMPN(defaultOpCode) ; no bytecode treated as 0x00"
  },
  {
   "inPC": "1",
   "setHASHPOS": 1,
   "line": 435,
   "fileName": "process-tx.zkasm",
   "lineStr": "        PC => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 436,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "functionCall",
       "funcName": "onOpcode",
       "params": [
        {
         "op": "getReg",
         "regName": "RR"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => RR                         :HASHP1(E)"
  },
  {
   "inPC": "1",
   "CONST": "1",
   "setPC": 1,
   "JMP": 1,
   "useJmpAddr": 0,
   "ind": 0,
   "indRR": 1,
   "offset": 2288,
   "line": 438,
   "offsetLabel": "mapping_opcodes",
   "fileName": "process-tx.zkasm",
   "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 13,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4208,
   "useElseAddr": 1,
   "elseAddr": 4155,
   "line": 441,
   "offsetLabel": "isCreateContract",
   "useCTX": 1,
   "jmpAddrLabel": "readByteCode",
   "elseAddrLabel": "readDeployBytecode",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(readDeployBytecode, readByteCode)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 4217,
   "line": 448,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        C                               :JMPZ(handleGas)"
  },
  {
   "inE": "1",
   "offset": 127,
   "mOp": 1,
   "mWR": 1,
   "line": 451,
   "offsetLabel": "memOffsetLinearPoseidon",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        E                               :MSTORE(memOffsetLinearPoseidon)"
  },
  {
   "inC": "1",
   "offset": 128,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4819,
   "call": 1,
   "line": 452,
   "offsetLabel": "memSizeLinearPoseidon",
   "useCTX": 0,
   "jmpAddrLabel": "checkBytecodeStartsEF",
   "fileName": "process-tx.zkasm",
   "lineStr": "        C                               :MSTORE(memSizeLinearPoseidon), CALL(checkBytecodeStartsEF)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 126,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4220,
   "useElseAddr": 1,
   "elseAddr": 4683,
   "line": 455,
   "offsetLabel": "startsWithEF",
   "useCTX": 0,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "invalidCodeStartsEF",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $                               :MLOAD(startsWithEF), JMPNZ(invalidCodeStartsEF)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 458,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(createContractAddress)"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 459,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_LENGTH => B"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 460,
   "fileName": "process-tx.zkasm",
   "lineStr": "        C => D"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 461,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 462,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "inA": "1",
   "offset": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4836,
   "call": 1,
   "line": 463,
   "offsetLabel": "txDestAddr",
   "useCTX": 1,
   "jmpAddrLabel": "hashPoseidonLinearFromMemory",
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(txDestAddr), CALL(hashPoseidonLinearFromMemory)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 14,
   "mOp": 1,
   "mWR": 0,
   "line": 464,
   "offsetLabel": "createContractAddress",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(createContractAddress)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 465,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 466,
   "fileName": "process-tx.zkasm",
   "lineStr": "        %SMT_KEY_SC_CODE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 467,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 478,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4239,
   "useElseAddr": 1,
   "elseAddr": 4232,
   "line": 479,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "jmpAddrLabel": "refundGas",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(gasRefund), JMPZ(refundGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 480,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txGasLimit)"
  },
  {
   "inA": "1",
   "inGAS": "-1",
   "setA": 1,
   "line": 481,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A - GAS => A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 483,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(arithA)"
  },
  {
   "CONST": "2",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 484,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        2                               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 485,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(arithRes1)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4239,
   "useElseAddr": 1,
   "elseAddr": 4238,
   "line": 486,
   "jmpAddrLabel": "refundGas",
   "elseAddrLabel": "next",
   "fileName": "process-tx.zkasm",
   "lineStr": "        A - B                           :JMPN(refundGas)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 487,
   "fileName": "process-tx.zkasm",
   "lineStr": "        B => A"
  },
  {
   "inGAS": "1",
   "inA": "1",
   "setGAS": 1,
   "line": 491,
   "fileName": "process-tx.zkasm",
   "lineStr": "        GAS + A => GAS"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 492,
   "fileName": "process-tx.zkasm",
   "lineStr": "        GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 493,
   "offsetLabel": "txGasPrice",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txGasPrice)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 495,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 496,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B                               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 497,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 499,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 500,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B,C ; balance key smt"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 501,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :SLOAD ; Original Balance in A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 504,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A                               :MSTORE(arithA)"
  },
  {
   "inD": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 505,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        D                               :MSTORE(arithB), CALL(addARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 506,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D                          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 27,
   "mOp": 1,
   "mWR": 0,
   "line": 508,
   "offsetLabel": "txSrcOriginAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 509,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B,C                        ; balance key smt"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 510,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 0,
   "mOp": 1,
   "mWR": 0,
   "line": 515,
   "offsetLabel": "txGasLimit",
   "useCTX": 1,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A          :MLOAD(txGasLimit)"
  },
  {
   "inA": "1",
   "inGAS": "-1",
   "setA": 1,
   "line": 516,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A - GAS => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 518,
   "offsetLabel": "txGasPrice",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => B          :MLOAD(txGasPrice)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 520,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 521,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        B               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 522,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D          :MLOAD(arithRes1) ; value to pay the sequencer in D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 524,
   "offsetLabel": "sequencerAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A          :MLOAD(sequencerAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 525,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B,C ; Balance key smt"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 526,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A          :SLOAD ; Original Balance in A"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 528,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        A               :MSTORE(arithA)"
  },
  {
   "inD": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4517,
   "call": 1,
   "line": 529,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "addARITH",
   "fileName": "process-tx.zkasm",
   "lineStr": "        D               :MSTORE(arithB), CALL(addARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 530,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => D          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 4,
   "mOp": 1,
   "mWR": 0,
   "line": 531,
   "offsetLabel": "sequencerAddr",
   "useCTX": 0,
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => A          :MLOAD(sequencerAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "setC": 1,
   "line": 532,
   "fileName": "process-tx.zkasm",
   "lineStr": "        0 => B,C ; balance key smt"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 56,
   "line": 533,
   "jmpAddrLabel": "processTxEnd",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR         :SSTORE, JMP(processTxEnd)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 537,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_signature"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_signature)} :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 540,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_chain_id"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_chain_id)}  :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 543,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_nonce"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_nonce)}     :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 546,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_gas_limit"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_gas_limit)}  :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 549,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_gas_overflow"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_gas_overflow)} :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 552,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_balance"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_balance)}    :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 555,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_batch_gas_limit"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_batch_gas_limit)} :JMP(handleIntrinsicError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4277,
   "line": 558,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "intrinsic_invalid_sender_code"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleIntrinsicError",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onError, intrinsic_invalid_sender_code)} :JMP(handleIntrinsicError)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 32,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 57,
   "line": 561,
   "offsetLabel": "originSR",
   "useCTX": 0,
   "jmpAddrLabel": "processTxFinished",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $ => SR                         :MLOAD(originSR), JMP(processTxFinished)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 682,
   "line": 565,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "functionCall",
       "funcName": "onOpcode",
       "params": [
        {
         "op": "number",
         "num": "0"
        }
       ]
      }
     ]
    }
   ],
   "jmpAddrLabel": "opSTOP",
   "fileName": "process-tx.zkasm",
   "lineStr": "        $${eventLog(onOpcode(0))}        :JMP(opSTOP)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 27,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "bin": 1,
   "binOpcode": 3,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4282,
   "useElseAddr": 1,
   "elseAddr": 4281,
   "line": 29,
   "jmpAddrLabel": "absIsNeg",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :SLT, JMPC(absIsNeg)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 30,
   "fileName": "utils.zkasm",
   "lineStr": "                    :RETURN"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 33,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 34,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 36,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :SUB"
  },
  {
   "CONST": "1",
   "setB": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 37,
   "fileName": "utils.zkasm",
   "lineStr": "    1 => B          :RETURN"
  },
  {
   "inRR": "1",
   "offset": 101,
   "mOp": 1,
   "mWR": 1,
   "line": 43,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC2)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 45,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "CONST": "1024",
   "setSP": 1,
   "line": 47,
   "fileName": "utils.zkasm",
   "lineStr": "    %CALLDATA_OFFSET => SP"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 49,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 50,
   "offsetLabel": "argsOffsetCall",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(argsOffsetCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 26,
   "mOp": 1,
   "mWR": 0,
   "line": 51,
   "offsetLabel": "argsLengthCall",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(argsLengthCall)"
  },
  {
   "CONST": "524278",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4293,
   "line": 55,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10   :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4294,
   "line": 56,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4305,
   "useElseAddr": 1,
   "elseAddr": 4295,
   "line": 57,
   "jmpAddrLabel": "copyEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :JMPZ(copyEnd)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4301,
   "useElseAddr": 1,
   "elseAddr": 4296,
   "line": 58,
   "jmpAddrLabel": "copyFinal",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    C - 32          :JMPN(copyFinal)"
  },
  {
   "CONST": "4297",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "line": 60,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 62,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 64,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(SP++)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 66,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4292,
   "line": 67,
   "jmpAddrLabel": "copyInit",
   "fileName": "utils.zkasm",
   "lineStr": "    C - 32 => C     :JMP(copyInit)"
  },
  {
   "CONST": "4302",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "line": 71,
   "jmpAddrLabel": "MLOADX",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 73,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
  },
  {
   "inA": "1",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 75,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(SP++)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 77,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(originCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 101,
   "mOp": 1,
   "mWR": 0,
   "line": 81,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setCTX": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 82,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => CTX        :MLOAD(currentCTX), RETURN"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 89,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 90,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 91,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 92,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(tmpVarD)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 94,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 95,
   "fileName": "utils.zkasm",
   "lineStr": "    B => A"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4314,
   "line": 99,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524280",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4315,
   "line": 100,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 8 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262140",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 4316,
   "line": 101,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 4 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 103,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4321,
   "useElseAddr": 1,
   "elseAddr": 4318,
   "line": 105,
   "jmpAddrLabel": "getLenEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(getLenEnd)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 107,
   "fileName": "utils.zkasm",
   "lineStr": "    1 => D"
  },
  {
   "CONST": "4320",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 108,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inC": "1",
   "CONST": "1",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4313,
   "line": 110,
   "jmpAddrLabel": "getLenBytesLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    C + 1 => C      :JMP(getLenBytesLoop)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 114,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 116,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 117,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 118,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 119,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD), RETURN"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 126,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 127,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 128,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 129,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(tmpVarD)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 131,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 132,
   "fileName": "utils.zkasm",
   "lineStr": "    B => A"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4333,
   "line": 136,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524280",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4334,
   "line": 137,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 8 :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "262140",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 4335,
   "line": 138,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 4 :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 139,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4342,
   "useElseAddr": 1,
   "elseAddr": 4337,
   "line": 141,
   "jmpAddrLabel": "getLenBitsEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(getLenBitsEnd)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 143,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "2",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "line": 144,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    2               :MSTORE(arithB)"
  },
  {
   "CONST": "4340",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "line": 145,
   "jmpAddrLabel": "divARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 146,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes1)"
  },
  {
   "inC": "1",
   "CONST": "1",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4332,
   "line": 148,
   "jmpAddrLabel": "getLenBitsLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    C + 1 => C      :JMP(getLenBitsLoop)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 152,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 154,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 155,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 156,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 157,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD), RETURN"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4451,
   "useElseAddr": 1,
   "elseAddr": 4348,
   "line": 167,
   "jmpAddrLabel": "errorMLOADMSTORE",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C          :JMPN(errorMLOADMSTORE)"
  },
  {
   "CONST": "31",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4350,
   "useElseAddr": 1,
   "elseAddr": 4349,
   "line": 168,
   "jmpAddrLabel": "MSTORE32",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C - 1      :JMPN(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
  },
  {
   "CONST": "1",
   "offset": 106,
   "mOp": 1,
   "mWR": 1,
   "line": 169,
   "offsetLabel": "isMSTOREX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    1               :MSTORE(isMSTOREX)"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 177,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC)"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 178,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(tmpVarA)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 179,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 180,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 181,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(tmpVarD)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 182,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(tmpVarE)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 184,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "4194304",
   "setB": 1,
   "line": 185,
   "fileName": "utils.zkasm",
   "lineStr": "    %MEMORY_LENGTH => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4359,
   "useElseAddr": 1,
   "elseAddr": 4451,
   "line": 186,
   "jmpAddrLabel": "initMSTORE",
   "elseAddrLabel": "errorMLOADMSTORE",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :LT,JMPC(initMSTORE, errorMLOADMSTORE)"
  },
  {
   "CONST": "4360",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4701,
   "line": 189,
   "jmpAddrLabel": "offsetUtil",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 106,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4393,
   "useElseAddr": 1,
   "elseAddr": 4361,
   "line": 191,
   "offsetLabel": "isMSTOREX",
   "useCTX": 0,
   "jmpAddrLabel": "finalMSTORE",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(isMSTOREX), JMPZ(finalMSTORE)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4362,
   "useElseAddr": 1,
   "elseAddr": 4376,
   "line": 193,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "MSTOREX2",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :JMPNZ(MSTOREX2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 194,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 105,
   "mOp": 1,
   "mWR": 0,
   "line": 196,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(bytesToStore)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "line": 197,
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C => D"
  },
  {
   "CONST": "4366",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 199,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "4367",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "line": 200,
   "jmpAddrLabel": "SHLarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 201,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 203,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "line": 204,
   "fileName": "utils.zkasm",
   "lineStr": "    32 - D => D"
  },
  {
   "CONST": "4371",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "line": 206,
   "jmpAddrLabel": "SHLarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "CONST": "4372",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 207,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "inB": "1",
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 208,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A + B           :MSTORE(bytesToStore)"
  },
  {
   "inA": "1",
   "inB": "1",
   "setA": 1,
   "line": 209,
   "fileName": "utils.zkasm",
   "lineStr": "    A + B => A"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 210,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "0",
   "offset": 106,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4393,
   "line": 211,
   "offsetLabel": "isMSTOREX",
   "useCTX": 0,
   "jmpAddrLabel": "finalMSTORE",
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(isMSTOREX), JMP(finalMSTORE)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 215,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarC)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setD": 1,
   "line": 216,
   "fileName": "utils.zkasm",
   "lineStr": "    C + D => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 218,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "CONST": "4380",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "line": 220,
   "jmpAddrLabel": "SHLarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 221,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarC)"
  },
  {
   "CONST": "4382",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 222,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 223,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 225,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E+1)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "line": 226,
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C => D"
  },
  {
   "CONST": "4386",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 228,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "inB": "1",
   "setB": 1,
   "line": 230,
   "fileName": "utils.zkasm",
   "lineStr": "    A + B => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 105,
   "mOp": 1,
   "mWR": 0,
   "line": 231,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(bytesToStore)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 232,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarC)"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "line": 233,
   "fileName": "utils.zkasm",
   "lineStr": "    32 - D => D"
  },
  {
   "CONST": "4391",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 235,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "4392",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "line": 236,
   "jmpAddrLabel": "SHLarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "inA": "1",
   "inB": "1",
   "setA": 1,
   "offset": 105,
   "mOp": 1,
   "mWR": 1,
   "line": 238,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A + B => A      :MSTORE(bytesToStore)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4394,
   "useElseAddr": 1,
   "elseAddr": 4397,
   "line": 241,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "memAlignOptionMSTORE",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :JMPNZ(memAlignOptionMSTORE)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 105,
   "mOp": 1,
   "mWR": 0,
   "line": 243,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(bytesToStore)"
  },
  {
   "inA": "1",
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 244,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(MEM:E)"
  },
  {
   "inE": "32",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4412,
   "line": 245,
   "jmpAddrLabel": "offsetMSTORE32",
   "fileName": "utils.zkasm",
   "lineStr": "    E*32 => E       :JMP(offsetMSTORE32)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 248,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(tmpVarE)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 250,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 251,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "memAlignWR_W0",
    "params": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getMemValue",
      "module": "mem",
      "offset": 105,
      "offsetLabel": "bytesToStore"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 253,
   "fileName": "utils.zkasm",
   "lineStr": "    ${memAlignWR_W0(A,mem.bytesToStore,C)} => D                    ; no trust calculate W0"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "memAlignWR_W1",
    "params": [
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getMemValue",
      "module": "mem",
      "offset": 105,
      "offsetLabel": "bytesToStore"
     },
     {
      "op": "getReg",
      "regName": "C"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "line": 254,
   "fileName": "utils.zkasm",
   "lineStr": "    ${memAlignWR_W1(B,mem.bytesToStore,C)} => E                    ; no trust calculate W1"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "memAlignRD": 0,
   "memAlignWR": 1,
   "memAlignWR8": 0,
   "offset": 105,
   "mOp": 1,
   "mWR": 0,
   "line": 255,
   "offsetLabel": "bytesToStore",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $               :MEM_ALIGN_WR,MLOAD(bytesToStore)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 256,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 89,
   "mOp": 1,
   "mWR": 0,
   "line": 257,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpVarE)"
  },
  {
   "inD": "1",
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 258,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(MEM:E)          ; write W0"
  },
  {
   "inA": "1",
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 259,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(MEM:E+1)        ; write W1"
  },
  {
   "inE": "32",
   "inC": "1",
   "setE": 1,
   "line": 260,
   "fileName": "utils.zkasm",
   "lineStr": "    E*32 + C => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 106,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4412,
   "useElseAddr": 1,
   "elseAddr": 4409,
   "line": 261,
   "offsetLabel": "isMSTOREX",
   "useCTX": 0,
   "jmpAddrLabel": "offsetMSTORE32",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(isMSTOREX), JMPZ(offsetMSTORE32)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 262,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "inE": "32",
   "inC": "1",
   "setE": 1,
   "line": 263,
   "fileName": "utils.zkasm",
   "lineStr": "    E*32 + C => E"
  },
  {
   "CONST": "0",
   "offset": 106,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4413,
   "line": 264,
   "offsetLabel": "isMSTOREX",
   "useCTX": 0,
   "jmpAddrLabel": "endMSTORE",
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(isMSTOREX), JMP(endMSTORE)"
  },
  {
   "inE": "1",
   "CONST": "32",
   "setE": 1,
   "line": 267,
   "fileName": "utils.zkasm",
   "lineStr": "    E + 32 => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 270,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 271,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 272,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 273,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 274,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD), RETURN"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4451,
   "useElseAddr": 1,
   "elseAddr": 4419,
   "line": 283,
   "jmpAddrLabel": "errorMLOADMSTORE",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C          :JMPN(errorMLOADMSTORE) ; TDDO Should be unreachable! check it"
  },
  {
   "CONST": "31",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "useElseAddr": 1,
   "elseAddr": 4420,
   "line": 284,
   "jmpAddrLabel": "MLOAD32",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C - 1      :JMPN(MLOAD32)"
  },
  {
   "CONST": "1",
   "offset": 107,
   "mOp": 1,
   "mWR": 1,
   "line": 285,
   "offsetLabel": "isMLOADX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    1               :MSTORE(isMLOADX)"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 293,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 294,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 295,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 296,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(tmpVarD)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 298,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "4194304",
   "setB": 1,
   "line": 299,
   "fileName": "utils.zkasm",
   "lineStr": "    %MEMORY_LENGTH => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4428,
   "useElseAddr": 1,
   "elseAddr": 4451,
   "line": 300,
   "jmpAddrLabel": "initMLOAD",
   "elseAddrLabel": "errorMLOADMSTORE",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :LT,JMPC(initMLOAD, errorMLOADMSTORE)"
  },
  {
   "CONST": "4429",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4701,
   "line": 303,
   "jmpAddrLabel": "offsetUtil",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4430,
   "useElseAddr": 1,
   "elseAddr": 4434,
   "line": 305,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "memAlignOptionMLOAD",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :JMPNZ(memAlignOptionMLOAD)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 307,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 107,
   "mOp": 1,
   "mWR": 0,
   "line": 308,
   "offsetLabel": "isMLOADX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(isMLOADX)"
  },
  {
   "inE": "32",
   "setE": 1,
   "line": 309,
   "fileName": "utils.zkasm",
   "lineStr": "    E*32 => E"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4446,
   "useElseAddr": 1,
   "elseAddr": 4440,
   "line": 310,
   "jmpAddrLabel": "offsetMLOAD32",
   "elseAddrLabel": "sliceA",
   "fileName": "utils.zkasm",
   "lineStr": "    B               :JMPZ(offsetMLOAD32, sliceA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 313,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(MEM:E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "isStack": 0,
   "isMem": 1,
   "ind": 1,
   "indRR": 0,
   "incStack": 0,
   "offset": 1,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 0,
   "line": 314,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "memAlignRD": 1,
   "memAlignWR": 0,
   "memAlignWR8": 0,
   "line": 316,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MEM_ALIGN_RD"
  },
  {
   "inE": "32",
   "inC": "1",
   "setE": 1,
   "line": 317,
   "fileName": "utils.zkasm",
   "lineStr": "    E*32 + C => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 107,
   "mOp": 1,
   "mWR": 0,
   "line": 318,
   "offsetLabel": "isMLOADX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(isMLOADX)"
  },
  {
   "inB": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4446,
   "useElseAddr": 1,
   "elseAddr": 4440,
   "line": 319,
   "jmpAddrLabel": "offsetMLOAD32",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    B               :JMPZ(offsetMLOAD32)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 323,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "line": 324,
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C => D"
  },
  {
   "CONST": "4443",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "line": 325,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "4444",
   "setRR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4611,
   "line": 326,
   "jmpAddrLabel": "SHLarith",
   "fileName": "utils.zkasm",
   "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
  },
  {
   "CONST": "0",
   "offset": 107,
   "mOp": 1,
   "mWR": 1,
   "line": 327,
   "offsetLabel": "isMLOADX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(isMLOADX)"
  },
  {
   "inE": "1",
   "inC": "1",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4447,
   "line": 328,
   "jmpAddrLabel": "endMLOAD",
   "fileName": "utils.zkasm",
   "lineStr": "    E + C => E      :JMP(endMLOAD)"
  },
  {
   "inE": "1",
   "CONST": "32",
   "setE": 1,
   "line": 331,
   "fileName": "utils.zkasm",
   "lineStr": "    E + 32 => E"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 335,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 336,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 337,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 338,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD), RETURN"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 341,
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "                    :JMP(handleError)"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 348,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A                           :MSTORE(tmpVarA)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 349,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                           :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 350,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                           :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 351,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                           :MSTORE(tmpVarD)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 353,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 356,
   "fileName": "utils.zkasm",
   "lineStr": "    %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 357,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 358,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :SLOAD"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 360,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4473,
   "useElseAddr": 1,
   "elseAddr": 4462,
   "line": 362,
   "jmpAddrLabel": "isNotEmptyAccount",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 364,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 366,
   "fileName": "utils.zkasm",
   "lineStr": "    %SMT_KEY_NONCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 368,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :SLOAD"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 369,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4473,
   "useElseAddr": 1,
   "elseAddr": 4467,
   "line": 371,
   "jmpAddrLabel": "isNotEmptyAccount",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 373,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 375,
   "fileName": "utils.zkasm",
   "lineStr": "    %SMT_KEY_SC_CODE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "sRD": 1,
   "line": 377,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :SLOAD"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 378,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4473,
   "useElseAddr": 1,
   "elseAddr": 4472,
   "line": 380,
   "jmpAddrLabel": "isNotEmptyAccount",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
  },
  {
   "CONST": "1",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4474,
   "line": 381,
   "jmpAddrLabel": "ISEMPTYEnd",
   "fileName": "utils.zkasm",
   "lineStr": "    1 => E                      :JMP(ISEMPTYEnd)"
  },
  {
   "CONST": "0",
   "setE": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4474,
   "line": 384,
   "jmpAddrLabel": "ISEMPTYEnd",
   "fileName": "utils.zkasm",
   "lineStr": "    0 => E                      :JMP(ISEMPTYEnd)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 388,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 389,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 390,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                      :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 391,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                      :MLOAD(tmpVarD), RETURN"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 398,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 399,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :MSTORE(tmpVarC)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 400,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                       :MSTORE(tmpVarD)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 401,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(tmpVarE)"
  },
  {
   "inGAS": "1",
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getReg",
      "regName": "GAS"
     },
     {
      "op": "number",
      "num": "64"
     }
    ]
   },
   "inFREE": "-1",
   "setA": 1,
   "line": 404,
   "fileName": "utils.zkasm",
   "lineStr": "    GAS - ${GAS/64} => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 23,
   "mOp": 1,
   "mWR": 0,
   "line": 405,
   "offsetLabel": "gasCall",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                  :MLOAD(gasCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4486,
   "useElseAddr": 1,
   "elseAddr": 4485,
   "line": 407,
   "jmpAddrLabel": "computeGasSendCallEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                       :LT,JMPC(computeGasSendCallEnd)"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 409,
   "fileName": "utils.zkasm",
   "lineStr": "    B => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 413,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                  :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 414,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                  :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "line": 415,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                  :MLOAD(tmpVarD)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 89,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 416,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                  :MLOAD(tmpVarE), RETURN"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 422,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A                           :MSTORE(tmpVarA)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 423,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                           :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 424,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                           :MSTORE(tmpVarC)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 425,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                           :MSTORE(tmpVarE)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 20,
   "mOp": 1,
   "mWR": 0,
   "line": 426,
   "offsetLabel": "lastMemOffset",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                      :MLOAD(lastMemOffset)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 19,
   "mOp": 1,
   "mWR": 0,
   "line": 427,
   "offsetLabel": "lastMemLength",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :MLOAD(lastMemLength)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 428,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4513,
   "useElseAddr": 1,
   "elseAddr": 4498,
   "line": 430,
   "jmpAddrLabel": "saveMemEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :EQ, JMPC(saveMemEnd)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 432,
   "fileName": "utils.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "bin": 1,
   "binOpcode": 0,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4500,
   "line": 433,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :ADD, JMPC(outOfGas)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 18,
   "mOp": 1,
   "mWR": 0,
   "line": 435,
   "offsetLabel": "memLength",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :MLOAD(memLength)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4502,
   "useElseAddr": 1,
   "elseAddr": 4513,
   "line": 436,
   "jmpAddrLabel": "saveMemGAS",
   "elseAddrLabel": "saveMemEnd",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT, JMPC(saveMemGAS, saveMemEnd)"
  },
  {
   "inB": "1",
   "offset": 18,
   "mOp": 1,
   "mWR": 1,
   "line": 440,
   "offsetLabel": "memLength",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    B                           :MSTORE(memLength)"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "add",
      "values": [
       {
        "op": "getReg",
        "regName": "B"
       },
       {
        "op": "number",
        "num": "31"
       }
      ]
     },
     {
      "op": "number",
      "num": "32"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "line": 442,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(B+31)/32} => E"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "add",
      "values": [
       {
        "op": "getReg",
        "regName": "A"
       },
       {
        "op": "number",
        "num": "31"
       }
      ]
     },
     {
      "op": "number",
      "num": "32"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 444,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(A+31)/32} => C"
  },
  {
   "inGAS": "1",
   "inC": "3",
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "mul",
      "values": [
       {
        "op": "getReg",
        "regName": "C"
       },
       {
        "op": "getReg",
        "regName": "C"
       }
      ]
     },
     {
      "op": "number",
      "num": "512"
     }
    ]
   },
   "inFREE": "1",
   "setGAS": 1,
   "line": 446,
   "fileName": "utils.zkasm",
   "lineStr": "    GAS + 3*C + ${C*C/512} => GAS"
  },
  {
   "inGAS": "1",
   "setA": 1,
   "line": 448,
   "fileName": "utils.zkasm",
   "lineStr": "    GAS => A"
  },
  {
   "inE": "3",
   "setB": 1,
   "line": 449,
   "fileName": "utils.zkasm",
   "lineStr": "    3*E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4509,
   "line": 451,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT,JMPC(outOfGas)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "setA": 1,
   "line": 452,
   "fileName": "utils.zkasm",
   "lineStr": "    A - B => A"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "mul",
      "values": [
       {
        "op": "getReg",
        "regName": "E"
       },
       {
        "op": "getReg",
        "regName": "E"
       }
      ]
     },
     {
      "op": "number",
      "num": "512"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 453,
   "fileName": "utils.zkasm",
   "lineStr": "    ${E*E/512} => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4675,
   "useElseAddr": 1,
   "elseAddr": 4512,
   "line": 454,
   "jmpAddrLabel": "outOfGas",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :LT,JMPC(outOfGas)"
  },
  {
   "inA": "1",
   "inB": "-1",
   "setGAS": 1,
   "line": 456,
   "fileName": "utils.zkasm",
   "lineStr": "    A - B => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 460,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 461,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                      :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 462,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                      :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 89,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 463,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                      :MLOAD(tmpVarE), RETURN"
  },
  {
   "inRR": "1",
   "offset": 113,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4572,
   "call": 1,
   "line": 483,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "storeTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 114,
   "mOp": 1,
   "mWR": 0,
   "line": 484,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 115,
   "mOp": 1,
   "mWR": 0,
   "line": 485,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "bin": 1,
   "binOpcode": 0,
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 486,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :ADD, MSTORE(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "line": 488,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith), JMP(loadTmp)"
  },
  {
   "inRR": "1",
   "offset": 113,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4572,
   "call": 1,
   "line": 496,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "storeTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPCArith),CALL(storeTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 114,
   "mOp": 1,
   "mWR": 0,
   "line": 497,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 115,
   "mOp": 1,
   "mWR": 0,
   "line": 498,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 499,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :SUB,MSTORE(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "line": 500,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith),JMP(loadTmp)"
  },
  {
   "inRR": "1",
   "offset": 113,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4572,
   "call": 1,
   "line": 509,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "storeTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 114,
   "mOp": 1,
   "mWR": 0,
   "line": 510,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 115,
   "mOp": 1,
   "mWR": 0,
   "line": 511,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithB)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 512,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_mulArith"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulArith"
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 514,
   "fileName": "utils.zkasm",
   "lineStr": "    ${_mulArith >> 256} => D"
  },
  {
   "freeInTag": {
    "op": "getVar",
    "varName": "_mulArith"
   },
   "inFREE": "1",
   "setE": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 515,
   "fileName": "utils.zkasm",
   "lineStr": "    ${_mulArith} => E :ARITH"
  },
  {
   "inE": "1",
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 517,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(arithRes1)"
  },
  {
   "inD": "1",
   "offset": 118,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "call": 1,
   "line": 518,
   "offsetLabel": "arithOverflow",
   "useCTX": 0,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(arithOverflow), CALL(loadTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "line": 519,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 520,
   "fileName": "utils.zkasm",
   "lineStr": "                    :RETURN"
  },
  {
   "inRR": "1",
   "offset": 113,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4572,
   "call": 1,
   "line": 528,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "jmpAddrLabel": "storeTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 114,
   "mOp": 1,
   "mWR": 0,
   "line": 529,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(arithA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 115,
   "mOp": 1,
   "mWR": 0,
   "line": 530,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithB)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 532,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4559,
   "useElseAddr": 1,
   "elseAddr": 4542,
   "line": 533,
   "jmpAddrLabel": "zeroDiv",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ, JMPC(zeroDiv)"
  },
  {
   "inA": "1",
   "setC": 1,
   "line": 536,
   "fileName": "utils.zkasm",
   "lineStr": "    A => C ; store temporally A in C"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 537,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A ; divisor"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 538,
   "fileName": "utils.zkasm",
   "lineStr": "    C => B ; denominator"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4563,
   "useElseAddr": 1,
   "elseAddr": 4546,
   "line": 539,
   "jmpAddrLabel": "divisorSmallerDiv",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :LT, JMPC(divisorSmallerDiv)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 540,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getReg",
      "regName": "E"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 542,
   "fileName": "utils.zkasm",
   "lineStr": "    ${E%A} => C ; reminder"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getReg",
      "regName": "E"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 543,
   "fileName": "utils.zkasm",
   "lineStr": "    ${E/A} => B"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 544,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 545,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :ARITH"
  },
  {
   "inB": "1",
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 547,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(arithRes1)"
  },
  {
   "inC": "1",
   "offset": 117,
   "mOp": 1,
   "mWR": 1,
   "line": 548,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(arithRes2)"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 551,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B ; divisor"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 552,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A ; reminder"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 553,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :LT"
  },
  {
   "CONST": "1",
   "assert": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "call": 1,
   "line": 554,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    1               :ASSERT,CALL(loadTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "line": 555,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 556,
   "fileName": "utils.zkasm",
   "lineStr": "                    :RETURN"
  },
  {
   "CONST": "0",
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 559,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(arithRes1)"
  },
  {
   "CONST": "0",
   "offset": 117,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "call": 1,
   "line": 560,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(arithRes2), CALL(loadTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "line": 561,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 562,
   "fileName": "utils.zkasm",
   "lineStr": "                    :RETURN"
  },
  {
   "CONST": "0",
   "offset": 116,
   "mOp": 1,
   "mWR": 1,
   "line": 565,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(arithRes1)"
  },
  {
   "inE": "1",
   "offset": 117,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4567,
   "call": 1,
   "line": 566,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "jmpAddrLabel": "loadTmp",
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(arithRes2), CALL(loadTmp)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 113,
   "mOp": 1,
   "mWR": 0,
   "line": 567,
   "offsetLabel": "tmpZkPCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 568,
   "fileName": "utils.zkasm",
   "lineStr": "                    :RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 108,
   "mOp": 1,
   "mWR": 0,
   "line": 571,
   "offsetLabel": "tmpVarAArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                  :MLOAD(tmpVarAArith)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 109,
   "mOp": 1,
   "mWR": 0,
   "line": 572,
   "offsetLabel": "tmpVarBArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                  :MLOAD(tmpVarBArith)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 110,
   "mOp": 1,
   "mWR": 0,
   "line": 573,
   "offsetLabel": "tmpVarCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                  :MLOAD(tmpVarCArith)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 111,
   "mOp": 1,
   "mWR": 0,
   "line": 574,
   "offsetLabel": "tmpVarDArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                  :MLOAD(tmpVarDArith)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 112,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 575,
   "offsetLabel": "tmpVarEArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                  :MLOAD(tmpVarEArith), RETURN"
  },
  {
   "inA": "1",
   "offset": 108,
   "mOp": 1,
   "mWR": 1,
   "line": 578,
   "offsetLabel": "tmpVarAArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A                   :MSTORE(tmpVarAArith)"
  },
  {
   "inB": "1",
   "offset": 109,
   "mOp": 1,
   "mWR": 1,
   "line": 579,
   "offsetLabel": "tmpVarBArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                   :MSTORE(tmpVarBArith)"
  },
  {
   "inC": "1",
   "offset": 110,
   "mOp": 1,
   "mWR": 1,
   "line": 580,
   "offsetLabel": "tmpVarCArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                   :MSTORE(tmpVarCArith)"
  },
  {
   "inD": "1",
   "offset": 111,
   "mOp": 1,
   "mWR": 1,
   "line": 581,
   "offsetLabel": "tmpVarDArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                   :MSTORE(tmpVarDArith)"
  },
  {
   "inE": "1",
   "offset": 112,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 582,
   "offsetLabel": "tmpVarEArith",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                   :MSTORE(tmpVarEArith), RETURN"
  },
  {
   "inRR": "1",
   "offset": 120,
   "mOp": 1,
   "mWR": 1,
   "line": 592,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
  },
  {
   "inB": "1",
   "offset": 91,
   "mOp": 1,
   "mWR": 1,
   "line": 593,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(tmpVarB2)"
  },
  {
   "inC": "1",
   "offset": 92,
   "mOp": 1,
   "mWR": 1,
   "line": 594,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :MSTORE(tmpVarC2)"
  },
  {
   "inD": "1",
   "offset": 93,
   "mOp": 1,
   "mWR": 1,
   "line": 595,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                       :MSTORE(tmpVarD2)"
  },
  {
   "inE": "1",
   "offset": 94,
   "mOp": 1,
   "mWR": 1,
   "line": 596,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(tmpVarE2)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 598,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 600,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "8",
   "setB": 1,
   "line": 602,
   "fileName": "utils.zkasm",
   "lineStr": "    8 => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 603,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 604,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "freeInTag": {
    "op": "mul",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 606,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A*B} => D             :ARITH"
  },
  {
   "inE": "1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4594,
   "line": 608,
   "jmpAddrLabel": "SHRarithinit",
   "fileName": "utils.zkasm",
   "lineStr": "    E => A                  :JMP(SHRarithinit)"
  },
  {
   "inRR": "1",
   "offset": 120,
   "mOp": 1,
   "mWR": 1,
   "line": 614,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
  },
  {
   "inB": "1",
   "offset": 91,
   "mOp": 1,
   "mWR": 1,
   "line": 615,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(tmpVarB2)"
  },
  {
   "inC": "1",
   "offset": 92,
   "mOp": 1,
   "mWR": 1,
   "line": 616,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :MSTORE(tmpVarC2)"
  },
  {
   "inD": "1",
   "offset": 93,
   "mOp": 1,
   "mWR": 1,
   "line": 617,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                       :MSTORE(tmpVarD2)"
  },
  {
   "inE": "1",
   "offset": 94,
   "mOp": 1,
   "mWR": 1,
   "line": 618,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(tmpVarE2)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 621,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4606,
   "useElseAddr": 1,
   "elseAddr": 4596,
   "line": 623,
   "jmpAddrLabel": "SHRarithfinal",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                       :EQ,JMPC(SHRarithfinal)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 625,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 627,
   "fileName": "utils.zkasm",
   "lineStr": "    D => B"
  },
  {
   "CONST": "255",
   "setA": 1,
   "line": 628,
   "fileName": "utils.zkasm",
   "lineStr": "    255 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4605,
   "useElseAddr": 1,
   "elseAddr": 4600,
   "line": 630,
   "jmpAddrLabel": "SHRarith0",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                       :LT,JMPC(SHRarith0)"
  },
  {
   "inD": "1",
   "setRR": 1,
   "line": 631,
   "fileName": "utils.zkasm",
   "lineStr": "    D => RR"
  },
  {
   "inE": "1",
   "setA": 1,
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 632,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A                  :MSTORE(arithA)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 633,
   "offsetLabel": "exp_num",
   "fileName": "utils.zkasm",
   "lineStr": "                            :CALL(@exp_num + RR); out:[B: 2**RR]"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 634,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(arithB),CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4606,
   "line": 635,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "jmpAddrLabel": "SHRarithfinal",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                  :MLOAD(arithRes1),JMP(SHRarithfinal)"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 638,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 91,
   "mOp": 1,
   "mWR": 0,
   "line": 641,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                  :MLOAD(tmpVarB2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 92,
   "mOp": 1,
   "mWR": 0,
   "line": 642,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                  :MLOAD(tmpVarC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 93,
   "mOp": 1,
   "mWR": 0,
   "line": 643,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                  :MLOAD(tmpVarD2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 120,
   "mOp": 1,
   "mWR": 0,
   "line": 644,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR                 :MLOAD(tmpSHXZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 94,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 645,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                  :MLOAD(tmpVarE2), RETURN"
  },
  {
   "inRR": "1",
   "offset": 120,
   "mOp": 1,
   "mWR": 1,
   "line": 652,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
  },
  {
   "inB": "1",
   "offset": 91,
   "mOp": 1,
   "mWR": 1,
   "line": 653,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(tmpVarB2)"
  },
  {
   "inC": "1",
   "offset": 92,
   "mOp": 1,
   "mWR": 1,
   "line": 654,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :MSTORE(tmpVarC2)"
  },
  {
   "inD": "1",
   "offset": 93,
   "mOp": 1,
   "mWR": 1,
   "line": 655,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                       :MSTORE(tmpVarD2)"
  },
  {
   "inE": "1",
   "offset": 94,
   "mOp": 1,
   "mWR": 1,
   "line": 656,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(tmpVarE2)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 658,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 660,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "8",
   "setB": 1,
   "line": 661,
   "fileName": "utils.zkasm",
   "lineStr": "    8 => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 662,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 663,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "freeInTag": {
    "op": "mul",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 665,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A*B} => D             :ARITH"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 667,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4629,
   "line": 668,
   "jmpAddrLabel": "SHLarithinit",
   "fileName": "utils.zkasm",
   "lineStr": "                            :JMP(SHLarithinit)"
  },
  {
   "inRR": "1",
   "offset": 120,
   "mOp": 1,
   "mWR": 1,
   "line": 670,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
  },
  {
   "inB": "1",
   "offset": 91,
   "mOp": 1,
   "mWR": 1,
   "line": 671,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                       :MSTORE(tmpVarB2)"
  },
  {
   "inC": "1",
   "offset": 92,
   "mOp": 1,
   "mWR": 1,
   "line": 672,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :MSTORE(tmpVarC2)"
  },
  {
   "inD": "1",
   "offset": 93,
   "mOp": 1,
   "mWR": 1,
   "line": 673,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                       :MSTORE(tmpVarD2)"
  },
  {
   "inE": "1",
   "offset": 94,
   "mOp": 1,
   "mWR": 1,
   "line": 674,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(tmpVarE2)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 678,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 679,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 681,
   "fileName": "utils.zkasm",
   "lineStr": "    D => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4662,
   "useElseAddr": 1,
   "elseAddr": 4633,
   "line": 683,
   "jmpAddrLabel": "SHLarithfinal",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                       :EQ,JMPC(SHLarithfinal)"
  },
  {
   "CONST": "255",
   "setA": 1,
   "line": 684,
   "fileName": "utils.zkasm",
   "lineStr": "    255 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4654,
   "useElseAddr": 1,
   "elseAddr": 4635,
   "line": 686,
   "jmpAddrLabel": "SHLarith0",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                       :LT,JMPC(SHLarith0)"
  },
  {
   "inD": "1",
   "setRR": 1,
   "line": 688,
   "fileName": "utils.zkasm",
   "lineStr": "    D => RR"
  },
  {
   "inE": "1",
   "setA": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 690,
   "offsetLabel": "exp_num",
   "fileName": "utils.zkasm",
   "lineStr": "    E => A                  :CALL(@exp_num + RR)"
  },
  {
   "freeInTag": {
    "op": "mul",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "line": 692,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A*B} => E"
  },
  {
   "inE": "1",
   "offset": 104,
   "mOp": 1,
   "mWR": 1,
   "line": 693,
   "offsetLabel": "result",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :MSTORE(result)"
  },
  {
   "CONST": "256",
   "inD": "-1",
   "setD": 1,
   "setRR": 1,
   "line": 695,
   "fileName": "utils.zkasm",
   "lineStr": "    256 - D => D, RR"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 696,
   "offsetLabel": "exp_num",
   "fileName": "utils.zkasm",
   "lineStr": "                            :CALL(@exp_num + RR); out:[B: 2**RR]"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 697,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inB": "1",
   "setA": 1,
   "line": 698,
   "fileName": "utils.zkasm",
   "lineStr": "    B => A"
  },
  {
   "CONST": "1",
   "setB": 1,
   "line": 699,
   "fileName": "utils.zkasm",
   "lineStr": "    1 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 700,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                  :SUB"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 701,
   "fileName": "utils.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 703,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                  :LT"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 705,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 104,
   "mOp": 1,
   "mWR": 0,
   "line": 707,
   "offsetLabel": "result",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                  :MLOAD(result)"
  },
  {
   "CONST": "256",
   "inD": "-1",
   "setD": 1,
   "setRR": 1,
   "line": 709,
   "fileName": "utils.zkasm",
   "lineStr": "    256 - D => D, RR"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 710,
   "offsetLabel": "exp_num",
   "fileName": "utils.zkasm",
   "lineStr": "                            :CALL(@exp_num + RR); out:[B: 2**RR]"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4652,
   "useElseAddr": 1,
   "elseAddr": 4656,
   "line": 712,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "SHLarithBig",
   "fileName": "utils.zkasm",
   "lineStr": "    C                       :JMPNZ(SHLarithBig)"
  },
  {
   "CONST": "0",
   "setD": 1,
   "setC": 1,
   "line": 713,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D,C"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4662,
   "line": 715,
   "jmpAddrLabel": "SHLarithfinal",
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :ARITH, JMP(SHLarithfinal)"
  },
  {
   "CONST": "0",
   "setE": 1,
   "line": 718,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => E"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4662,
   "line": 719,
   "jmpAddrLabel": "SHLarithfinal",
   "fileName": "utils.zkasm",
   "lineStr": "                            :JMP(SHLarithfinal)"
  },
  {
   "CONST": "256",
   "inD": "-1",
   "setD": 1,
   "setRR": 1,
   "line": 722,
   "fileName": "utils.zkasm",
   "lineStr": "    256 - D => D, RR"
  },
  {
   "inB": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "offset": 3714,
   "ind": 0,
   "indRR": 1,
   "return": 0,
   "call": 1,
   "line": 723,
   "offsetLabel": "exp_num",
   "fileName": "utils.zkasm",
   "lineStr": "    B => C                  :CALL(@exp_num + RR); out:[B: 2**RR]"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "getReg",
      "regName": "B"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 724,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A/B} => D"
  },
  {
   "inC": "1",
   "setB": 1,
   "line": 725,
   "fileName": "utils.zkasm",
   "lineStr": "    C => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 726,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "inE": "1",
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 727,
   "fileName": "utils.zkasm",
   "lineStr": "    E                       :ARITH"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 730,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 91,
   "mOp": 1,
   "mWR": 0,
   "line": 731,
   "offsetLabel": "tmpVarB2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                  :MLOAD(tmpVarB2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 92,
   "mOp": 1,
   "mWR": 0,
   "line": 732,
   "offsetLabel": "tmpVarC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                  :MLOAD(tmpVarC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 93,
   "mOp": 1,
   "mWR": 0,
   "line": 733,
   "offsetLabel": "tmpVarD2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                  :MLOAD(tmpVarD2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 120,
   "mOp": 1,
   "mWR": 0,
   "line": 734,
   "offsetLabel": "tmpSHXZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR                 :MLOAD(tmpSHXZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 94,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 735,
   "offsetLabel": "tmpVarE2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                  :MLOAD(tmpVarE2), RETURN"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 739,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCS"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCS)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 741,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCK"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCK)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 743,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCB"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCB)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 745,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCM"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCM)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 747,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCA"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCA)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 749,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCPA"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCPA)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4697,
   "line": 751,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOCPO"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleBatchError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOCPO)} :JMP(handleBatchError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 753,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "OOG"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, OOG)}   :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 755,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidJump"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidJump)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 757,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidOpcode"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidOpcode)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 759,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "underflow"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, underflow)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 761,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "overflow"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, overflow)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 763,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidAddressCollision"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidAddressCollision)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 765,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidStaticTx"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidStaticTx)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 767,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidCodeSize"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidCodeSize)} :JMP(handleError)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4684,
   "line": 769,
   "cmdBefore": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onError"
      },
      {
       "op": "getVar",
       "varName": "invalidCodeStartsEF"
      }
     ]
    }
   ],
   "jmpAddrLabel": "handleError",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onError, invalidCodeStartsEF)} :JMP(handleError)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 3672,
   "call": 1,
   "line": 773,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "jmpAddrLabel": "revertTouched",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => SR         :MLOAD(initSR), CALL(revertTouched)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 775,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(originCTX)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 776,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4699,
   "useElseAddr": 1,
   "elseAddr": 4688,
   "line": 777,
   "jmpAddrLabel": "firstContextInvalid",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(firstContextInvalid)"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 778,
   "fileName": "utils.zkasm",
   "lineStr": "    A => CTX"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 781,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(retDataCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 782,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    CTX             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setGAS": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 783,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => GAS        :MLOAD(gasCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 784,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => SP         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 785,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => PC         :MLOAD(lastPC)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "line": 786,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(SP++)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 787,
   "offsetLabel": "depth",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(depth)"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "offset": 29,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 788,
   "offsetLabel": "depth",
   "useCTX": 0,
   "jmpAddrLabel": "readCode",
   "fileName": "utils.zkasm",
   "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 33,
   "mOp": 1,
   "mWR": 0,
   "line": 792,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onFinishTx"
      }
     ]
    },
    {
     "op": "functionCall",
     "funcName": "eventLog",
     "params": [
      {
       "op": "getVar",
       "varName": "onFinishBatch"
      }
     ]
    }
   ],
   "offsetLabel": "batchSR",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => SR         :MLOAD(batchSR)"
  },
  {
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 58,
   "line": 794,
   "jmpAddrLabel": "processTxsEnd",
   "fileName": "utils.zkasm",
   "lineStr": "    $${eventLog(onFinishBatch)} :JMP(processTxsEnd)"
  },
  {
   "CONST": "0",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 798,
   "offsetLabel": "gasRefund",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    0               :MSTORE(gasRefund)"
  },
  {
   "CONST": "0",
   "setGAS": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4254,
   "line": 799,
   "jmpAddrLabel": "sendGasSeq",
   "fileName": "utils.zkasm",
   "lineStr": "    0 => GAS        :JMP(sendGasSeq)"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "number",
      "num": "5"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "line": 807,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A >> 5} => E"
  },
  {
   "freeInTag": {
    "op": "bitand",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "number",
      "num": "31"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 809,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A & 0x1F} => C"
  },
  {
   "CONST": "65535",
   "inE": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 4704,
   "line": 810,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    0x0FFFF - E     :JMPN(stackUnderflow)"
  },
  {
   "CONST": "31",
   "inC": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4678,
   "useElseAddr": 1,
   "elseAddr": 4705,
   "line": 811,
   "jmpAddrLabel": "stackUnderflow",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    31-C            :JMPN(stackUnderflow)"
  },
  {
   "inE": "32",
   "inC": "1",
   "assert": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 812,
   "fileName": "utils.zkasm",
   "lineStr": "    E*32+C          :ASSERT, RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 34,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4707,
   "useElseAddr": 1,
   "elseAddr": 4726,
   "line": 823,
   "offsetLabel": "isDelegateCall",
   "useCTX": 1,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "endMoveBalances",
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                           :MLOAD(isDelegateCall), JMPNZ(endMoveBalances)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 825,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 827,
   "fileName": "utils.zkasm",
   "lineStr": "        %SMT_KEY_BALANCE => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 828,
   "fileName": "utils.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 830,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 832,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txValue)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4727,
   "useElseAddr": 1,
   "elseAddr": 4713,
   "line": 834,
   "jmpAddrLabel": "invalidCall",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "        $                               :LT,JMPC(invalidCall)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 1,
   "line": 836,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => D                          :SUB"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 10,
   "mOp": 1,
   "mWR": 0,
   "line": 838,
   "offsetLabel": "txSrcAddr",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 840,
   "fileName": "utils.zkasm",
   "lineStr": "        %SMT_KEY_BALANCE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 841,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 843,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 845,
   "fileName": "utils.zkasm",
   "lineStr": "        %SMT_KEY_BALANCE  => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "sRD": 1,
   "line": 847,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :SLOAD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 3,
   "mOp": 1,
   "mWR": 0,
   "line": 848,
   "offsetLabel": "txValue",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => B                          :MLOAD(txValue)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "bin": 1,
   "binOpcode": 0,
   "line": 849,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => D                          :ADD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 2,
   "mOp": 1,
   "mWR": 0,
   "line": 850,
   "offsetLabel": "storageAddr",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(storageAddr)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 852,
   "fileName": "utils.zkasm",
   "lineStr": "        %SMT_KEY_BALANCE  => B"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 853,
   "fileName": "utils.zkasm",
   "lineStr": "        0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 854,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => SR                         :SSTORE"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 856,
   "fileName": "utils.zkasm",
   "lineStr": "                                        :RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "offset": 17,
   "mOp": 1,
   "mWR": 0,
   "line": 860,
   "offsetLabel": "initSR",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => SR                         :MLOAD(initSR)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 29,
   "mOp": 1,
   "mWR": 0,
   "line": 861,
   "offsetLabel": "originCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(originCTX)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 862,
   "fileName": "utils.zkasm",
   "lineStr": "        0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4230,
   "useElseAddr": 1,
   "elseAddr": 4731,
   "line": 864,
   "jmpAddrLabel": "handleGas",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "        $                               :EQ,JMPC(handleGas)"
  },
  {
   "inA": "1",
   "setCTX": 1,
   "line": 865,
   "fileName": "utils.zkasm",
   "lineStr": "        A => CTX"
  },
  {
   "CONST": "0",
   "offset": 25,
   "mOp": 1,
   "mWR": 1,
   "line": 866,
   "offsetLabel": "retDataCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        0                               :MSTORE(retDataCTX)"
  },
  {
   "inCTX": "1",
   "offset": 20,
   "mOp": 1,
   "mWR": 1,
   "line": 867,
   "offsetLabel": "currentCTX",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        CTX                             :MSTORE(currentCTX)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 37,
   "mOp": 1,
   "mWR": 0,
   "line": 868,
   "offsetLabel": "gasCTX",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(gasCTX)"
  },
  {
   "inGAS": "1",
   "inA": "1",
   "setGAS": 1,
   "line": 869,
   "fileName": "utils.zkasm",
   "lineStr": "        GAS + A => GAS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSP": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 870,
   "offsetLabel": "lastSP",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => SP                         :MLOAD(lastSP)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setPC": 1,
   "offset": 31,
   "mOp": 1,
   "mWR": 0,
   "line": 871,
   "offsetLabel": "lastPC",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => PC                         :MLOAD(lastPC)"
  },
  {
   "CONST": "0",
   "isStack": 1,
   "isMem": 0,
   "ind": 0,
   "indRR": 0,
   "incStack": 1,
   "offset": 0,
   "useCTX": 1,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4215,
   "line": 872,
   "jmpAddrLabel": "readCode",
   "fileName": "utils.zkasm",
   "lineStr": "        0                               :MSTORE(SP++), JMP(readCode)"
  },
  {
   "inD": "1",
   "offset": 121,
   "mOp": 1,
   "mWR": 1,
   "line": 884,
   "offsetLabel": "pushBytes",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                           :MSTORE(pushBytes)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 885,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "0",
   "offset": 124,
   "mOp": 1,
   "mWR": 1,
   "line": 886,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    0                           :MSTORE(accumulator)"
  },
  {
   "inPC": "1",
   "inD": "1",
   "CONST": "-1",
   "setHASHPOS": 1,
   "line": 887,
   "fileName": "utils.zkasm",
   "lineStr": "    PC + D - 1 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "number",
      "num": "2"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 888,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A >> 2} => B"
  },
  {
   "inB": "1",
   "offset": 122,
   "mOp": 1,
   "mWR": 1,
   "line": 889,
   "offsetLabel": "numBlocks",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                           :MSTORE(numBlocks)"
  },
  {
   "freeInTag": {
    "op": "bitand",
    "values": [
     {
      "op": "getReg",
      "regName": "A"
     },
     {
      "op": "number",
      "num": "3"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 890,
   "fileName": "utils.zkasm",
   "lineStr": "    ${A & 0x03} => D"
  },
  {
   "inD": "1",
   "offset": 123,
   "mOp": 1,
   "mWR": 1,
   "line": 891,
   "offsetLabel": "leftBytes",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                           :MSTORE(leftBytes)"
  },
  {
   "inB": "4",
   "inD": "1",
   "assert": 1,
   "line": 892,
   "fileName": "utils.zkasm",
   "lineStr": "    B*4 + D                     :ASSERT"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 893,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "4",
   "setB": 1,
   "line": 894,
   "fileName": "utils.zkasm",
   "lineStr": "    0x04 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 895,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :LT"
  },
  {
   "CONST": "1",
   "assert": 1,
   "line": 896,
   "fileName": "utils.zkasm",
   "lineStr": "    1                           :ASSERT"
  },
  {
   "CONST": "0",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4753,
   "line": 897,
   "jmpAddrLabel": "readPushBlock",
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B                      :JMP(readPushBlock)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 122,
   "mOp": 1,
   "mWR": 0,
   "line": 900,
   "offsetLabel": "numBlocks",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :MLOAD(numBlocks)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4776,
   "useElseAddr": 1,
   "elseAddr": 4755,
   "line": 901,
   "jmpAddrLabel": "endPushInit",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                           :EQ, JMPC(endPushInit)"
  },
  {
   "inE": "1",
   "offset": 28,
   "mOp": 1,
   "mWR": 0,
   "line": 903,
   "offsetLabel": "contractHashId",
   "useCTX": 1,
   "fileName": "utils.zkasm",
   "lineStr": "    E                           :MLOAD(contractHashId)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 905,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                      :HASHP1(E)"
  },
  {
   "inHASHPOS": "1",
   "CONST": "-2",
   "setHASHPOS": 1,
   "line": 906,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS - 2 => HASHPOS"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 908,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :HASHP1(E)"
  },
  {
   "inHASHPOS": "1",
   "CONST": "-2",
   "setHASHPOS": 1,
   "line": 909,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS - 2 => HASHPOS"
  },
  {
   "inA": "256",
   "inC": "1",
   "setC": 1,
   "line": 910,
   "fileName": "utils.zkasm",
   "lineStr": "    A*256 + C => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 912,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :HASHP1(E)"
  },
  {
   "inHASHPOS": "1",
   "CONST": "-2",
   "setHASHPOS": 1,
   "line": 913,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS - 2 => HASHPOS"
  },
  {
   "inA": "65536",
   "inC": "1",
   "setC": 1,
   "line": 914,
   "fileName": "utils.zkasm",
   "lineStr": "    A*65536 + C => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 916,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                      :HASHP1(E)"
  },
  {
   "inHASHPOS": "1",
   "CONST": "-2",
   "setHASHPOS": 1,
   "line": 917,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS - 2 => HASHPOS"
  },
  {
   "inA": "16777216",
   "inC": "1",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4767,
   "line": 918,
   "jmpAddrLabel": "doRotate",
   "fileName": "utils.zkasm",
   "lineStr": "    A*16777216 + C => C         :JMP(doRotate)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4768,
   "line": 921,
   "jmpAddrLabel": "doRotateLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    B - 1 => A                  :JMP(doRotateLoop)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4769,
   "line": 924,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inA": "1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4772,
   "useElseAddr": 1,
   "elseAddr": 4770,
   "line": 925,
   "jmpAddrLabel": "endRotate",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    A                           :JMPN(endRotate)"
  },
  {
   "inROTL_C": "1",
   "setC": 1,
   "line": 926,
   "fileName": "utils.zkasm",
   "lineStr": "    ROTL_C => C"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4768,
   "line": 927,
   "jmpAddrLabel": "doRotateLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    A - 1 => A                  :JMP(doRotateLoop)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 124,
   "mOp": 1,
   "mWR": 0,
   "line": 930,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                      :MLOAD(accumulator)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setD": 1,
   "line": 931,
   "fileName": "utils.zkasm",
   "lineStr": "    C + D => D"
  },
  {
   "inD": "1",
   "offset": 124,
   "mOp": 1,
   "mWR": 1,
   "line": 932,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                           :MSTORE(accumulator)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4753,
   "line": 933,
   "jmpAddrLabel": "readPushBlock",
   "fileName": "utils.zkasm",
   "lineStr": "    B + 1 => B                  :JMP(readPushBlock)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 123,
   "mOp": 1,
   "mWR": 0,
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4800,
   "useElseAddr": 1,
   "elseAddr": 4777,
   "line": 936,
   "offsetLabel": "leftBytes",
   "useCTX": 0,
   "jmpAddrLabel": "finalPush",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                          :MLOAD(leftBytes), JMPZ(finalPush)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 937,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "0",
   "setB": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4779,
   "line": 938,
   "jmpAddrLabel": "endPushLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B                          :JMP(endPushLoop)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4780,
   "line": 941,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524284",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4781,
   "line": 942,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 123,
   "mOp": 1,
   "mWR": 0,
   "line": 944,
   "offsetLabel": "leftBytes",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                          :MLOAD(leftBytes)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4791,
   "useElseAddr": 1,
   "elseAddr": 4783,
   "line": 945,
   "jmpAddrLabel": "endPushFinal",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $                               :EQ, JMPC(endPushFinal)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP1": 1,
   "line": 947,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                          :HASHP1(E)"
  },
  {
   "inHASHPOS": "1",
   "CONST": "-2",
   "setHASHPOS": 1,
   "line": 948,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS - 2 => HASHPOS"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4786,
   "line": 949,
   "jmpAddrLabel": "computeFactorLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    B - 1 => A                      :JMP(computeFactorLoop)"
  },
  {
   "inA": "1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4789,
   "useElseAddr": 1,
   "elseAddr": 4787,
   "line": 952,
   "jmpAddrLabel": "computeFactorEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    A                               :JMPN(computeFactorEnd)"
  },
  {
   "inD": "256",
   "setD": 1,
   "line": 953,
   "fileName": "utils.zkasm",
   "lineStr": "    256*D => D"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4786,
   "line": 954,
   "jmpAddrLabel": "computeFactorLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    A - 1 => A                      :JMP(computeFactorLoop)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "setB": 1,
   "line": 957,
   "fileName": "utils.zkasm",
   "lineStr": "    B + 1 => B"
  },
  {
   "inD": "1",
   "inC": "1",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4779,
   "line": 958,
   "jmpAddrLabel": "endPushLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    D + C => C                      :JMP(endPushLoop)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 122,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4792,
   "line": 961,
   "offsetLabel": "numBlocks",
   "useCTX": 0,
   "jmpAddrLabel": "doRotate2",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                          :MLOAD(numBlocks), JMP(doRotate2)"
  },
  {
   "inB": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4793,
   "line": 964,
   "jmpAddrLabel": "doRotateLoop2",
   "fileName": "utils.zkasm",
   "lineStr": "    B - 1 => A                      :JMP(doRotateLoop2)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4794,
   "line": 967,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inA": "1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4797,
   "useElseAddr": 1,
   "elseAddr": 4795,
   "line": 968,
   "jmpAddrLabel": "endRotate2",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    A                           :JMPN(endRotate2)"
  },
  {
   "inROTL_C": "1",
   "setC": 1,
   "line": 969,
   "fileName": "utils.zkasm",
   "lineStr": "    ROTL_C => C"
  },
  {
   "inA": "1",
   "CONST": "-1",
   "setA": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4793,
   "line": 970,
   "jmpAddrLabel": "doRotateLoop2",
   "fileName": "utils.zkasm",
   "lineStr": "    A - 1 => A                  :JMP(doRotateLoop2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 124,
   "mOp": 1,
   "mWR": 0,
   "line": 973,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                      :MLOAD(accumulator)"
  },
  {
   "inC": "1",
   "inD": "1",
   "setD": 1,
   "line": 974,
   "fileName": "utils.zkasm",
   "lineStr": "    C + D => D"
  },
  {
   "inD": "1",
   "offset": 124,
   "mOp": 1,
   "mWR": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4800,
   "line": 975,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "jmpAddrLabel": "finalPush",
   "fileName": "utils.zkasm",
   "lineStr": "    D                           :MSTORE(accumulator), JMP(finalPush)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 124,
   "mOp": 1,
   "mWR": 0,
   "line": 978,
   "offsetLabel": "accumulator",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                      :MLOAD(accumulator)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 121,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 979,
   "offsetLabel": "pushBytes",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                      :MLOAD(pushBytes), RETURN"
  },
  {
   "CONST": "524088",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 255,
   "useElseAddr": 1,
   "elseAddr": 4803,
   "line": 986,
   "jmpAddrLabel": "handleOOCBatRLP",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 200   :JMPN(handleOOCBatRLP)"
  },
  {
   "inRR": "1",
   "offset": 100,
   "mOp": 1,
   "mWR": 1,
   "line": 987,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        RR                              :MSTORE(tmpZkPC)"
  },
  {
   "inA": "1",
   "offset": 125,
   "mOp": 1,
   "mWR": 1,
   "line": 988,
   "offsetLabel": "auxBytes",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        A                               :MSTORE(auxBytes)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 989,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        D                               :MSTORE(tmpVarD)"
  },
  {
   "CONST": "1",
   "setD": 1,
   "line": 990,
   "fileName": "utils.zkasm",
   "lineStr": "        1 => D"
  },
  {
   "CONST": "32",
   "inD": "-1",
   "setD": 1,
   "line": 993,
   "fileName": "utils.zkasm",
   "lineStr": "        32 - D => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 125,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 994,
   "offsetLabel": "auxBytes",
   "useCTX": 0,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :MLOAD(auxBytes), CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONSTL": "255",
   "setB": 1,
   "line": 996,
   "fileName": "utils.zkasm",
   "lineStr": "        0xFFn => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 997,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => A                          :AND"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 998,
   "fileName": "utils.zkasm",
   "lineStr": "        D => B"
  },
  {
   "CONST": "1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 97,
   "call": 1,
   "line": 1000,
   "jmpAddrLabel": "addBatchHashData",
   "fileName": "utils.zkasm",
   "lineStr": "        1 => D                          :CALL(addBatchHashData); in:[D: length of the hash]"
  },
  {
   "inB": "1",
   "setD": 1,
   "line": 1002,
   "fileName": "utils.zkasm",
   "lineStr": "        B => D"
  },
  {
   "CONST": "33",
   "inD": "-1",
   "setD": 1,
   "line": 1004,
   "fileName": "utils.zkasm",
   "lineStr": "        33 - D => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "line": 1005,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => B                          :MLOAD(tmpVarD)"
  },
  {
   "inD": "1",
   "inB": "-1",
   "CONST": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4807,
   "useElseAddr": 1,
   "elseAddr": 4817,
   "line": 1006,
   "jmpAddrLabel": "utilsAddBatchHashBytebyByte",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "        D - B - 1                       :JMPN(utilsAddBatchHashBytebyByte)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 100,
   "mOp": 1,
   "mWR": 0,
   "line": 1007,
   "offsetLabel": "tmpZkPC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "        $ => RR                         :MLOAD(tmpZkPC)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1008,
   "fileName": "utils.zkasm",
   "lineStr": "                                        :RETURN"
  },
  {
   "inA": "1",
   "offset": 95,
   "mOp": 1,
   "mWR": 1,
   "line": 1016,
   "offsetLabel": "tmpVarA3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A                               :MSTORE(tmpVarA3)"
  },
  {
   "inB": "1",
   "offset": 96,
   "mOp": 1,
   "mWR": 1,
   "line": 1017,
   "offsetLabel": "tmpVarB3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                               :MSTORE(tmpVarB3)"
  },
  {
   "inC": "1",
   "offset": 97,
   "mOp": 1,
   "mWR": 1,
   "line": 1018,
   "offsetLabel": "tmpVarC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                               :MSTORE(tmpVarC3)"
  },
  {
   "inD": "1",
   "offset": 98,
   "mOp": 1,
   "mWR": 1,
   "line": 1019,
   "offsetLabel": "tmpVarD3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D                               :MSTORE(tmpVarD3)"
  },
  {
   "inE": "1",
   "offset": 99,
   "mOp": 1,
   "mWR": 1,
   "line": 1020,
   "offsetLabel": "tmpVarE3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                               :MSTORE(tmpVarE3)"
  },
  {
   "inRR": "1",
   "offset": 101,
   "mOp": 1,
   "mWR": 1,
   "line": 1021,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                              :MSTORE(tmpZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 127,
   "mOp": 1,
   "mWR": 0,
   "line": 1024,
   "offsetLabel": "memOffsetLinearPoseidon",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                          :MLOAD(memOffsetLinearPoseidon)"
  },
  {
   "CONST": "1",
   "setC": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 1027,
   "jmpAddrLabel": "MLOADX",
   "fileName": "utils.zkasm",
   "lineStr": "    1 => C                          :CALL(MLOADX) ; in: [E: offset, C: lenght] out: [A: value , E: new offset]"
  },
  {
   "CONST": "31",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 1028,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    31 => D                         :CALL(SHRarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "CONST": "239",
   "inA": "-1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4829,
   "useElseAddr": 1,
   "elseAddr": 4830,
   "line": 1031,
   "jmpAddrLabel": "next",
   "elseAddrLabel": "checkBytecodeStartsEFend",
   "fileName": "utils.zkasm",
   "lineStr": "    %BYTECODE_STARTS_EF - A         :JMPNZ(checkBytecodeStartsEFend)"
  },
  {
   "CONST": "1",
   "offset": 126,
   "mOp": 1,
   "mWR": 1,
   "line": 1032,
   "offsetLabel": "startsWithEF",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    1                               :MSTORE(startsWithEF)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 101,
   "mOp": 1,
   "mWR": 0,
   "line": 1036,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 95,
   "mOp": 1,
   "mWR": 0,
   "line": 1037,
   "offsetLabel": "tmpVarA3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(tmpVarA3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 96,
   "mOp": 1,
   "mWR": 0,
   "line": 1038,
   "offsetLabel": "tmpVarB3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 97,
   "mOp": 1,
   "mWR": 0,
   "line": 1039,
   "offsetLabel": "tmpVarC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 98,
   "mOp": 1,
   "mWR": 0,
   "line": 1040,
   "offsetLabel": "tmpVarD3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 99,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1041,
   "offsetLabel": "tmpVarE3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpVarE3), RETURN"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 1050,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A                               :MSTORE(tmpVarA)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 1051,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                               :MSTORE(tmpVarB)"
  },
  {
   "inC": "1",
   "offset": 87,
   "mOp": 1,
   "mWR": 1,
   "line": 1052,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C                               :MSTORE(tmpVarC)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 1053,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E                               :MSTORE(tmpVarE)"
  },
  {
   "inRR": "1",
   "offset": 101,
   "mOp": 1,
   "mWR": 1,
   "line": 1054,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR                              :MSTORE(tmpZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 127,
   "mOp": 1,
   "mWR": 0,
   "line": 1055,
   "offsetLabel": "memOffsetLinearPoseidon",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                          :MLOAD(memOffsetLinearPoseidon)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 128,
   "mOp": 1,
   "mWR": 0,
   "line": 1056,
   "offsetLabel": "memSizeLinearPoseidon",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                          :MLOAD(memSizeLinearPoseidon)"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 1057,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4873,
   "useElseAddr": 1,
   "elseAddr": 4845,
   "line": 1058,
   "jmpAddrLabel": "hashPoseidonReturn",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    C                               :JMPZ(hashPoseidonReturn)"
  },
  {
   "inC": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1061,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(arithA)"
  },
  {
   "CONST": "56",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 1062,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    56              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 1063,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(arithRes1)"
  },
  {
   "CONST": "279619",
   "inCntPoseidonG": "-1",
   "setA": 1,
   "line": 1064,
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4674,
   "useElseAddr": 1,
   "elseAddr": 4850,
   "line": 1065,
   "jmpAddrLabel": "outOfCountersPoseidon",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :LT, JMPC(outOfCountersPoseidon)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 16,
   "mOp": 1,
   "mWR": 0,
   "line": 1068,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B                          :MLOAD(nextHashPId)"
  },
  {
   "inB": "1",
   "offset": 48,
   "mOp": 1,
   "mWR": 1,
   "line": 1069,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B                               :MSTORE(tmpContractHashId)"
  },
  {
   "inB": "1",
   "CONST": "1",
   "offset": 16,
   "mOp": 1,
   "mWR": 1,
   "line": 1070,
   "offsetLabel": "nextHashPId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B + 1                           :MSTORE(nextHashPId)"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 1071,
   "fileName": "utils.zkasm",
   "lineStr": "    32 => D"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 1072,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => HASHPOS"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4856,
   "line": 1075,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "CONST": "524286",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4857,
   "line": 1076,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
  },
  {
   "inC": "1",
   "JMPZ": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4870,
   "useElseAddr": 1,
   "elseAddr": 4858,
   "line": 1078,
   "jmpAddrLabel": "hashPoseidonEnd",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :JMPZ(hashPoseidonEnd)"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4865,
   "useElseAddr": 1,
   "elseAddr": 4859,
   "line": 1079,
   "jmpAddrLabel": "hashPoseidonFinal",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    C - 32          :JMPN(hashPoseidonFinal)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4421,
   "call": 1,
   "line": 1080,
   "jmpAddrLabel": "MLOAD32",
   "fileName": "utils.zkasm",
   "lineStr": "                    :CALL(MLOAD32)"
  },
  {
   "inE": "1",
   "setB": 1,
   "line": 1081,
   "fileName": "utils.zkasm",
   "lineStr": "    E => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 48,
   "mOp": 1,
   "mWR": 0,
   "line": 1082,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP": 1,
   "line": 1083,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :HASHP(E)"
  },
  {
   "inB": "1",
   "setE": 1,
   "line": 1084,
   "fileName": "utils.zkasm",
   "lineStr": "    B => E"
  },
  {
   "inC": "1",
   "CONST": "-32",
   "setC": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4855,
   "line": 1085,
   "jmpAddrLabel": "hashPoseidonLoop",
   "fileName": "utils.zkasm",
   "lineStr": "    C - 32 => C     :JMP(hashPoseidonLoop)"
  },
  {
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4418,
   "call": 1,
   "line": 1089,
   "jmpAddrLabel": "MLOADX",
   "fileName": "utils.zkasm",
   "lineStr": "                    :CALL(MLOADX)"
  },
  {
   "CONST": "32",
   "inC": "-1",
   "setD": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4577,
   "call": 1,
   "line": 1090,
   "jmpAddrLabel": "SHRarith",
   "fileName": "utils.zkasm",
   "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 48,
   "mOp": 1,
   "mWR": 0,
   "line": 1091,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
  },
  {
   "inC": "1",
   "setD": 1,
   "line": 1092,
   "fileName": "utils.zkasm",
   "lineStr": "    C => D"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashP": 1,
   "line": 1093,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :HASHP(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 48,
   "mOp": 1,
   "mWR": 0,
   "line": 1096,
   "offsetLabel": "tmpContractHashId",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPLen": 1,
   "line": 1097,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS         :HASHPLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashPDigest": 1,
   "line": 1098,
   "cmdAfter": [
    {
     "op": "functionCall",
     "funcName": "saveContractBytecode",
     "params": [
      {
       "op": "getReg",
       "regName": "E"
      }
     ]
    }
   ],
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :HASHPDIGEST(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 101,
   "mOp": 1,
   "mWR": 0,
   "line": 1102,
   "offsetLabel": "tmpZkPC2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC2)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 1103,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 1104,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 87,
   "mOp": 1,
   "mWR": 0,
   "line": 1105,
   "offsetLabel": "tmpVarC",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 89,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1106,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpVarE), RETURN"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 1113,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "CONSTL": "1461501637330902918203684832716283019655932542975",
   "setB": 1,
   "line": 1114,
   "fileName": "utils.zkasm",
   "lineStr": "    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 5,
   "line": 1115,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :AND"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1116,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB), RETURN"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 30,
   "mOp": 1,
   "mWR": 0,
   "line": 1121,
   "offsetLabel": "cntKeccakPreProcess",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A                              :MLOAD(cntKeccakPreProcess)"
  },
  {
   "CONST": "2375",
   "inCntKeccakF": "-1",
   "inA": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4669,
   "useElseAddr": 1,
   "elseAddr": 4884,
   "line": 1122,
   "jmpAddrLabel": "outOfCountersKeccak",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1:JMPN(outOfCountersKeccak)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1125,
   "fileName": "utils.zkasm",
   "lineStr": "    %LAST_TX_STORAGE_POS => C"
  },
  {
   "CONSTL": "1554098974",
   "setA": 1,
   "line": 1126,
   "fileName": "utils.zkasm",
   "lineStr": "    %ADDRESS_SYSTEM => A"
  },
  {
   "CONST": "3",
   "setB": 1,
   "line": 1127,
   "fileName": "utils.zkasm",
   "lineStr": "    %SMT_KEY_SC_STORAGE => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 34,
   "mOp": 1,
   "mWR": 0,
   "line": 1128,
   "offsetLabel": "txCount",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D                              :MLOAD(txCount)"
  },
  {
   "inD": "1",
   "CONST": "1",
   "setD": 1,
   "offset": 34,
   "mOp": 1,
   "mWR": 1,
   "line": 1130,
   "offsetLabel": "txCount",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D + 1 => D                          :MSTORE(txCount)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "line": 1131,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => SR                             :SSTORE"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 1134,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "32",
   "setD": 1,
   "line": 1135,
   "fileName": "utils.zkasm",
   "lineStr": "    32 => D"
  },
  {
   "CONST": "0",
   "setHASHPOS": 1,
   "line": 1136,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => HASHPOS ; A new hash with position 0 is started"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 0,
   "line": 1137,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E                              :MLOAD(lastHashKIdUsed)"
  },
  {
   "inE": "1",
   "CONST": "1",
   "setE": 1,
   "offset": 15,
   "mOp": 1,
   "mWR": 1,
   "line": 1138,
   "offsetLabel": "lastHashKIdUsed",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E + 1 => E                          :MSTORE(lastHashKIdUsed)"
  },
  {
   "inA": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 1139,
   "fileName": "utils.zkasm",
   "lineStr": "    A                                   :HASHK(E)"
  },
  {
   "CONST": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashK": 1,
   "line": 1140,
   "fileName": "utils.zkasm",
   "lineStr": "    %STATE_ROOT_STORAGE_POS             :HASHK(E)"
  },
  {
   "inHASHPOS": "1",
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKLen": 1,
   "line": 1141,
   "fileName": "utils.zkasm",
   "lineStr": "    HASHPOS                             :HASHKLEN(E)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "ind": 1,
   "indRR": 0,
   "offset": 0,
   "hashKDigest": 1,
   "line": 1142,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C                              :HASHKDIGEST(E)"
  },
  {
   "CONSTL": "1554098974",
   "setA": 1,
   "line": 1143,
   "fileName": "utils.zkasm",
   "lineStr": "    %ADDRESS_SYSTEM => A"
  },
  {
   "inSR": "1",
   "setD": 1,
   "line": 1144,
   "fileName": "utils.zkasm",
   "lineStr": "    SR => D"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setSR": 1,
   "sWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1145,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => SR                             :SSTORE, RETURN"
  },
  {
   "CONST": "262141",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 4903,
   "line": 1154,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 3      :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524285",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4904,
   "line": 1155,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3    :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4905,
   "line": 1156,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
  },
  {
   "inRR": "1",
   "offset": 103,
   "mOp": 1,
   "mWR": 1,
   "line": 1158,
   "offsetLabel": "tmpZkPC4",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC4)"
  },
  {
   "inA": "1",
   "offset": 85,
   "mOp": 1,
   "mWR": 1,
   "line": 1159,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(tmpVarA)"
  },
  {
   "inB": "1",
   "offset": 86,
   "mOp": 1,
   "mWR": 1,
   "line": 1160,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB)"
  },
  {
   "inD": "1",
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "line": 1161,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    D               :MSTORE(tmpVarD)"
  },
  {
   "inE": "1",
   "offset": 89,
   "mOp": 1,
   "mWR": 1,
   "line": 1162,
   "cmdAfter": [
    {
     "op": "setVar",
     "values": [
      {
       "op": "declareVar",
       "varName": "_mulMod"
      },
      {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      }
     ]
    }
   ],
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(tmpVarE)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1179,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "inB": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 1182,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1183,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 1185,
   "fileName": "utils.zkasm",
   "lineStr": "    2 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 2,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4941,
   "useElseAddr": 1,
   "elseAddr": 4915,
   "line": 1186,
   "jmpAddrLabel": "zeroOneMod",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :LT, JMPC(zeroOneMod)"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "div",
      "values": [
       {
        "op": "getVar",
        "varName": "_mulMod"
       },
       {
        "op": "getReg",
        "regName": "C"
       }
      ]
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 1190,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(_mulMod / C) >> 256} => B     ; k.h"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "cond",
    "params": [
     {
      "op": "eq",
      "values": [
       {
        "op": "getReg",
        "regName": "B"
       },
       {
        "op": "number",
        "num": "0"
       }
      ]
     }
    ]
   },
   "inFREE": "1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4932,
   "useElseAddr": 1,
   "elseAddr": 4917,
   "line": 1192,
   "jmpAddrLabel": "mulModNoKH",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    ${cond(B == 0)}  :JMPN(mulModNoKH)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1201,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A ; Modulus"
  },
  {
   "CONST": "0",
   "setC": 1,
   "setD": 1,
   "line": 1202,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C, D"
  },
  {
   "freeInTag": {
    "op": "mul",
    "values": [
     {
      "op": "getReg",
      "regName": "B"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 1,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 1203,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    ${B * A} => E   :MSTORE(tmpVarD), ARITH ; D2"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "div",
      "values": [
       {
        "op": "getVar",
        "varName": "_mulMod"
       },
       {
        "op": "getReg",
        "regName": "A"
       }
      ]
     },
     {
      "op": "shl",
      "values": [
       {
        "op": "number",
        "num": "1"
       },
       {
        "op": "number",
        "num": "256"
       }
      ]
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 1210,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(_mulMod / A) % (1 << 256)} => B   ; k.l"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulMod"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 1211,
   "fileName": "utils.zkasm",
   "lineStr": "    ${_mulMod % A} => C        ; mulModResult"
  },
  {
   "freeInTag": {
    "op": "shr",
    "values": [
     {
      "op": "add",
      "values": [
       {
        "op": "mul",
        "values": [
         {
          "op": "getReg",
          "regName": "B"
         },
         {
          "op": "getReg",
          "regName": "A"
         }
        ]
       },
       {
        "op": "getReg",
        "regName": "C"
       }
      ]
     },
     {
      "op": "number",
      "num": "256"
     }
    ]
   },
   "inFREE": "1",
   "setD": 1,
   "line": 1212,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(B * A + C) >> 256} => D ; D1"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 1213,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $               :MLOAD(arithRes1), ARITH"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 1219,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B          ; modulus"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1220,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A          ; mulModResult"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 1221,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :LT"
  },
  {
   "CONST": "1",
   "assert": 1,
   "line": 1222,
   "fileName": "utils.zkasm",
   "lineStr": "    1               :ASSERT"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 1225,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A ; D1"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "line": 1226,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarD) ;D2"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 0,
   "line": 1227,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :ADD"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 118,
   "mOp": 1,
   "mWR": 0,
   "assert": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4942,
   "line": 1228,
   "offsetLabel": "arithOverflow",
   "useCTX": 0,
   "jmpAddrLabel": "utilMULMODend",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :MLOAD(arithOverflow), ASSERT, JMP(utilMULMODend)"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1235,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A ; Modulus on A"
  },
  {
   "freeInTag": {
    "op": "div",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulMod"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setB": 1,
   "line": 1236,
   "fileName": "utils.zkasm",
   "lineStr": "    ${(_mulMod / A)} => B   ; k"
  },
  {
   "freeInTag": {
    "op": "mod",
    "values": [
     {
      "op": "getVar",
      "varName": "_mulMod"
     },
     {
      "op": "getReg",
      "regName": "A"
     }
    ]
   },
   "inFREE": "1",
   "setC": 1,
   "line": 1237,
   "fileName": "utils.zkasm",
   "lineStr": "    ${_mulMod % A} => C     ; mulModResult"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 118,
   "mOp": 1,
   "mWR": 0,
   "line": 1238,
   "offsetLabel": "arithOverflow",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D         :MLOAD(arithOverflow)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "arithEq0": 1,
   "arithEq1": 0,
   "arithEq2": 0,
   "line": 1239,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $              :MLOAD(arithRes1), ARITH"
  },
  {
   "inA": "1",
   "setB": 1,
   "line": 1241,
   "fileName": "utils.zkasm",
   "lineStr": "    A => B          ; modulus"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1242,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A          ; mulModResult"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "bin": 1,
   "binOpcode": 2,
   "line": 1243,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :LT"
  },
  {
   "CONST": "1",
   "assert": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4942,
   "line": 1244,
   "jmpAddrLabel": "utilMULMODend",
   "fileName": "utils.zkasm",
   "lineStr": "    1               :ASSERT, JMP(utilMULMODend)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1247,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 85,
   "mOp": 1,
   "mWR": 0,
   "line": 1250,
   "offsetLabel": "tmpVarA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(tmpVarA)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 86,
   "mOp": 1,
   "mWR": 0,
   "line": 1251,
   "offsetLabel": "tmpVarB",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 88,
   "mOp": 1,
   "mWR": 0,
   "line": 1252,
   "offsetLabel": "tmpVarD",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(tmpVarD)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 103,
   "mOp": 1,
   "mWR": 0,
   "line": 1253,
   "offsetLabel": "tmpZkPC4",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC4)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 89,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1254,
   "offsetLabel": "tmpVarE",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpVarE), RETURN"
  },
  {
   "inRR": "1",
   "offset": 102,
   "mOp": 1,
   "mWR": 1,
   "line": 1260,
   "offsetLabel": "tmpZkPC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    RR              :MSTORE(tmpZkPC3)"
  },
  {
   "inB": "1",
   "offset": 96,
   "mOp": 1,
   "mWR": 1,
   "line": 1261,
   "offsetLabel": "tmpVarB3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    B               :MSTORE(tmpVarB3)"
  },
  {
   "inC": "1",
   "offset": 97,
   "mOp": 1,
   "mWR": 1,
   "line": 1262,
   "offsetLabel": "tmpVarC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(tmpVarC3)"
  },
  {
   "inE": "1",
   "offset": 99,
   "mOp": 1,
   "mWR": 1,
   "line": 1263,
   "offsetLabel": "tmpVarE3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(tmpVarE3)"
  },
  {
   "inA": "1",
   "setE": 1,
   "line": 1265,
   "fileName": "utils.zkasm",
   "lineStr": "    A => E"
  },
  {
   "inD": "1",
   "setB": 1,
   "line": 1267,
   "fileName": "utils.zkasm",
   "lineStr": "    D => B"
  },
  {
   "CONST": "0",
   "setA": 1,
   "line": 1268,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4979,
   "useElseAddr": 1,
   "elseAddr": 4955,
   "line": 1270,
   "jmpAddrLabel": "expAD0",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(expAD0)"
  },
  {
   "inE": "1",
   "setA": 1,
   "line": 1272,
   "fileName": "utils.zkasm",
   "lineStr": "    E => A"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1273,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4977,
   "useElseAddr": 1,
   "elseAddr": 4958,
   "line": 1275,
   "jmpAddrLabel": "expA0D",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(expA0D)"
  },
  {
   "CONST": "1",
   "setC": 1,
   "line": 1276,
   "fileName": "utils.zkasm",
   "lineStr": "    1 => C"
  },
  {
   "CONST": "262141",
   "inCntArith": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4672,
   "useElseAddr": 1,
   "elseAddr": 4960,
   "line": 1283,
   "jmpAddrLabel": "outOfCountersArith",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 3      :JMPN(outOfCountersArith)"
  },
  {
   "CONST": "524283",
   "inCntBinary": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4670,
   "useElseAddr": 1,
   "elseAddr": 4961,
   "line": 1284,
   "jmpAddrLabel": "outOfCountersBinary",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 5    :JMPN(outOfCountersBinary)"
  },
  {
   "CONST": "8388308",
   "inSTEP": "-1",
   "JMPN": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4668,
   "useElseAddr": 1,
   "elseAddr": 4962,
   "line": 1285,
   "jmpAddrLabel": "outOfCountersStep",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
  },
  {
   "inD": "1",
   "setA": 1,
   "line": 1288,
   "fileName": "utils.zkasm",
   "lineStr": "    D => A"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1289,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4981,
   "useElseAddr": 1,
   "elseAddr": 4965,
   "line": 1291,
   "jmpAddrLabel": "expADend",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(expADend)"
  },
  {
   "inA": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1292,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    A               :MSTORE(arithA)"
  },
  {
   "CONST": "2",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4537,
   "call": 1,
   "line": 1294,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "divARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    2               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setD": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 1296,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => D          :MLOAD(arithRes1)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setA": 1,
   "offset": 117,
   "mOp": 1,
   "mWR": 0,
   "line": 1298,
   "offsetLabel": "arithRes2",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => A          :MLOAD(arithRes2)"
  },
  {
   "CONST": "0",
   "setB": 1,
   "line": 1299,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => B"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "bin": 1,
   "binOpcode": 4,
   "JMPC": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4974,
   "useElseAddr": 1,
   "elseAddr": 4971,
   "line": 1301,
   "jmpAddrLabel": "expADloop0",
   "elseAddrLabel": "next",
   "fileName": "utils.zkasm",
   "lineStr": "    $               :EQ,JMPC(expADloop0)"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1302,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inC": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 1304,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    C               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "line": 1306,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(arithRes1)"
  },
  {
   "inE": "1",
   "offset": 114,
   "mOp": 1,
   "mWR": 1,
   "line": 1309,
   "offsetLabel": "arithA",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(arithA)"
  },
  {
   "inE": "1",
   "offset": 115,
   "mOp": 1,
   "mWR": 1,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "useJmpAddr": 1,
   "jmpAddr": 4527,
   "call": 1,
   "line": 1311,
   "offsetLabel": "arithB",
   "useCTX": 0,
   "jmpAddrLabel": "mulARITH",
   "fileName": "utils.zkasm",
   "lineStr": "    E               :MSTORE(arithB), CALL(mulARITH)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 116,
   "mOp": 1,
   "mWR": 0,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4959,
   "line": 1313,
   "offsetLabel": "arithRes1",
   "useCTX": 0,
   "jmpAddrLabel": "expADloop",
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(arithRes1), JMP(expADloop)"
  },
  {
   "CONST": "0",
   "setC": 1,
   "line": 1316,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => C"
  },
  {
   "CONST": "0",
   "setD": 1,
   "JMP": 1,
   "useJmpAddr": 1,
   "jmpAddr": 4981,
   "line": 1317,
   "jmpAddrLabel": "expADend",
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D          :JMP(expADend)"
  },
  {
   "CONST": "1",
   "setC": 1,
   "line": 1320,
   "fileName": "utils.zkasm",
   "lineStr": "    1 => C"
  },
  {
   "CONST": "0",
   "setD": 1,
   "line": 1321,
   "fileName": "utils.zkasm",
   "lineStr": "    0 => D"
  },
  {
   "inC": "1",
   "setA": 1,
   "line": 1324,
   "fileName": "utils.zkasm",
   "lineStr": "    C => A"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setB": 1,
   "offset": 96,
   "mOp": 1,
   "mWR": 0,
   "line": 1325,
   "offsetLabel": "tmpVarB3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => B          :MLOAD(tmpVarB3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setC": 1,
   "offset": 97,
   "mOp": 1,
   "mWR": 0,
   "line": 1326,
   "offsetLabel": "tmpVarC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => C          :MLOAD(tmpVarC3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setRR": 1,
   "offset": 102,
   "mOp": 1,
   "mWR": 0,
   "line": 1327,
   "offsetLabel": "tmpZkPC3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => RR         :MLOAD(tmpZkPC3)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "setE": 1,
   "offset": 99,
   "mOp": 1,
   "mWR": 0,
   "JMP": 0,
   "JMPC": 0,
   "JMPN": 0,
   "call": 0,
   "return": 1,
   "line": 1328,
   "offsetLabel": "tmpVarE3",
   "useCTX": 0,
   "fileName": "utils.zkasm",
   "lineStr": "    $ => E          :MLOAD(tmpVarE3), RETURN"
  }
 ],
 "labels": {
  "start": 0,
  "setGlobalExitRoot": 15,
  "skipSetGlobalExitRoot": 28,
  "txLoopRLP": 46,
  "endCheckRLP": 51,
  "txLoop": 52,
  "processTxEnd": 56,
  "processTxFinished": 57,
  "processTxsEnd": 58,
  "finalizeExecution": 94,
  "finalWait": 95,
  "addBatchHashData": 97,
  "getTxBytes": 103,
  "addHashTx": 108,
  "loadTx_rlp": 114,
  "longList": 122,
  "shortList": 125,
  "endList": 126,
  "nonceREAD": 132,
  "nonce0": 137,
  "shortNonce": 138,
  "endNonce": 141,
  "gasPriceREAD": 142,
  "gasPrice0": 147,
  "shortGasPrice": 148,
  "endGasPrice": 152,
  "gasLimitREAD": 153,
  "gasLimit0": 158,
  "shortGasLimit": 159,
  "endGasLimit": 163,
  "toREAD": 164,
  "noTo": 170,
  "shortTo": 171,
  "endTo": 175,
  "valueREAD": 175,
  "value0": 180,
  "shortValue": 182,
  "endValue": 186,
  "dataREAD": 187,
  "veryShortData": 196,
  "shortData": 199,
  "longData": 202,
  "readData": 207,
  "readDataFinal": 212,
  "endData": 217,
  "chainREAD": 220,
  "chainId0": 225,
  "shortChainId": 226,
  "endChainId": 230,
  "setPreEIP155Flag": 235,
  "sizeVerification": 236,
  "sizeVerificationSuccess": 239,
  "rREADTx": 240,
  "sREADTx": 243,
  "vREADTx": 246,
  "handleOOCBatRLP": 255,
  "handleOOCKatRLP": 256,
  "handleOOCatRLP": 257,
  "invalidTxRLP": 258,
  "appendTxs": 262,
  "finalAppendTxs": 267,
  "endAppendTxs": 272,
  "opADD": 273,
  "opMUL": 281,
  "opSUB": 292,
  "opDIV": 301,
  "opSDIV": 313,
  "opSDIVNeg": 328,
  "opMOD": 334,
  "opSMOD": 346,
  "opSMODNeg": 361,
  "opADDMOD": 364,
  "AddModJumpCarry": 375,
  "zeroOneAddMod": 387,
  "opMULMOD": 388,
  "opEXP": 396,
  "opSIGNEXTEND": 408,
  "opSIGNEXTENDPositive": 432,
  "opSIGNEXTENDEnd": 435,
  "opBLOCKHASH": 436,
  "opBLOCKHASHzero": 458,
  "opCOINBASE": 459,
  "opTIMESTAMP": 464,
  "opNUMBER": 469,
  "opDIFFICULTY": 474,
  "opGASLIMIT": 479,
  "opCHAINID": 484,
  "opBASEFEE": 489,
  "opLT": 493,
  "opGT": 501,
  "opSLT": 509,
  "opSGT": 517,
  "opEQ": 525,
  "opISZERO": 533,
  "opAND": 540,
  "opOR": 548,
  "opXOR": 556,
  "opNOT": 564,
  "opBYTE": 571,
  "opBYTE0": 585,
  "opSHR": 586,
  "opSHL": 595,
  "opSAR": 605,
  "positiveValue": 620,
  "negativeValue": 623,
  "endSAR": 628,
  "maxShiftSAR": 631,
  "endMaxShiftSAR": 634,
  "opADDRESS": 635,
  "opADDRESSdeploy": 639,
  "opADDRESSend": 640,
  "opSELFBALANCE": 642,
  "opBALANCE": 650,
  "opORIGIN": 658,
  "opCALLER": 663,
  "opCALLVALUE": 668,
  "opGASPRICE": 673,
  "opGAS": 678,
  "opSTOP": 682,
  "opSTOPend": 688,
  "opCREATE": 699,
  "opCreateFail": 763,
  "opCALL": 765,
  "opCALL2": 780,
  "opCALLend": 804,
  "opCALLCODE": 838,
  "opCALLCODEend": 870,
  "opRETURN": 904,
  "preRETURN32": 930,
  "opRETURN32": 931,
  "opRETURNfinal": 945,
  "opRETURNend": 950,
  "opRETURNdeploy": 957,
  "opRETURNcreate": 960,
  "opRETURNcreateEnd": 986,
  "opDELEGATECALL": 995,
  "opDELEGATECALLend": 1051,
  "opCREATE2": 1055,
  "opSTATICCALL": 1126,
  "opREVERT": 1178,
  "preREVERT32": 1201,
  "opREVERT32": 1202,
  "opREVERTfinal": 1214,
  "opREVERTend": 1219,
  "opSENDALL": 1226,
  "opSENDALL2": 1245,
  "opSENDALLend": 1267,
  "opINVALID": 1278,
  "opSHA3": 1279,
  "opSHA3Loop": 1309,
  "opSHA3Final": 1319,
  "opSHA3End": 1324,
  "opJUMP": 1328,
  "opJUMPI": 1333,
  "checkJumpDest": 1341,
  "checkJumpDestDeployment": 1350,
  "checkJumpDestDeploymentCreate": 1358,
  "opPC": 1370,
  "opJUMPDEST": 1374,
  "opLOG0": 1376,
  "opLOG1": 1394,
  "opLOG2": 1412,
  "opLOG3": 1430,
  "opLOG4": 1448,
  "opLOGLoop": 1466,
  "opLOGFinal": 1472,
  "opSaveTopicsInit": 1474,
  "opSaveTopicsLoop": 1475,
  "opPUSH1": 1481,
  "opPUSH2": 1483,
  "opPUSH3": 1485,
  "opPUSH4": 1487,
  "opPUSH5": 1489,
  "opPUSH6": 1491,
  "opPUSH7": 1493,
  "opPUSH8": 1495,
  "opPUSH9": 1497,
  "opPUSH10": 1499,
  "opPUSH11": 1501,
  "opPUSH12": 1503,
  "opPUSH13": 1505,
  "opPUSH14": 1507,
  "opPUSH15": 1509,
  "opPUSH16": 1511,
  "opPUSH17": 1513,
  "opPUSH18": 1515,
  "opPUSH19": 1517,
  "opPUSH20": 1519,
  "opPUSH21": 1521,
  "opPUSH22": 1523,
  "opPUSH23": 1525,
  "opPUSH24": 1527,
  "opPUSH25": 1529,
  "opPUSH26": 1531,
  "opPUSH27": 1533,
  "opPUSH28": 1535,
  "opPUSH29": 1537,
  "opPUSH30": 1539,
  "opPUSH31": 1541,
  "opPUSH32": 1543,
  "opAuxPUSHA": 1545,
  "opAuxPUSHA2": 1552,
  "opAuxPUSHB": 1557,
  "opAuxPUSHBloop": 1563,
  "opAuxPUSHBend": 1576,
  "opAuxPUSHBcreate": 1579,
  "opDUP1": 1590,
  "opDUP2": 1597,
  "opDUP3": 1603,
  "opDUP4": 1609,
  "opDUP5": 1615,
  "opDUP6": 1621,
  "opDUP7": 1627,
  "opDUP8": 1633,
  "opDUP9": 1639,
  "opDUP10": 1645,
  "opDUP11": 1651,
  "opDUP12": 1657,
  "opDUP13": 1663,
  "opDUP14": 1669,
  "opDUP15": 1675,
  "opDUP16": 1681,
  "opSWAP1": 1687,
  "opSWAP2": 1694,
  "opSWAP3": 1701,
  "opSWAP4": 1708,
  "opSWAP5": 1715,
  "opSWAP6": 1722,
  "opSWAP7": 1729,
  "opSWAP8": 1736,
  "opSWAP9": 1743,
  "opSWAP10": 1750,
  "opSWAP11": 1757,
  "opSWAP12": 1764,
  "opSWAP13": 1771,
  "opSWAP14": 1778,
  "opSWAP15": 1785,
  "opSWAP16": 1792,
  "opPOP": 1799,
  "opMLOAD": 1802,
  "opMSTORE": 1813,
  "opMSTORE8": 1826,
  "opMSIZE": 1841,
  "MSIZEend": 1855,
  "opSLOAD": 1857,
  "opSSTORE": 1866,
  "deploymentSSTORE": 1878,
  "opSSTOREinit": 1879,
  "opSSTOREdif": 1891,
  "opSSTOREdifA": 1898,
  "opSSTOREdifAB": 1902,
  "opSSTOREdifA1": 1909,
  "opSSTOREdifA12": 1914,
  "opSSTOREdifA2": 1919,
  "opSSTOREdifB": 1921,
  "opSSTOREend": 1928,
  "mloadContract": 1930,
  "opSSTOREsr": 1931,
  "opCALLDATALOAD": 1934,
  "opCALLDATALOAD2": 1952,
  "CALLDATALOADreturn0": 1961,
  "opCALLDATASIZE": 1962,
  "opCALLDATASIZEdep": 1968,
  "opCALLDATACOPY": 1970,
  "opCALLDATACOPYX0": 1995,
  "opCALLDATACOPYinit": 1996,
  "opCALLDATACOPYfinal": 2023,
  "opCALLDATACOPY0": 2043,
  "opCALLDATACOPY320": 2046,
  "opCALLDATACOPYxor": 2048,
  "opCALLDATACOPYcheckLen": 2051,
  "opCALLDATACOPYend": 2054,
  "opCODESIZE": 2055,
  "opCODESIZEdep": 2065,
  "opCODECOPY": 2068,
  "opCODECOPY2": 2091,
  "opCODECOPYinit": 2100,
  "opCODECOPYLoadBytes": 2117,
  "readZero": 2122,
  "readValueBytecode": 2123,
  "opEXTCODESIZE": 2125,
  "opEXTCODECOPY": 2135,
  "opEXTCODECOPY2": 2164,
  "opEXTCODECOPYCheckHash": 2170,
  "opEXTCODECOPYCheckHashLoop": 2194,
  "opEXTCODECOPYCheckHashLoopEnd": 2198,
  "opEXTCODECOPYCheckHashEnd": 2201,
  "opEXTCODECOPYinit": 2202,
  "opEXTCODECOPYfinal": 2210,
  "opRETURNDATASIZE": 2214,
  "endOpRETURNDATASIZE": 2223,
  "opRETURNDATACOPY": 2225,
  "opRETURNDATACOPYinit": 2258,
  "opRETURNDATACOPYfinal": 2269,
  "opRETURNDATACOPYEmpty": 2276,
  "opEXTCODEHASH": 2278,
  "mapping_opcodes": 2288,
  "funcECRECOVER": 2544,
  "endECRECOVER": 2560,
  "IDENTITY": 2563,
  "IDENTITYinit": 2584,
  "IDENTITYfinal": 2593,
  "IDENTITYreturn": 2598,
  "IDENTITYreturn2": 2604,
  "IDENTITYreturnLoop": 2606,
  "IDENTITYreturnFinal": 2620,
  "IDENTITYend": 2625,
  "MODEXP": 2627,
  "MODEXPreturn0": 2651,
  "MODEXPfinal": 2653,
  "MODEXPstoreX": 2662,
  "MODEXPgas": 2663,
  "MODEXPgas2": 2667,
  "MODEXPgas3": 2674,
  "MODEXPgas4": 2677,
  "MODEXPgasEnd": 2681,
  "MODEXPend": 2686,
  "preEnd": 2687,
  "preEndFail": 2692,
  "selectorPrecompiled": 2696,
  "ecrecover_precompiled": 2705,
  "ecrecover_tx": 2706,
  "ecrecover_store_args": 2707,
  "ecrecover_v_not_eq_1b": 2731,
  "ecrecover_v_ok": 2734,
  "ecrecover_has_sqrt": 2744,
  "ecrecover_v_y2_same_parity": 2751,
  "ecrecover_r_is_zero": 2782,
  "ecrecover_r_is_too_big": 2783,
  "ecrecover_s_is_zero": 2784,
  "ecrecover_s_is_too_big": 2785,
  "ecrecover_v_not_eq_1b1c": 2786,
  "ecrecover_not_exists_sqrt_of_y": 2787,
  "ecrecover_error": 2788,
  "ecrecover_end": 2789,
  "addFpEc": 2791,
  "sqFpEc": 2798,
  "mulFpEc": 2806,
  "mulFnEc": 2813,
  "invFpEc": 2820,
  "invFpEc_normalized": 2823,
  "invFnEc": 2832,
  "invFnEc_normalized": 2835,
  "sqrtFpEc": 2844,
  "sqrtFpEc_End": 2857,
  "checkSqrtFpEc": 2858,
  "mulPointEc": 3614,
  "mulPointEc_loop": 3625,
  "mulPointEc_k10": 3627,
  "mulPointEc_k10_k20": 3629,
  "mulPointEc_k11": 3631,
  "mulPointEc_k11_k20": 3633,
  "mulPointEc_k11_k21": 3635,
  "mulPointEc_k10_k21": 3637,
  "mulPointEc_p2_loaded": 3639,
  "mulPointEc_after_add": 3648,
  "mulPointEc_p3_assignment": 3649,
  "mulPointEc_square": 3652,
  "mulPointEc_x_equals_before_add": 3658,
  "mulPointEc_same_point_to_add": 3663,
  "mulPointEc_end_loop": 3667,
  "initTouchedTree": 3669,
  "checkpointTouched": 3670,
  "revertTouched": 3672,
  "isColdAddress": 3674,
  "checkWarmed": 3681,
  "markWarmAddress": 3687,
  "finishColdAddress": 3689,
  "finishColdPrecompiled": 3694,
  "isColdSlot": 3698,
  "markWarmSlot": 3706,
  "finishColdSlot": 3709,
  "exp_num": 3714,
  "processTx": 3970,
  "checkAndSaveFrom": 3978,
  "endCheckChainId": 3989,
  "addDeploymentGasCost": 4011,
  "getCalldataGasCost": 4012,
  "addGas": 4015,
  "loopBytes": 4017,
  "add4Gas": 4025,
  "add16Gas": 4026,
  "endCalldataIntrinsicGas": 4027,
  "txType": 4055,
  "getContractAddress": 4062,
  "nonce1byte": 4080,
  "nonceIs0": 4088,
  "create2": 4089,
  "loopCreate2": 4098,
  "endloopCreate2": 4108,
  "create2end": 4113,
  "endContractAddress": 4128,
  "deploy": 4133,
  "readDeployBytecode": 4155,
  "readDeployBytecodeCreate": 4163,
  "readDeployBytecodeCreateDefault": 4173,
  "callContract": 4174,
  "checkHashBytecodeEnd": 4204,
  "readByteCode": 4208,
  "readCode": 4215,
  "endDeploy": 4216,
  "handleGas": 4230,
  "refundGas": 4239,
  "sendGasSeq": 4254,
  "invalidIntrinsicTxSignature": 4269,
  "invalidIntrinsicTxChainId": 4270,
  "invalidIntrinsicTxNonce": 4271,
  "invalidIntrinsicTxGasLimit": 4272,
  "invalidIntrinsicTxGasOverflow": 4273,
  "invalidIntrinsicTxBalance": 4274,
  "invalidIntrinsicBatchGasLimit": 4275,
  "invalidIntrinsicTxSenderCode": 4276,
  "handleIntrinsicError": 4277,
  "defaultOpCode": 4278,
  "abs": 4279,
  "absIsNeg": 4282,
  "copySP": 4286,
  "copyInit": 4292,
  "copyFinal": 4301,
  "copyEnd": 4305,
  "getLenBytes": 4307,
  "getLenBytesLoop": 4313,
  "getLenEnd": 4321,
  "getLenBits": 4326,
  "getLenBitsLoop": 4332,
  "getLenBitsEnd": 4342,
  "MSTOREX": 4347,
  "MSTORE32": 4350,
  "initMSTORE": 4359,
  "MSTOREX2": 4376,
  "finalMSTORE": 4393,
  "memAlignOptionMSTORE": 4397,
  "offsetMSTORE32": 4412,
  "endMSTORE": 4413,
  "MLOADX": 4418,
  "MLOAD32": 4421,
  "initMLOAD": 4428,
  "memAlignOptionMLOAD": 4434,
  "sliceA": 4440,
  "offsetMLOAD32": 4446,
  "endMLOAD": 4447,
  "errorMLOADMSTORE": 4451,
  "isEmptyAccount": 4452,
  "isNotEmptyAccount": 4473,
  "ISEMPTYEnd": 4474,
  "computeGasSendCall": 4478,
  "computeGasSendCallEnd": 4486,
  "saveMem": 4490,
  "saveMemGAS": 4502,
  "saveMemEnd": 4513,
  "addARITH": 4517,
  "subARITH": 4522,
  "mulARITH": 4527,
  "divARITH": 4537,
  "zeroDiv": 4559,
  "divisorSmallerDiv": 4563,
  "loadTmp": 4567,
  "storeTmp": 4572,
  "SHRarith": 4577,
  "SHRarithBit": 4589,
  "SHRarithinit": 4594,
  "SHRarith0": 4605,
  "SHRarithfinal": 4606,
  "SHLarith": 4611,
  "SHLarithBit": 4624,
  "SHLarithinit": 4629,
  "SHLarith0": 4654,
  "SHLarithBig": 4656,
  "SHLarithfinal": 4662,
  "outOfCountersStep": 4668,
  "outOfCountersKeccak": 4669,
  "outOfCountersBinary": 4670,
  "outOfCountersMemalign": 4671,
  "outOfCountersArith": 4672,
  "outOfCountersPadding": 4673,
  "outOfCountersPoseidon": 4674,
  "outOfGas": 4675,
  "invalidJump": 4676,
  "invalidOpcode": 4677,
  "stackUnderflow": 4678,
  "stackOverflow": 4679,
  "deployAddressCollision": 4680,
  "invalidStaticTx": 4681,
  "invalidCodeSize": 4682,
  "invalidCodeStartsEF": 4683,
  "handleError": 4684,
  "handleBatchError": 4697,
  "firstContextInvalid": 4699,
  "offsetUtil": 4701,
  "moveBalances": 4706,
  "endMoveBalances": 4726,
  "invalidCall": 4727,
  "readPush": 4739,
  "readPushBlock": 4753,
  "doRotate": 4767,
  "doRotateLoop": 4768,
  "endRotate": 4772,
  "endPushInit": 4776,
  "endPushLoop": 4779,
  "computeFactorLoop": 4786,
  "computeFactorEnd": 4789,
  "endPushFinal": 4791,
  "doRotate2": 4792,
  "doRotateLoop2": 4793,
  "endRotate2": 4797,
  "finalPush": 4800,
  "addBatchHashByteByByte": 4802,
  "utilsAddBatchHashBytebyByte": 4807,
  "checkBytecodeStartsEF": 4819,
  "checkBytecodeStartsEFend": 4830,
  "hashPoseidonLinearFromMemory": 4836,
  "hashPoseidonLoop": 4855,
  "hashPoseidonFinal": 4865,
  "hashPoseidonEnd": 4870,
  "hashPoseidonReturn": 4873,
  "maskAddress": 4878,
  "updateSystemData": 4882,
  "utilMULMOD": 4902,
  "mulModNoKH": 4932,
  "zeroOneMod": 4941,
  "utilMULMODend": 4942,
  "expAD": 4947,
  "expADloop": 4959,
  "expADloop0": 4974,
  "expA0D": 4977,
  "expAD0": 4979,
  "expADend": 4981
 },
 "constants": {
  "ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2": {
   "value": "995052982721906769083524541345745747257928364082",
   "type": "CONSTL",
   "line": 2,
   "fileName": "constants.zkasm"
  },
  "ADDRESS_SYSTEM": {
   "value": "1554098974",
   "type": "CONSTL",
   "line": 3,
   "fileName": "constants.zkasm"
  },
  "CALLDATA_OFFSET": {
   "value": "1024",
   "type": "CONST",
   "line": 4,
   "fileName": "constants.zkasm"
  },
  "MEMORY_LENGTH": {
   "value": "4194304",
   "type": "CONST",
   "line": 5,
   "fileName": "constants.zkasm"
  },
  "BATCH_DIFFICULTY": {
   "value": "0",
   "type": "CONST",
   "line": 6,
   "fileName": "constants.zkasm"
  },
  "TX_GAS_LIMIT": {
   "value": "30000000",
   "type": "CONST",
   "line": 7,
   "fileName": "constants.zkasm"
  },
  "GLOBAL_EXIT_ROOT_STORAGE_POS": {
   "value": "0",
   "type": "CONST",
   "line": 8,
   "fileName": "constants.zkasm"
  },
  "LOCAL_EXIT_ROOT_STORAGE_POS": {
   "value": "1",
   "type": "CONST",
   "line": 9,
   "fileName": "constants.zkasm"
  },
  "LAST_TX_STORAGE_POS": {
   "value": "0",
   "type": "CONST",
   "line": 10,
   "fileName": "constants.zkasm"
  },
  "STATE_ROOT_STORAGE_POS": {
   "value": "1",
   "type": "CONST",
   "line": 11,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_BALANCE": {
   "value": "0",
   "type": "CONST",
   "line": 14,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_NONCE": {
   "value": "1",
   "type": "CONST",
   "line": 15,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_SC_CODE": {
   "value": "2",
   "type": "CONST",
   "line": 16,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_SC_STORAGE": {
   "value": "3",
   "type": "CONST",
   "line": 17,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_SC_LENGTH": {
   "value": "4",
   "type": "CONST",
   "line": 18,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_TOUCHED_ADDR": {
   "value": "5",
   "type": "CONST",
   "line": 21,
   "fileName": "constants.zkasm"
  },
  "SMT_KEY_TOUCHED_SLOTS": {
   "value": "6",
   "type": "CONST",
   "line": 22,
   "fileName": "constants.zkasm"
  },
  "BASE_TX_GAS": {
   "value": "21000",
   "type": "CONST",
   "line": 25,
   "fileName": "constants.zkasm"
  },
  "BASE_TX_DEPLOY_GAS": {
   "value": "53000",
   "type": "CONST",
   "line": 26,
   "fileName": "constants.zkasm"
  },
  "SLOAD_GAS": {
   "value": "100",
   "type": "CONST",
   "line": 27,
   "fileName": "constants.zkasm"
  },
  "SSTORE_SET_GAS": {
   "value": "20000",
   "type": "CONST",
   "line": 28,
   "fileName": "constants.zkasm"
  },
  "SSTORE_RESET_GAS": {
   "value": "2900",
   "type": "CONST",
   "line": 29,
   "fileName": "constants.zkasm"
  },
  "SSTORE_CLEARS_SCHEDULE": {
   "value": "15000",
   "type": "CONST",
   "line": 30,
   "fileName": "constants.zkasm"
  },
  "GAS_QUICK_STEP": {
   "value": "2",
   "type": "CONST",
   "line": 31,
   "fileName": "constants.zkasm"
  },
  "GAS_FASTEST_STEP": {
   "value": "3",
   "type": "CONST",
   "line": 32,
   "fileName": "constants.zkasm"
  },
  "GAS_FAST_STEP": {
   "value": "5",
   "type": "CONST",
   "line": 33,
   "fileName": "constants.zkasm"
  },
  "GAS_MID_STEP": {
   "value": "8",
   "type": "CONST",
   "line": 34,
   "fileName": "constants.zkasm"
  },
  "GAS_SLOW_STEP": {
   "value": "10",
   "type": "CONST",
   "line": 35,
   "fileName": "constants.zkasm"
  },
  "GAS_EXT_STEP": {
   "value": "20",
   "type": "CONST",
   "line": 36,
   "fileName": "constants.zkasm"
  },
  "CALL_VALUE_TRANSFER_GAS": {
   "value": "9000",
   "type": "CONST",
   "line": 37,
   "fileName": "constants.zkasm"
  },
  "CALL_NEW_ACCOUNT_GAS": {
   "value": "25000",
   "type": "CONST",
   "line": 38,
   "fileName": "constants.zkasm"
  },
  "CALL_STIPEND": {
   "value": "2300",
   "type": "CONST",
   "line": 39,
   "fileName": "constants.zkasm"
  },
  "ECRECOVER_GAS": {
   "value": "3000",
   "type": "CONST",
   "line": 40,
   "fileName": "constants.zkasm"
  },
  "IDENTITY_GAS": {
   "value": "15",
   "type": "CONST",
   "line": 41,
   "fileName": "constants.zkasm"
  },
  "IDENTITY_WORD_GAS": {
   "value": "3",
   "type": "CONST",
   "line": 42,
   "fileName": "constants.zkasm"
  },
  "KECCAK_GAS": {
   "value": "30",
   "type": "CONST",
   "line": 43,
   "fileName": "constants.zkasm"
  },
  "KECCAK_WORD_GAS": {
   "value": "6",
   "type": "CONST",
   "line": 44,
   "fileName": "constants.zkasm"
  },
  "LOG_GAS": {
   "value": "375",
   "type": "CONST",
   "line": 45,
   "fileName": "constants.zkasm"
  },
  "LOG_TOPIC_GAS": {
   "value": "375",
   "type": "CONST",
   "line": 46,
   "fileName": "constants.zkasm"
  },
  "JUMP_DEST_GAS": {
   "value": "1",
   "type": "CONST",
   "line": 47,
   "fileName": "constants.zkasm"
  },
  "WARM_STORGE_READ_GAS": {
   "value": "100",
   "type": "CONST",
   "line": 48,
   "fileName": "constants.zkasm"
  },
  "COLD_ACCOUNT_ACCESS_COST_RED": {
   "value": "2500",
   "type": "CONST",
   "line": 49,
   "fileName": "constants.zkasm"
  },
  "COLD_ACCOUNT_ACCESS_COST": {
   "value": "2600",
   "type": "CONST",
   "line": 50,
   "fileName": "constants.zkasm"
  },
  "EXP_BYTE_GAS": {
   "value": "50",
   "type": "CONST",
   "line": 51,
   "fileName": "constants.zkasm"
  },
  "RETURN_GAS_COST": {
   "value": "200",
   "type": "CONST",
   "line": 52,
   "fileName": "constants.zkasm"
  },
  "CREATE_GAS": {
   "value": "32000",
   "type": "CONST",
   "line": 53,
   "fileName": "constants.zkasm"
  },
  "CREATE_2_GAS": {
   "value": "32000",
   "type": "CONST",
   "line": 54,
   "fileName": "constants.zkasm"
  },
  "SENDALL_GAS": {
   "value": "5000",
   "type": "CONST",
   "line": 55,
   "fileName": "constants.zkasm"
  },
  "SSTORE_ENTRY_EIP_2200_GAS": {
   "value": "2300",
   "type": "CONST",
   "line": 57,
   "fileName": "constants.zkasm"
  },
  "SSTORE_SET_EIP_2200_GAS": {
   "value": "20000",
   "type": "CONST",
   "line": 58,
   "fileName": "constants.zkasm"
  },
  "COLD_SLOAD_COST": {
   "value": "2100",
   "type": "CONST",
   "line": 59,
   "fileName": "constants.zkasm"
  },
  "COLD_SLOAD_COST_RED": {
   "value": "2000",
   "type": "CONST",
   "line": 60,
   "fileName": "constants.zkasm"
  },
  "SSTORE_DYNAMIC_GAS": {
   "value": "100",
   "type": "CONST",
   "line": 61,
   "fileName": "constants.zkasm"
  },
  "MIN_STEPS_FINISH_BATCH": {
   "value": "200",
   "type": "CONST",
   "line": 63,
   "fileName": "constants.zkasm"
  },
  "TOTAL_STEPS": {
   "value": "8388608",
   "type": "CONST",
   "line": 64,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_STEPS": {
   "value": "8388408",
   "type": "CONST",
   "line": 65,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_ARITH": {
   "value": "262144",
   "type": "CONST",
   "line": 67,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_BINARY": {
   "value": "524288",
   "type": "CONST",
   "line": 68,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_MEM_ALIGN": {
   "value": "262144",
   "type": "CONST",
   "line": 69,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_KECCAK_F": {
   "value": "2376",
   "type": "CONST",
   "line": 70,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_PADDING_PG": {
   "value": "149796",
   "type": "CONST",
   "line": 71,
   "fileName": "constants.zkasm"
  },
  "MAX_CNT_POSEIDON_G": {
   "value": "279620",
   "type": "CONST",
   "line": 72,
   "fileName": "constants.zkasm"
  },
  "MIN_CNT_KECCAK_BATCH": {
   "value": "1",
   "type": "CONST",
   "line": 73,
   "fileName": "constants.zkasm"
  },
  "MAX_NONCE": {
   "value": "18446744073709551615",
   "type": "CONSTL",
   "line": 76,
   "fileName": "constants.zkasm"
  },
  "MAX_UINT_256": {
   "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "type": "CONSTL",
   "line": 77,
   "fileName": "constants.zkasm"
  },
  "CODE_SIZE_LIMIT": {
   "value": "24576",
   "type": "CONST",
   "line": 78,
   "fileName": "constants.zkasm"
  },
  "BYTECODE_STARTS_EF": {
   "value": "239",
   "type": "CONST",
   "line": 79,
   "fileName": "constants.zkasm"
  },
  "FPEC": {
   "value": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
   "type": "CONSTL",
   "line": 1,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FPEC_MINUS_ONE": {
   "value": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
   "type": "CONSTL",
   "line": 2,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FNEC_DIV_TWO": {
   "value": "57896044618658097711785492504343953926418782139537452191302581570759080747169",
   "type": "CONSTL",
   "line": 3,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FPEC_C2_256": {
   "value": "4294968273",
   "type": "CONSTL",
   "line": 4,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FPEC_NON_SQRT": {
   "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
   "type": "CONSTL",
   "line": 5,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FNEC": {
   "value": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
   "type": "CONSTL",
   "line": 7,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "FNEC_MINUS_ONE": {
   "value": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
   "type": "CONSTL",
   "line": 8,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "ECGX": {
   "value": "55066263022277343669578718895168534326250603453777594175500187360389116729240",
   "type": "CONSTL",
   "line": 10,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "ECGY": {
   "value": "32670510020758816978083085130507043184471273380659243275938904335757337482424",
   "type": "CONSTL",
   "line": 11,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "P2_160": {
   "value": "1461501637330902918203684832716283019655932542976",
   "type": "CONSTL",
   "line": 12,
   "fileName": "ecrecover/constEc.zkasm"
  },
  "P2_96": {
   "value": "79228162514264337593543950336",
   "type": "CONSTL",
   "line": 13,
   "fileName": "ecrecover/constEc.zkasm"
  }
 }
}
